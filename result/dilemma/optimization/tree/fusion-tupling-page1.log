Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:tree), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction tree1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> induction tree1(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (tf5 (Node (tree2) (tree3)) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (tf5 (Node (tree2) (tree3)) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:4.)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:4.)
=================================================
Progress: 6


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 7


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 8


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 9


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 10


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:5.)
=================================================
Progress: 11


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 12


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 13


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 14


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a = match (tf7 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 15


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 16


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 17


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 2
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 18


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 19


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 20


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: cat (match (tf7 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
Prop: cat (1) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 1
Prop: cat (7) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 7
Prop: cat (7) (match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = 7
validate generalize_common_subterm_goal
Prop: cat (4) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 4
Prop: cat (2) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 2
Prop: cat (2) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 2
Lemma List
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 21


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1(rank : 0.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:13.)
=================================================
Progress: 22


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 23


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any1(rank:13.)
intro tree2(rank:13.)
induction tree2(rank:22.)
=================================================
Progress: 24


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:14.)
=================================================
Progress: 25


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 26


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 27


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 28


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:13.)
=================================================
Progress: 29


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
any1 : any
---------------------------------------
cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat (8) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 8
Prop: cat (8) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 8
Prop: cat (6) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 6
asdf
=================================================
Progress: 30


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 31


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 32


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 33


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 34


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
(nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::1) = 1
Prop: (SUCC (ZERO)::1) = 1
Prop: (ZERO::5) = 5
asdf
=================================================
Progress: 35


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:5.)
=================================================
Progress: 36


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 37


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:5.)
=================================================
Progress: 38


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 39


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 40


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
Prop: cat (5) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 5
Prop: cat (2) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 2
Prop: cat (0) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 0
validate generalize_common_subterm_goal
Prop: cat (4) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 4
Prop: cat (1) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 1
Prop: cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
Prop: cat (1) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 1
Prop: cat (5) (match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a) = 5
Prop: cat (0) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 0
validate generalize_common_subterm_goal
Prop: cat (7) (match (tf5 (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = 7
Prop: cat (8) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 8
Prop: cat (1) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 1
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Lemma List
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 41


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1(rank : 0.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:13.)
=================================================
Progress: 42


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 43


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: cat (1) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 1
Prop: cat (2) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 2
Prop: cat (3) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 3
validate generalize_common_subterm_goal
Prop: cat (6) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 6
Prop: cat (1) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 1
Prop: cat (8) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 8
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = match (tf7 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
=================================================
Progress: 44


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite <- IH1 in goal at 0
Prop: cat (7) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 7
Prop: cat (2) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 2
Prop: cat (5) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 5
validate generalize_common_subterm_goal
Prop: cat (1) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 1
Prop: cat (5) (match (tf5 (Node (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) (Leaf (ZERO))) (Node (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 5
Prop: cat (6) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 6
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a
=================================================
Progress: 45


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any1(rank:13.)
intro tree2(rank:13.)
induction tree2(rank:22.)
=================================================
Progress: 46


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:14.)
=================================================
Progress: 47


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 48


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 49


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 50


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:13.)
=================================================
Progress: 51


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
any1 : any
---------------------------------------
cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (7) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 7
Prop: cat (3) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 3
asdf
=================================================
Progress: 52


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 53


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 54


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 55


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 56


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
(nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: (ZERO::0) = 0
Prop: (ZERO::8) = 8
Prop: (SUCC (SUCC (SUCC (SUCC (ZERO))))::2) = 2
asdf
=================================================
Progress: 57


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:5.)
=================================================
Progress: 58


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 59


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 60


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
rewrite IH1 in goal at 0
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) (Leaf (SUCC (ZERO)))) (Node (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a = cat (match (tf7 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
rewrite IH1 in goal at 0
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a = cat (match (tf7 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
rewrite IH1 in goal at 0
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
Prop: 0 = cat (0) (match (tf7 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a)
Prop: 8 = cat (8) (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a)
Prop: 0 = cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
validate generalize_common_subterm_goal
Prop: 8 = cat (8) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: 0 = cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: 2 = cat (2) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Lemma List
forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 61


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:13.)
=================================================
Progress: 62


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any1(rank:13.)
intro tree2(rank:13.)
induction tree2(rank:22.)
=================================================
Progress: 63


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:14.)
=================================================
Progress: 64


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 65


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 66


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
---------------------------------------
forall (any1:any), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 67


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
---------------------------------------
forall (any1:any), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond3 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:13.)
=================================================
Progress: 68


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond3 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond3 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
any1 : any
---------------------------------------
any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: 7 = cat (7) (match (tf7 (Node (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: 6 = cat (6) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: 0 = cat (0) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
asdf
=================================================
Progress: 69


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 70


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 71


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 72


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 73


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: 3 = (ZERO::3)
Prop: 1 = (ZERO::1)
Prop: 5 = (ZERO::5)
asdf
=================================================
Progress: 74


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
Prop: cat (1) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 1
Prop: cat (5) (match (tf5 (Node (Leaf (ZERO)) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) (Node (Leaf (ZERO)) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) = 5
Prop: cat (2) (match (tf5 (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))))) (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))))) with
| Tuple2 a _ -> a) = 2
validate generalize_common_subterm_goal
Prop: cat (5) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 5
Prop: cat (1) (match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = 1
Prop: cat (7) (match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) = 7
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
Prop: cat (0) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (6) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 6
Prop: cat (8) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 8
validate generalize_common_subterm_goal
Prop: cat (2) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 2
Prop: cat (0) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (1) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 1
=================================================
Progress: 75


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
Prop: cat (2) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 2
Prop: cat (1) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 1
Prop: cat (4) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 4
validate generalize_common_subterm_goal
Prop: cat (0) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (1) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 1
Prop: cat (4) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 4
=================================================
Progress: 76


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 77


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: 0 = cat (0) (match (tf5 (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO)))) (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a)
Prop: 2 = cat (2) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Prop: 7 = cat (7) (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
validate generalize_common_subterm_goal
Prop: 4 = cat (4) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: 4 = cat (4) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: 3 = cat (3) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
Prop: 6 = cat (6) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: 1 = cat (1) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
Prop: 8 = cat (8) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
validate generalize_common_subterm_goal
Prop: 0 = cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: 0 = cat (0) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Prop: 3 = cat (3) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: match (tf5 (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Lemma List
forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 78


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:13.)
=================================================
Progress: 79


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any1(rank:13.)
intro tree2(rank:13.)
induction tree2(rank:22.)
=================================================
Progress: 80


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:14.)
=================================================
Progress: 81


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 82


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 83


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
---------------------------------------
forall (any1:any), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 84


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
---------------------------------------
forall (any1:any), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond3 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:13.)
=================================================
Progress: 85


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond3 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond3 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
any1 : any
---------------------------------------
any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: 3 = cat (3) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: 7 = cat (7) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: 2 = cat (2) (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
asdf
=================================================
Progress: 86


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 87


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 88


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 89


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 90


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> any1 = cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
any1 = (nat1::any1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: 5 = (ZERO::5)
Prop: 0 = (SUCC (ZERO)::0)
Prop: 7 = (SUCC (ZERO)::7)
asdf
=================================================
Progress: 91


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 92


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: 0 = cat (0) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: 6 = cat (6) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Prop: 4 = cat (4) (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))))) with
| Tuple2 a _ -> a)
validate generalize_common_subterm_goal
Prop: 6 = cat (6) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Prop: 5 = cat (5) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: 4 = cat (4) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
Prop: 0 = cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: 2 = cat (2) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: 6 = cat (6) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
validate generalize_common_subterm_goal
Prop: 5 = cat (5) (match (tf7 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a)
Prop: 2 = cat (2) (match (tf7 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
Prop: 0 = cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
=================================================
Progress: 93


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: match (tf5 (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a = cat (match (tf7 (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
Prop: match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: match (tf5 (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (ZERO)))))) (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a = cat (match (tf7 (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (SUCC (ZERO))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a)
Prop: match (tf5 (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) (Leaf (ZERO))) (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = cat (match (tf7 (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a)
Lemma List
forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 94


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:14.)
=================================================
Progress: 95


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:14.)
=================================================
Progress: 96


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:13.)
=================================================
Progress: 97


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (Node (tree3) (tree4)) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (Node (tree3) (tree4)) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = cat (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 98


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (Node (tree3) (tree4)) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (Node (tree3) (tree4)) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = cat (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (tree2:tree), gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:14.)
=================================================
Progress: 99


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:13.)
=================================================
Progress: 100


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (Node (tree3) (tree4)) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (Node (tree3) (tree4)) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = cat (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 101


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (Node (tree3) (tree4)) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (Node (tree3) (tree4)) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = cat (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (tree2:tree), gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:14.)
=================================================
Progress: 102


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (tree2:tree), gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true->gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 103


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (tree2:tree), gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true->gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 104


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true->gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true->gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 105


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true->gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true->gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 106


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true->gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 107


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true->gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 108


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 109


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 110


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:15.)
case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))(rank:15.)
=================================================
Progress: 111


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:15.)
case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))(rank:15.)
=================================================
Progress: 112


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : true = false
Cond3 : nat_eq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 113


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : true = false
Cond3 : nat_eq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))(rank:15.)
case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:15.)
=================================================
Progress: 114


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:16.)
=================================================
Progress: 115


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : true = false
Cond3 : nat_eq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 116


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : true = false
Cond3 : nat_eq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))(rank:15.)
case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:15.)
=================================================
Progress: 117


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:16.)
=================================================
Progress: 118


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:16.)
=================================================
Progress: 119


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))(rank:16.)
=================================================
Progress: 120


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:16.)
=================================================
Progress: 121


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))(rank:16.)
=================================================
Progress: 122


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : true = false
Cond3 : nat_eq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:15.)
=================================================
Progress: 123


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : true = false
Cond3 : nat_eq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

3 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:16.)
=================================================
Progress: 124


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : true = false
Cond3 : nat_eq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:15.)
=================================================
Progress: 125


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : true = false
Cond3 : nat_eq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

3 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:16.)
=================================================
Progress: 126


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case3 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
discriminate
case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))
case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = (SUCC (ZERO)::cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a))
Prop: match (tf5 (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a = (SUCC (ZERO)::cat (match (tf7 (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a))
Prop: match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = (SUCC (ZERO)::cat (match (tf7 (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case3 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 127


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case3 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat1(rank:27.)
intro tree2(rank:27.)
induction tree1(rank:36.)
induction tree2(rank:36.)
intro tree1(rank:27.)
=================================================
Progress: 128


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
Case3 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
discriminate
case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = (SUCC (ZERO)::cat (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a))
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = (SUCC (SUCC (ZERO))::cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a))
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = (ZERO::cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
Case3 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 129


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
Case3 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat1(rank:27.)
intro tree2(rank:27.)
induction tree1(rank:36.)
induction tree2(rank:36.)
intro tree1(rank:27.)
=================================================
Progress: 130


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case3 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
discriminate
case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))
case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = (SUCC (ZERO)::cat (match (tf7 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a))
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = (ZERO::cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a))
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = (ZERO::cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case3 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 131


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case3 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat1(rank:27.)
intro tree2(rank:27.)
induction tree1(rank:36.)
induction tree2(rank:36.)
intro tree1(rank:27.)
=================================================
Progress: 132


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 _ b -> b)) (ZERO) = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree3) (tree4)) else if nat_eq (depth (snd3 (tf5 (tree3) (tree3)))) (depth (snd3 (tf5 (tree4) (tree4)))) then Tuple2 (cat (fst3 (tf5 (tree3) (tree3))) (fst3 (tf5 (tree4) (tree4)))) (Node (tree3) (tree4)) else Tuple2 (fst3 (tf5 (tree4) (tree4))) (Node (tree3) (tree4))) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
Case3 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
discriminate
case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = (ZERO::cat (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a))
Prop: match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = (SUCC (ZERO)::cat (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a))
Prop: match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = (ZERO::cat (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
Case3 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 133


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
Case3 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat1(rank:27.)
intro tree2(rank:27.)
induction tree1(rank:36.)
induction tree2(rank:36.)
intro tree1(rank:27.)
=================================================
Progress: 134


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
discriminate
case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = (SUCC (SUCC (ZERO))::cat (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a))
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = (SUCC (ZERO)::cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a))
Prop: match (tf5 (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = (SUCC (ZERO)::cat (match (tf7 (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 135


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat1(rank:27.)
intro tree2(rank:27.)
induction tree1(rank:36.)
induction tree2(rank:36.)
intro tree1(rank:27.)
=================================================
Progress: 136


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = false
Cond3 : nat_eq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
case gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
discriminate
case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = (ZERO::cat (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a))
Prop: match (tf5 (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = (ZERO::cat (match (tf7 (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a))
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = (ZERO::cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 137


1st goal of : forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
IH2 : forall (tree2:tree), gq (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree4) (tree4)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Cond2 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false
Cond3 : nat_eq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree4) (tree4)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), true = true->gq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = false->nat_eq (plus (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = (nat1::cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat1(rank:27.)
intro tree2(rank:27.)
induction tree1(rank:36.)
induction tree2(rank:36.)
intro tree1(rank:27.)
=================================================
Progress: 138


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
rewrite IH1 in goal at 0
Prop: cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (2) (match (tf7 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 2
validate generalize_common_subterm_goal
Prop: cat (0) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 0
Prop: cat (7) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 7
Prop: cat (4) (match (tf7 (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 4
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
Prop: cat (0) (match (tf7 (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = 0
Prop: cat (3) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 3
Prop: cat (1) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 1
validate generalize_common_subterm_goal
Prop: cat (7) (match (tf7 (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 7
Prop: cat (7) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 7
Prop: cat (2) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 2
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
Prop: cat (4) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 4
Prop: cat (5) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 5
Prop: cat (0) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
validate generalize_common_subterm_goal
Prop: cat (6) (match (tf5 (Node (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) (Node (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = 6
Prop: cat (5) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 5
Prop: cat (4) (match (tf5 (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) = 4
=================================================
Progress: 139


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = match (tf7 (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
Prop: cat (2) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 2
Prop: cat (1) (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 1
Prop: cat (4) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 4
validate generalize_common_subterm_goal
Prop: cat (6) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 6
Prop: cat (0) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 0
Prop: cat (3) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 3
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
