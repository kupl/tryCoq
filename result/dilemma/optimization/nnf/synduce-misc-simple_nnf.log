Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (nnf:nnfformula), main (nnf) = mainNew (nnf)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)

---------------------------------------
forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)

---------------------------------------
forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)

---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:6.)
=================================================
Progress: 3


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)

---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nnfformula1(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
spec (repr (Nfneglit (bool1))) = mainNew (Nfneglit (bool1))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 4


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
spec (repr (Nfneglit (bool1))) = mainNew (Nfneglit (bool1))

3 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nflit (bool1)
---------------------------------------
spec (repr (Nflit (bool1))) = mainNew (Nflit (bool1))

2 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 5


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nflit (bool1)
---------------------------------------
spec (repr (Nflit (bool1))) = mainNew (Nflit (bool1))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
spec (repr (Nfand (nnfformula2) (nnfformula3))) = mainNew (Nfand (nnfformula2) (nnfformula3))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 6


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
spec (repr (Nfand (nnfformula2) (nnfformula3))) = mainNew (Nfand (nnfformula2) (nnfformula3))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case mainNew (nnfformula2)(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
case spec (repr (nnfformula2))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 7


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 8


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case spec (repr (nnfformula2))(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case mainNew (nnfformula2)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 9


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 10


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if mainNew (nnfformula2) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case mainNew (nnfformula2)(rank:5.)
=================================================
Progress: 11


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if mainNew (nnfformula2) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 12


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:4.)
=================================================
Progress: 13


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 4.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case mainNew (nnfformula2)(rank:5.)
=================================================
Progress: 14


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: Nflit (true) = Nfneglit (false)
Prop: Nfor (Nfor (Nfand (Nfor (Nflit (true)) (Nfand (Nfand (Nflit (false)) (Nflit (true))) (Nfneglit (true)))) (Nflit (true))) (Nfand (Nfand (Nfor (Nflit (false)) (Nfneglit (false))) (Nfand (Nflit (true)) (Nfneglit (true)))) (Nflit (true)))) (Nflit (true)) = Nflit (true)
Prop: Nfneglit (true) = Nfor (Nflit (false)) (Nflit (false))
Prop: spec (repr (Nflit (true))) = spec (repr (Nflit (true)))
Prop: spec (repr (Nfand (Nfand (Nfneglit (false)) (Nflit (false))) (Nflit (false)))) = spec (repr (Nfor (Nflit (true)) (Nfneglit (false))))
Prop: spec (repr (Nfand (Nfand (Nfand (Nfor (Nflit (true)) (Nfneglit (true))) (Nflit (true))) (Nflit (true))) (Nflit (true)))) = spec (repr (Nfneglit (true)))
asdf
=================================================
Progress: 15


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case mainNew (nnfformula2)(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 16


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 17


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if spec (repr (nnfformula2)) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case spec (repr (nnfformula2))(rank:5.)
=================================================
Progress: 18


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if spec (repr (nnfformula2)) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case spec (repr (nnfformula2))(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 19


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case spec (repr (nnfformula2))(rank:5.)
=================================================
Progress: 20


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case spec (repr (nnfformula2))(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case mainNew (nnfformula2)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 21


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 0(rank:14.)
=================================================
Progress: 22


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 23


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 24


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
=================================================
Progress: 25


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
=================================================
Progress: 26


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (false))) then spec (repr (Nflit (false))) else false = spec (repr (Nfor (Nfor (Nflit (false)) (Nfand (Nflit (false)) (Nfneglit (true)))) (Nfor (Nflit (false)) (Nfand (Nflit (false)) (Nflit (false))))))
Prop: if spec (repr (Nfor (Nfor (Nfand (Nflit (true)) (Nfneglit (true))) (Nfand (Nflit (false)) (Nfneglit (false)))) (Nfneglit (false)))) then spec (repr (Nfor (Nfor (Nfand (Nflit (true)) (Nfneglit (true))) (Nfand (Nflit (false)) (Nfneglit (false)))) (Nfneglit (false)))) else false = spec (repr (Nfand (Nfor (Nflit (true)) (Nfneglit (true))) (Nfneglit (false))))
Prop: if spec (repr (Nflit (true))) then spec (repr (Nflit (true))) else false = spec (repr (Nfor (Nfneglit (false)) (Nfneglit (false))))
previous tactics
simpl in goal
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfor (Nflit (true)) (Nflit (true)))) then spec (repr (Nfor (Nflit (true)) (Nflit (true)))) else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nfor (Nflit (true)) (Nfor (Nfneglit (true)) (Nfneglit (true))))) then spec (repr (Nfor (Nflit (true)) (Nfor (Nfneglit (true)) (Nfneglit (true))))) else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nfor (Nflit (false)) (Nflit (false)))) then spec (repr (Nfor (Nflit (false)) (Nflit (false)))) else false = mainNew (Nfand (Nflit (true)) (Nfand (Nfand (Nflit (true)) (Nfand (Nfand (Nflit (false)) (Nflit (false))) (Nfand (Nflit (true)) (Nfneglit (true))))) (Nflit (false))))
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 27


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 28


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 29


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 30


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 31


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 32


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 33


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 34


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 35


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 36


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 37


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 38


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 39


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 40


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 41


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 42


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 43


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 44


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 45


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 46


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if mainNew (Nflit (true)) then spec (repr (Nfneglit (true))) else false
Prop: mainNew (Nfneglit (true)) = if mainNew (Nfneglit (true)) then spec (repr (Nfand (Nfand (Nfor (Nflit (true)) (Nflit (true))) (Nflit (false))) (Nfand (Nfand (Nfneglit (true)) (Nfneglit (true))) (Nfneglit (true))))) else false
Prop: mainNew (Nfneglit (true)) = if mainNew (Nfneglit (true)) then spec (repr (Nflit (true))) else false
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if mainNew (Nfneglit (false)) then mainNew (Nflit (true)) else false
Prop: mainNew (Nfand (Nfand (Nflit (true)) (Nfneglit (true))) (Nflit (false))) = if mainNew (Nfand (Nfand (Nflit (true)) (Nfneglit (true))) (Nflit (false))) then mainNew (Nfneglit (false)) else false
Prop: mainNew (Nfneglit (true)) = if mainNew (Nfneglit (true)) then mainNew (Nfor (Nfneglit (true)) (Nfneglit (false))) else false
previous tactics
simpl in goal
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nfor (Nflit (false)) (Nfand (Nfand (Nfand (Nflit (true)) (Nfneglit (false))) (Nfor (Nflit (false)) (Nflit (true)))) (Nfneglit (true)))) then mainNew (Nfneglit (false)) else false
Prop: true = if mainNew (Nfneglit (false)) then mainNew (Nfneglit (true)) else false
Prop: true = if mainNew (Nfneglit (true)) then mainNew (Nfor (Nfand (Nfand (Nflit (false)) (Nfneglit (false))) (Nfneglit (true))) (Nfneglit (false))) else false
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 47


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 48


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> mainNew (Nfneglit (bool1)) = if mainNew (Nfneglit (bool1)) then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 49


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> mainNew (Nfneglit (bool1)) = if mainNew (Nfneglit (bool1)) then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 50


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 2(rank:16.)
rewrite Cond1 in goal at 0(rank:24.)
rewrite Cond1 in goal at 1(rank:24.)
=================================================
Progress: 51


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case mainNew (nnfformula2)(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 52


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:14.)
rewrite Case1 in goal at 0(rank:22.)
=================================================
Progress: 53


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 54


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 55


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 56


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
rewrite <- Case1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfor (Nflit (false)) (Nfor (Nfand (Nfand (Nfneglit (false)) (Nfneglit (true))) (Nfneglit (true))) (Nfor (Nfor (Nflit (true)) (Nfneglit (true))) (Nfor (Nfneglit (true)) (Nflit (false)))))) (Nflit (true))) = spec (repr (Nfor (Nflit (true)) (Nfneglit (false))))
Prop: mainNew (Nfor (Nfand (Nfneglit (true)) (Nfneglit (false))) (Nfor (Nflit (true)) (Nflit (false)))) = spec (repr (Nflit (true)))
Prop: mainNew (Nflit (true)) = spec (repr (Nflit (true)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfor (Nfneglit (false)) (Nfneglit (true)) = Nfor (Nflit (false)) (Nflit (true))
Prop: Nfand (Nfneglit (false)) (Nfneglit (true)) = Nflit (false)
Prop: Nflit (false) = Nfneglit (false)
Prop: mainNew (Nfor (Nfor (Nfneglit (false)) (Nfneglit (true))) (Nfand (Nflit (true)) (Nfneglit (true)))) = mainNew (Nfneglit (true))
Prop: mainNew (Nfneglit (true)) = mainNew (Nfor (Nfand (Nfand (Nfneglit (true)) (Nfand (Nfand (Nfneglit (true)) (Nfneglit (true))) (Nflit (true)))) (Nflit (false))) (Nfneglit (false)))
Prop: mainNew (Nfand (Nfneglit (true)) (Nflit (true))) = mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfor (Nfor (Nfor (Nfneglit (true)) (Nfneglit (false))) (Nflit (true))) (Nflit (true)))
Prop: true = mainNew (Nfor (Nfneglit (false)) (Nfneglit (false)))
Prop: true = mainNew (Nfneglit (false))
Lemma List
forall (nnfformula1:nnfformula), true = mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 57


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula), true = mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula), true = mainNew (nnfformula1)

---------------------------------------
forall (nnfformula1:nnfformula), true = mainNew (nnfformula1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 58


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 59


1st goal of : forall (nnfformula1:nnfformula), true = mainNew (nnfformula1)

---------------------------------------
forall (nnfformula1:nnfformula), true = mainNew (nnfformula1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula), true = mainNew (nnfformula1)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 60


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> mainNew (Nfneglit (bool1)) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 61


1st goal of : forall (nnfformula1:nnfformula), true = mainNew (nnfformula1)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula), true = mainNew (nnfformula1)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 62


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> mainNew (Nfneglit (bool1)) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 63


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 64


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 65


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 66


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 67


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 68


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 69


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = mainNew (Nfand (Nflit (true)) (Nflit (false)))
Prop: spec (repr (Nfor (Nflit (false)) (Nflit (false)))) = mainNew (Nflit (false))
Prop: spec (repr (Nflit (true))) = mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfor (Nfneglit (false)) (Nfneglit (true)))
Prop: true = mainNew (Nfand (Nflit (false)) (Nfneglit (true)))
Prop: true = mainNew (Nfneglit (true))
asdf
=================================================
Progress: 70


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 71


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 72


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 73


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 74


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (true)) (Nflit (true))) = spec (repr (Nfneglit (false)))
Prop: mainNew (Nfor (Nflit (false)) (Nfneglit (false))) = spec (repr (Nflit (true)))
Prop: mainNew (Nfneglit (false)) = spec (repr (Nfand (Nflit (false)) (Nflit (false))))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfor (Nfneglit (true)) (Nfneglit (true)) = Nfand (Nflit (true)) (Nflit (false))
Prop: Nfand (Nfand (Nflit (false)) (Nfor (Nfneglit (true)) (Nfneglit (false)))) (Nfneglit (true)) = Nfneglit (false)
Prop: Nflit (true) = Nfor (Nfand (Nflit (false)) (Nflit (false))) (Nfand (Nfand (Nfneglit (false)) (Nfneglit (true))) (Nfand (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nfneglit (true)))))
Prop: mainNew (Nflit (true)) = mainNew (Nfneglit (true))
Prop: mainNew (Nflit (false)) = mainNew (Nfor (Nflit (true)) (Nfand (Nfneglit (false)) (Nflit (false))))
Prop: mainNew (Nfneglit (true)) = mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfor (Nflit (false)) (Nfneglit (true)))
Prop: true = mainNew (Nfneglit (true))
Prop: true = mainNew (Nfneglit (false))
asdf
=================================================
Progress: 75


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 76


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfand (Nfand (Nfneglit (true)) (Nflit (true))) (Nflit (true)) = Nfor (Nfor (Nflit (false)) (Nflit (true))) (Nflit (true))
Prop: Nfand (Nflit (false)) (Nfneglit (false)) = Nfor (Nflit (false)) (Nfneglit (true))
Prop: Nfneglit (false) = Nfor (Nfand (Nfand (Nfor (Nflit (false)) (Nfneglit (false))) (Nfneglit (true))) (Nfor (Nfneglit (false)) (Nflit (false)))) (Nfand (Nfneglit (false)) (Nfneglit (true)))
Prop: spec (repr (Nfor (Nfneglit (true)) (Nfneglit (false)))) = spec (repr (Nflit (true)))
Prop: spec (repr (Nflit (true))) = spec (repr (Nfor (Nfor (Nflit (false)) (Nfneglit (false))) (Nfneglit (true))))
Prop: spec (repr (Nfneglit (true))) = spec (repr (Nflit (false)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = mainNew (Nflit (false))
Prop: spec (repr (Nfneglit (true))) = mainNew (Nflit (false))
Prop: spec (repr (Nflit (false))) = mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfneglit (true))
Prop: true = mainNew (Nfand (Nflit (false)) (Nfand (Nfneglit (true)) (Nfneglit (true))))
Prop: true = mainNew (Nflit (true))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 77


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 78


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> spec (repr (Nfneglit (bool1))) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 79


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> spec (repr (Nfneglit (bool1))) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 80


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 81


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 82


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 83


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 84


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 85


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if mainNew (Nflit (false)) then mainNew (Nfneglit (true)) else false
Prop: mainNew (Nfand (Nflit (false)) (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nfneglit (true)))) = if mainNew (Nfand (Nflit (false)) (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nfneglit (true)))) then mainNew (Nflit (false)) else false
Prop: mainNew (Nflit (true)) = if mainNew (Nflit (true)) then mainNew (Nfneglit (true)) else false
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if mainNew (Nflit (true)) then spec (repr (Nfor (Nfor (Nfor (Nfand (Nflit (true)) (Nflit (true))) (Nfand (Nfneglit (false)) (Nflit (true)))) (Nfneglit (true))) (Nflit (false)))) else false
Prop: mainNew (Nflit (false)) = if mainNew (Nflit (false)) then spec (repr (Nflit (false))) else false
Prop: mainNew (Nflit (false)) = if mainNew (Nflit (false)) then spec (repr (Nfneglit (true))) else false
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nflit (true)) then spec (repr (Nfor (Nflit (true)) (Nflit (false)))) else false
Prop: true = if mainNew (Nfneglit (true)) then spec (repr (Nflit (false))) else false
Prop: true = if mainNew (Nflit (false)) then spec (repr (Nfor (Nflit (true)) (Nflit (true)))) else false
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 86


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 87


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 88


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 89


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case mainNew (nnfformula1)(rank:6.)
rewrite <- Cond1 in goal at 0(rank:13.)
=================================================
Progress: 90


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> case mainNew (nnfformula1)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:14.)
induction nnfformula2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 91


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> mainNew (Nfneglit (bool1)) = if mainNew (Nfneglit (bool1)) then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 92


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> mainNew (Nfneglit (bool1)) = if mainNew (Nfneglit (bool1)) then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 93


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 2(rank:16.)
rewrite Cond1 in goal at 0(rank:24.)
rewrite Cond1 in goal at 1(rank:24.)
=================================================
Progress: 94


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 95


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case mainNew (nnfformula2)(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 96


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
=================================================
Progress: 97


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 98


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:13.)
=================================================
Progress: 99


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 100


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- Case1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfneglit (true)) (Nflit (true))) = spec (repr (Nfneglit (false)))
Prop: mainNew (Nfneglit (true)) = spec (repr (Nflit (true)))
Prop: mainNew (Nfneglit (false)) = spec (repr (Nflit (true)))
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (true) = Nfneglit (false)
Prop: Nfneglit (true) = Nfneglit (false)
Prop: Nfneglit (true) = Nfor (Nfneglit (true)) (Nfor (Nflit (true)) (Nfneglit (true)))
Prop: mainNew (Nfor (Nfand (Nfneglit (false)) (Nfor (Nflit (true)) (Nfneglit (true)))) (Nfneglit (true))) = mainNew (Nfneglit (true))
Prop: mainNew (Nfand (Nfand (Nflit (false)) (Nfand (Nfor (Nfneglit (true)) (Nflit (false))) (Nfneglit (true)))) (Nfor (Nfand (Nfneglit (true)) (Nflit (true))) (Nflit (false)))) = mainNew (Nflit (true))
Prop: mainNew (Nfneglit (false)) = mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfneglit (true))
Prop: true = mainNew (Nflit (true))
Prop: true = mainNew (Nfor (Nflit (true)) (Nfor (Nflit (true)) (Nfneglit (true))))
asdf
=================================================
Progress: 101


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 102


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (false) = Nflit (false)
Prop: Nfneglit (true) = Nfneglit (false)
Prop: Nflit (false) = Nflit (false)
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
parent
repr (nnfformula2)
lower
repr(_)
upper
spec(_)
remove upper
repr(nnfformula3)
remove lower
repr(nnfformula3)
remove upper
repr(nnfformula2)
remove lower
repr(_)
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfneglit (true)) (Nfor (Nfand (Nfor (Nflit (true)) (Nflit (true))) (Nflit (true))) (Nflit (false))))) = mainNew (Nfand (Nfand (Nfand (Nfor (Nfneglit (false)) (Nflit (false))) (Nflit (true))) (Nfor (Nfneglit (true)) (Nfneglit (true)))) (Nfand (Nfneglit (true)) (Nfor (Nfneglit (false)) (Nflit (true)))))
Prop: spec (repr (Nflit (true))) = mainNew (Nfneglit (true))
Prop: spec (repr (Nflit (false))) = mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfand (Nfor (Nfand (Nfneglit (false)) (Nfor (Nfor (Nfor (Nflit (true)) (Nflit (false))) (Nflit (true))) (Nflit (true)))) (Nfneglit (false))) (Nfneglit (true)))
Prop: true = mainNew (Nfand (Nfor (Nflit (true)) (Nflit (false))) (Nflit (true)))
Prop: true = mainNew (Nfand (Nflit (true)) (Nfand (Nflit (false)) (Nflit (false))))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 103


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 104


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 105


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula2(rank:5.)
=================================================
Progress: 106


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula2(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
---------------------------------------
nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Nfneglit (true) = Nflit (true)
Prop: Nfor (Nfor (Nflit (true)) (Nfor (Nflit (false)) (Nfneglit (false)))) (Nfneglit (true)) = Nfneglit (true)
Prop: Nfand (Nfneglit (false)) (Nflit (false)) = Nflit (false)
asdf
=================================================
Progress: 107


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:5.)
=================================================
Progress: 108


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: if mainNew (Nfand (Nflit (true)) (Nfneglit (false))) then spec (repr (Nfand (Nflit (true)) (Nfneglit (false)))) else false = spec (repr (Nflit (true)))
Prop: if mainNew (Nfneglit (true)) then spec (repr (Nfneglit (true))) else false = spec (repr (Nflit (true)))
Prop: if mainNew (Nfneglit (true)) then spec (repr (Nfneglit (true))) else false = spec (repr (Nflit (false)))
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if true then spec (repr (Nflit (false))) else false = spec (repr (Nflit (true)))
Prop: if true then spec (repr (Nflit (true))) else false = spec (repr (Nfor (Nfneglit (true)) (Nflit (true))))
Prop: if true then spec (repr (Nflit (true))) else false = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: if true then spec (repr (Nflit (false))) else false = mainNew (Nflit (false))
Prop: if true then spec (repr (Nflit (false))) else false = mainNew (Nflit (false))
Prop: if true then spec (repr (Nfor (Nflit (true)) (Nflit (false)))) else false = mainNew (Nfor (Nfand (Nflit (false)) (Nflit (true))) (Nfand (Nfneglit (true)) (Nfor (Nfor (Nflit (false)) (Nfor (Nflit (false)) (Nflit (true)))) (Nflit (true)))))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfand (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nflit (false)))) (Nfand (Nfneglit (true)) (Nfneglit (false))))) then spec (repr (Nfand (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nflit (false)))) (Nfand (Nfneglit (true)) (Nfneglit (false))))) else false = mainNew (Nfor (Nfand (Nflit (true)) (Nflit (false))) (Nfneglit (false)))
Prop: if spec (repr (Nflit (true))) then spec (repr (Nflit (true))) else false = mainNew (Nfand (Nfor (Nflit (true)) (Nfneglit (false))) (Nfneglit (false)))
Prop: if spec (repr (Nflit (false))) then spec (repr (Nflit (false))) else false = mainNew (Nfneglit (false))
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 109


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 110


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if mainNew (Nfneglit (bool1)) then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 111


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if mainNew (Nfneglit (bool1)) then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 112


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 113


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 114


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 115


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 116


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 117


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 118


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 119


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 120


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:5.)
=================================================
Progress: 121


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (false))) then mainNew (Nflit (false)) else false = spec (repr (Nfor (Nflit (false)) (Nfor (Nflit (false)) (Nflit (true)))))
Prop: if spec (repr (Nfneglit (true))) then mainNew (Nfneglit (true)) else false = spec (repr (Nfor (Nflit (true)) (Nflit (false))))
Prop: if spec (repr (Nfneglit (true))) then mainNew (Nfneglit (true)) else false = spec (repr (Nflit (true)))
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (true))) then true else false = spec (repr (Nflit (false)))
Prop: if spec (repr (Nfor (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nfor (Nfor (Nflit (false)) (Nfneglit (false))) (Nflit (false))))) then true else false = spec (repr (Nflit (false)))
Prop: if spec (repr (Nflit (false))) then true else false = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfor (Nfor (Nflit (false)) (Nflit (true))) (Nflit (true)))) then true else false = mainNew (Nflit (false))
Prop: if spec (repr (Nflit (false))) then true else false = mainNew (Nfneglit (true))
Prop: if spec (repr (Nfor (Nflit (false)) (Nflit (true)))) then true else false = mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfand (Nfneglit (true)) (Nfor (Nflit (true)) (Nflit (true))))) then spec (repr (Nfand (Nfneglit (true)) (Nfor (Nflit (true)) (Nflit (true))))) else false = mainNew (Nfand (Nfand (Nfand (Nfneglit (true)) (Nfneglit (true))) (Nfneglit (true))) (Nfneglit (true)))
Prop: if spec (repr (Nfor (Nfand (Nfor (Nflit (true)) (Nflit (true))) (Nfneglit (true))) (Nfneglit (true)))) then spec (repr (Nfor (Nfand (Nfor (Nflit (true)) (Nflit (true))) (Nfneglit (true))) (Nfneglit (true)))) else false = mainNew (Nflit (false))
Prop: if spec (repr (Nfand (Nfneglit (false)) (Nfneglit (true)))) then spec (repr (Nfand (Nfneglit (false)) (Nfneglit (true)))) else false = mainNew (Nfor (Nflit (false)) (Nflit (true)))
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 122


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 123


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 124


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 125


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 126


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 127


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 128


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 129


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 130


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 131


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 132


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 133


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: Nflit (true) = Nfand (Nfor (Nflit (true)) (Nfneglit (true))) (Nfor (Nfor (Nflit (true)) (Nfneglit (false))) (Nflit (true)))
Prop: Nfor (Nflit (true)) (Nflit (true)) = Nflit (true)
Prop: Nfneglit (true) = Nfneglit (false)
Prop: spec (repr (Nfneglit (true))) = spec (repr (Nfneglit (false)))
Prop: spec (repr (Nfneglit (false))) = spec (repr (Nfor (Nflit (false)) (Nfneglit (false))))
Prop: spec (repr (Nfneglit (false))) = spec (repr (Nflit (false)))
asdf
=================================================
Progress: 134


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfneglit (false)) (Nfor (Nflit (false)) (Nflit (false))))) = if mainNew (Nfand (Nfneglit (false)) (Nfor (Nflit (false)) (Nflit (false)))) then spec (repr (Nfor (Nfand (Nflit (true)) (Nflit (false))) (Nflit (false)))) else false
Prop: spec (repr (Nfneglit (false))) = if mainNew (Nfneglit (false)) then spec (repr (Nflit (false))) else false
Prop: spec (repr (Nfneglit (true))) = if mainNew (Nfneglit (true)) then spec (repr (Nflit (false))) else false
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if mainNew (Nfneglit (true)) then mainNew (Nfneglit (false)) else false
Prop: spec (repr (Nfneglit (false))) = if mainNew (Nfneglit (false)) then mainNew (Nflit (false)) else false
Prop: spec (repr (Nfand (Nflit (false)) (Nflit (true)))) = if mainNew (Nfand (Nflit (false)) (Nflit (true))) then mainNew (Nfor (Nfneglit (true)) (Nfneglit (false))) else false
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nfneglit (true)) then mainNew (Nfneglit (false)) else false
Prop: true = if mainNew (Nfneglit (false)) then mainNew (Nfneglit (false)) else false
Prop: true = if mainNew (Nfor (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nflit (true)))) then mainNew (Nflit (true)) else false
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 135


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 136


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 137


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case mainNew (nnfformula1)(rank:6.)
rewrite <- Cond1 in goal at 0(rank:13.)
=================================================
Progress: 138


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> case mainNew (nnfformula1)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:14.)
induction nnfformula2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 139


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 140


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
parent
mainNew (nnfformula2)
lower
mainNew(_)
upper
_
remove upper
spec(repr(nnfformula3))
remove lower
spec(repr(nnfformula3))
remove upper
mainNew(nnfformula2)
remove lower
mainNew(_)
remove upper
_
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfand (Nfand (Nfand (Nfand (Nfneglit (false)) (Nfand (Nfneglit (false)) (Nflit (true)))) (Nfneglit (true))) (Nfor (Nfor (Nfneglit (true)) (Nflit (true))) (Nfneglit (true)))) (Nflit (true))) (Nfneglit (true))) = spec (repr (Nfneglit (false)))
Prop: mainNew (Nfor (Nfneglit (true)) (Nflit (true))) = spec (repr (Nfneglit (true)))
Prop: mainNew (Nfand (Nfand (Nflit (true)) (Nflit (false))) (Nfneglit (false))) = spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
parent
mainNew (nnfformula2)
lower
mainNew(_)
upper
_
remove upper
spec(repr(nnfformula3))
remove lower
spec(repr(nnfformula3))
remove upper
mainNew(nnfformula2)
remove lower
mainNew(_)
remove upper
_
validate generalize_common_subterm_goal
Prop: Nfneglit (false) = Nfor (Nfneglit (true)) (Nfneglit (false))
Prop: Nfand (Nflit (false)) (Nflit (false)) = Nfneglit (true)
Prop: Nfneglit (true) = Nfneglit (false)
Prop: mainNew (Nfneglit (true)) = mainNew (Nfand (Nflit (false)) (Nflit (false)))
Prop: mainNew (Nfor (Nfor (Nfneglit (true)) (Nfor (Nfand (Nfneglit (true)) (Nflit (false))) (Nflit (true)))) (Nflit (true))) = mainNew (Nfor (Nfor (Nfand (Nfor (Nfneglit (false)) (Nfneglit (true))) (Nfneglit (false))) (Nflit (true))) (Nfneglit (true)))
Prop: mainNew (Nflit (false)) = mainNew (Nflit (false))
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfand (Nfor (Nfneglit (false)) (Nfand (Nfor (Nflit (false)) (Nfand (Nflit (false)) (Nfneglit (true)))) (Nfor (Nflit (false)) (Nfneglit (true))))) (Nflit (true)))
Prop: true = mainNew (Nfneglit (false))
Prop: true = mainNew (Nfneglit (true))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 141


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 142


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> mainNew (Nfneglit (bool1)) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 143


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> mainNew (Nfneglit (bool1)) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 144


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 145


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 146


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 147


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 148


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = mainNew (Nflit (false))
Prop: spec (repr (Nfneglit (true))) = mainNew (Nfor (Nfor (Nfand (Nfand (Nfneglit (false)) (Nfneglit (true))) (Nfand (Nfand (Nfneglit (true)) (Nfand (Nfand (Nfneglit (true)) (Nfneglit (false))) (Nfand (Nflit (false)) (Nfor (Nfneglit (false)) (Nfor (Nfneglit (false)) (Nflit (false))))))) (Nfand (Nfand (Nfneglit (false)) (Nflit (false))) (Nfand (Nfneglit (true)) (Nflit (true)))))) (Nfneglit (false))) (Nflit (true)))
Prop: spec (repr (Nflit (false))) = mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfand (Nfor (Nflit (false)) (Nfor (Nfand (Nfneglit (false)) (Nflit (false))) (Nflit (true)))) (Nflit (false)))
Prop: true = mainNew (Nfor (Nfand (Nflit (true)) (Nflit (true))) (Nfand (Nflit (true)) (Nflit (false))))
Prop: true = mainNew (Nflit (true))
asdf
=================================================
Progress: 149


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 150


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- Case1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = spec (repr (Nfneglit (false)))
Prop: mainNew (Nfneglit (true)) = spec (repr (Nfneglit (true)))
Prop: mainNew (Nflit (false)) = spec (repr (Nfneglit (false)))
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (false) = Nfneglit (false)
Prop: Nfneglit (false) = Nfand (Nfneglit (false)) (Nfneglit (true))
Prop: Nfneglit (true) = Nfneglit (true)
Prop: mainNew (Nflit (true)) = mainNew (Nfneglit (false))
Prop: mainNew (Nfor (Nflit (true)) (Nfor (Nfneglit (false)) (Nfneglit (false)))) = mainNew (Nflit (false))
Prop: mainNew (Nfneglit (true)) = mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nfor (Nfneglit (false)) (Nfneglit (true)))
Prop: true = mainNew (Nflit (false))
asdf
=================================================
Progress: 151


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 152


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfor (Nflit (true)) (Nfor (Nfneglit (false)) (Nfand (Nfand (Nflit (false)) (Nfneglit (true))) (Nflit (true)))) = Nfor (Nfand (Nfor (Nflit (false)) (Nflit (true))) (Nfand (Nfneglit (true)) (Nfneglit (true)))) (Nfneglit (true))
Prop: Nflit (false) = Nfand (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nfor (Nfneglit (false)) (Nflit (true)))
Prop: Nflit (true) = Nflit (false)
Prop: spec (repr (Nflit (true))) = spec (repr (Nfand (Nflit (true)) (Nfand (Nfneglit (true)) (Nflit (false)))))
Prop: spec (repr (Nfneglit (true))) = spec (repr (Nfand (Nfand (Nflit (false)) (Nfor (Nfand (Nfand (Nfand (Nflit (false)) (Nflit (true))) (Nfor (Nfand (Nfneglit (true)) (Nfneglit (false))) (Nfor (Nflit (true)) (Nfand (Nflit (true)) (Nflit (false)))))) (Nfand (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (true)))) (Nfneglit (false)))) (Nfneglit (true))))
Prop: spec (repr (Nfneglit (false))) = spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = mainNew (Nflit (false))
Prop: spec (repr (Nfor (Nfneglit (true)) (Nfneglit (false)))) = mainNew (Nfneglit (false))
Prop: spec (repr (Nflit (true))) = mainNew (Nfand (Nfneglit (false)) (Nfneglit (true)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfneglit (true))
Prop: true = mainNew (Nfneglit (true))
Prop: true = mainNew (Nflit (false))
asdf
=================================================
Progress: 153


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case mainNew (nnfformula1)(rank:6.)
=================================================
Progress: 154


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> case mainNew (nnfformula1)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nnfformula2(rank:17.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 155


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 156


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 157


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = mainNew (Nfneglit (false))
Prop: spec (repr (Nfneglit (false))) = mainNew (Nfand (Nfneglit (true)) (Nflit (true)))
Prop: spec (repr (Nfand (Nfneglit (true)) (Nflit (false)))) = mainNew (Nfor (Nflit (true)) (Nfneglit (true)))
asdf
=================================================
Progress: 158


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 2(rank:21.)
=================================================
Progress: 159


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then spec (repr (Nflit (true))) else false
Prop: spec (repr (Nflit (false))) = if true then spec (repr (Nfneglit (false))) else false
Prop: spec (repr (Nfneglit (false))) = if true then spec (repr (Nfneglit (true))) else false
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if mainNew (Nflit (true)) then spec (repr (Nfneglit (false))) else false
Prop: spec (repr (Nflit (false))) = if mainNew (Nflit (false)) then spec (repr (Nfand (Nfand (Nfor (Nfand (Nfand (Nfor (Nflit (true)) (Nfneglit (false))) (Nfneglit (true))) (Nfneglit (true))) (Nfneglit (false))) (Nfand (Nflit (false)) (Nflit (false)))) (Nfor (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nfand (Nfor (Nfneglit (true)) (Nflit (true))) (Nfor (Nfneglit (false)) (Nflit (true)))))))) else false
Prop: spec (repr (Nfand (Nflit (false)) (Nfneglit (false)))) = if mainNew (Nfand (Nflit (false)) (Nfneglit (false))) then spec (repr (Nfand (Nfneglit (false)) (Nfneglit (true)))) else false
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nfneglit (true)) then spec (repr (Nfneglit (true))) else false
Prop: true = if mainNew (Nfneglit (true)) then spec (repr (Nfneglit (false))) else false
Prop: true = if mainNew (Nfneglit (false)) then spec (repr (Nfand (Nfneglit (true)) (Nfneglit (false)))) else false
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 160


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 161


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> spec (repr (Nfneglit (bool1))) = if mainNew (Nfneglit (bool1)) then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 162


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> spec (repr (Nfneglit (bool1))) = if mainNew (Nfneglit (bool1)) then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 163


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 2(rank:16.)
rewrite Cond1 in goal at 0(rank:24.)
rewrite Cond1 in goal at 1(rank:24.)
=================================================
Progress: 164


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 165


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfor (Nfneglit (true)) (Nflit (false)) = Nfor (Nfand (Nfand (Nfor (Nflit (false)) (Nflit (true))) (Nfneglit (false))) (Nfneglit (true))) (Nflit (false))
Prop: Nflit (false) = Nflit (false)
Prop: Nflit (true) = Nflit (false)
Prop: mainNew (Nflit (false)) = mainNew (Nfneglit (true))
Prop: mainNew (Nfand (Nflit (false)) (Nfor (Nflit (true)) (Nfneglit (false)))) = mainNew (Nfneglit (true))
Prop: mainNew (Nfneglit (false)) = mainNew (Nflit (false))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = spec (repr (Nfor (Nflit (false)) (Nflit (true))))
Prop: mainNew (Nfor (Nfneglit (true)) (Nflit (false))) = spec (repr (Nfneglit (true)))
Prop: mainNew (Nflit (true)) = spec (repr (Nflit (true)))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfand (Nfneglit (false)) (Nfneglit (false))))
Prop: true = spec (repr (Nflit (true)))
Prop: true = spec (repr (Nfand (Nfneglit (false)) (Nfor (Nflit (true)) (Nflit (false)))))
Lemma List
forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 166


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

---------------------------------------
forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 167


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 168


1st goal of : forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

---------------------------------------
forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 169


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> mainNew (Nfneglit (bool1)) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 170


1st goal of : forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 171


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> mainNew (Nfneglit (bool1)) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 172


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 173


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 174


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 175


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 176


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfand (Nfneglit (false)) (Nfor (Nflit (false)) (Nfneglit (false))))
Prop: true = mainNew (Nfneglit (false))
Prop: true = mainNew (Nfor (Nfand (Nflit (false)) (Nfand (Nfneglit (true)) (Nfneglit (true)))) (Nflit (false)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfor (Nfand (Nfand (Nflit (false)) (Nfneglit (false))) (Nfneglit (true))) (Nflit (true))))
asdf
=================================================
Progress: 177


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfor (Nfneglit (true)) (Nfand (Nflit (true)) (Nfand (Nflit (true)) (Nfor (Nfand (Nfneglit (true)) (Nflit (true))) (Nflit (false))))) = Nfneglit (false)
Prop: Nfneglit (false) = Nfor (Nflit (false)) (Nfneglit (false))
Prop: Nfneglit (false) = Nfand (Nfor (Nfor (Nfand (Nfneglit (false)) (Nflit (false))) (Nfneglit (true))) (Nflit (true))) (Nflit (true))
Prop: spec (repr (Nflit (false))) = spec (repr (Nfneglit (true)))
Prop: spec (repr (Nfor (Nfor (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nflit (true))) (Nfneglit (false)))) = spec (repr (Nfor (Nflit (true)) (Nflit (true))))
Prop: spec (repr (Nflit (true))) = spec (repr (Nfand (Nfand (Nfneglit (true)) (Nfor (Nfneglit (false)) (Nfneglit (true)))) (Nflit (false))))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfand (Nfneglit (true)) (Nfneglit (false))))
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfand (Nflit (false)) (Nfneglit (true))))
asdf
=================================================
Progress: 178


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case mainNew (nnfformula1)(rank:6.)
=================================================
Progress: 179


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> case mainNew (nnfformula1)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nnfformula2(rank:17.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 180


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 181


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- Case1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (false) = Nflit (true)
Prop: Nflit (true) = Nfneglit (true)
Prop: Nfneglit (false) = Nfneglit (false)
Prop: spec (repr (Nflit (true))) = spec (repr (Nfneglit (false)))
Prop: spec (repr (Nfor (Nfand (Nfor (Nflit (true)) (Nfor (Nfneglit (false)) (Nfand (Nfand (Nflit (false)) (Nfand (Nfneglit (true)) (Nfor (Nfneglit (false)) (Nfneglit (true))))) (Nflit (true))))) (Nfneglit (true))) (Nflit (true)))) = spec (repr (Nflit (false)))
Prop: spec (repr (Nflit (true))) = spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = mainNew (Nfneglit (true))
Prop: spec (repr (Nfor (Nfneglit (false)) (Nfneglit (true)))) = mainNew (Nfneglit (true))
Prop: spec (repr (Nflit (true))) = mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfand (Nflit (true)) (Nfneglit (true)))
Prop: true = mainNew (Nflit (true))
Prop: true = mainNew (Nflit (false))
asdf
=================================================
Progress: 182


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 183


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- Case2 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfneglit (true)) (Nflit (true))) = spec (repr (Nfneglit (true)))
Prop: mainNew (Nfor (Nflit (false)) (Nflit (true))) = spec (repr (Nflit (false)))
Prop: mainNew (Nfneglit (true)) = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (true) = Nfneglit (true)
Prop: Nfneglit (false) = Nfand (Nfand (Nfor (Nfneglit (true)) (Nfneglit (false))) (Nfneglit (false))) (Nfand (Nflit (false)) (Nfor (Nfneglit (false)) (Nfneglit (false))))
Prop: Nfand (Nflit (false)) (Nflit (false)) = Nflit (false)
Prop: mainNew (Nfneglit (true)) = mainNew (Nflit (true))
Prop: mainNew (Nfand (Nflit (false)) (Nfneglit (false))) = mainNew (Nflit (false))
Prop: mainNew (Nflit (false)) = mainNew (Nfneglit (false))
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfneglit (false))
Prop: true = mainNew (Nfneglit (true))
Prop: true = mainNew (Nfneglit (false))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 184


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 185


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true->mainNew (Nfneglit (bool1)) = true -> mainNew (Nfneglit (bool1)) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 186


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true->mainNew (Nfneglit (bool1)) = true -> mainNew (Nfneglit (bool1)) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true->if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 187


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true->if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 188


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 189


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 190


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 191


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 192


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 0(rank:14.)
=================================================
Progress: 193


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfneglit (true) = Nfneglit (false)
Prop: Nflit (true) = Nfor (Nfand (Nfneglit (true)) (Nflit (true))) (Nfor (Nfneglit (false)) (Nflit (true)))
Prop: Nfor (Nfor (Nfneglit (false)) (Nflit (false))) (Nflit (false)) = Nfand (Nfneglit (true)) (Nfand (Nflit (true)) (Nfneglit (true)))
Prop: spec (repr (Nflit (true))) = spec (repr (Nfor (Nfand (Nfor (Nfneglit (true)) (Nflit (false))) (Nfneglit (true))) (Nflit (true))))
Prop: spec (repr (Nfand (Nfneglit (false)) (Nflit (true)))) = spec (repr (Nflit (true)))
Prop: spec (repr (Nfneglit (false))) = spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nflit (true)))
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nfand (Nfand (Nflit (true)) (Nfneglit (true))) (Nfand (Nflit (true)) (Nfneglit (true)))))
asdf
=================================================
Progress: 194


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = spec (repr (Nfor (Nfneglit (false)) (Nflit (false))))
Prop: mainNew (Nflit (true)) = spec (repr (Nflit (true)))
Prop: mainNew (Nflit (false)) = spec (repr (Nflit (true)))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nfand (Nfand (Nfneglit (false)) (Nfand (Nfneglit (false)) (Nfneglit (false)))) (Nflit (true))))
Prop: true = spec (repr (Nflit (false)))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 195


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 196


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true->mainNew (Nfneglit (bool1)) = true -> mainNew (Nfneglit (bool1)) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 197


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true->mainNew (Nfneglit (bool1)) = true -> mainNew (Nfneglit (bool1)) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true->if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 198


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true->if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 199


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 200


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 201


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 202


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 203


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:6.)
=================================================
Progress: 204


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:6.)
=================================================
Progress: 205


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = spec (repr (Nfand (Nfand (Nfneglit (true)) (Nfand (Nfor (Nfand (Nfor (Nfneglit (true)) (Nflit (true))) (Nfor (Nflit (true)) (Nfneglit (false)))) (Nfneglit (false))) (Nfneglit (false)))) (Nfneglit (true))))
Prop: mainNew (Nflit (true)) = spec (repr (Nfneglit (false)))
Prop: mainNew (Nfneglit (false)) = spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfand (Nfneglit (false)) (Nfneglit (true))))
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfor (Nflit (true)) (Nfand (Nflit (true)) (Nfneglit (true)))))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (false) = Nfneglit (false)
Prop: Nfneglit (false) = Nflit (false)
Prop: Nflit (false) = Nfneglit (true)
Prop: spec (repr (Nflit (true))) = spec (repr (Nfneglit (false)))
Prop: spec (repr (Nfand (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (true)))) = spec (repr (Nfneglit (true)))
Prop: spec (repr (Nfor (Nflit (false)) (Nfand (Nfneglit (true)) (Nfneglit (true))))) = spec (repr (Nflit (false)))
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = mainNew (Nfor (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nfneglit (true))))
Prop: spec (repr (Nflit (false))) = mainNew (Nfneglit (false))
Prop: spec (repr (Nfneglit (true))) = mainNew (Nfneglit (true))
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 206


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 207


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 208


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true->mainNew (Nfneglit (bool1)) = true -> spec (repr (Nfneglit (bool1))) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 209


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true->mainNew (Nfneglit (bool1)) = true -> spec (repr (Nfneglit (bool1))) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 210


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true->mainNew (Nfneglit (bool1)) = true -> spec (repr (Nfneglit (bool1))) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true->if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 211


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true->mainNew (Nfneglit (bool1)) = true -> spec (repr (Nfneglit (bool1))) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true->if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 212


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true->if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 213


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true->if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 214


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 215


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 216


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 217


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 218


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 219


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 220


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 221


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 222


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 223


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 224


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 225


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 226


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 227


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 228


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 229


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 230


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 231


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 232


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 233


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 234


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite IH2 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = mainNew (Nfneglit (false))
Prop: spec (repr (Nfneglit (false))) = mainNew (Nflit (false))
Prop: spec (repr (Nfor (Nfneglit (true)) (Nflit (true)))) = mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nfneglit (true))
Prop: true = mainNew (Nfand (Nfor (Nfneglit (true)) (Nfand (Nflit (true)) (Nfneglit (false)))) (Nflit (false)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfneglit (false)))
asdf
=================================================
Progress: 235


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite IH2 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (false) = Nfand (Nfneglit (true)) (Nflit (false))
Prop: Nflit (true) = Nflit (true)
Prop: Nfor (Nflit (false)) (Nfneglit (true)) = Nfneglit (false)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfor (Nflit (true)) (Nfand (Nfneglit (true)) (Nfneglit (false))))
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfneglit (false)))
Prop: true = spec (repr (Nfand (Nfneglit (false)) (Nfneglit (true))))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 236


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 237


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 238


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 239


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula2(rank:5.)
=================================================
Progress: 240


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula2(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
---------------------------------------
nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Nfor (Nflit (true)) (Nfor (Nflit (true)) (Nflit (false))) = Nflit (true)
Prop: Nflit (false) = Nfneglit (true)
Prop: Nfand (Nflit (false)) (Nflit (true)) = Nfneglit (false)
asdf
=================================================
Progress: 241


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 2(rank : 16.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 242


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 243


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 244


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 245


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 246


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 2(rank : 16.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 247


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 248


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 249


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 250


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 251


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 2(rank : 16.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 252


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 253


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 254


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 255


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 256


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 257


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 258


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 259


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 260


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 261


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 262


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 263


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 264


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 265


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 266


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
=================================================
Progress: 267


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
validate generalize_common_subterm_goal
Prop: spec (Fand (Flit (false)) (Flit (false))) = if true then false else spec (Fand (Flit (false)) (Flit (false)))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Forr (Flit (false)) (Fnot (Flit (true)))) = if false then false else spec (Forr (Flit (false)) (Fnot (Flit (true))))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Prop: spec (repr (Nfor (Nflit (true)) (Nfneglit (true)))) = if true then false else true
asdf
Lemma List
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 268


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 269


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:7.)
=================================================
Progress: 270


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nnfformula1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 271


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 272


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
asdf
=================================================
Progress: 273


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
=================================================
Progress: 274


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
validate generalize_common_subterm_goal
Prop: spec (Fnot (Flit (true))) = if true then false else spec (Fnot (Flit (true)))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfor (Nfand (Nflit (true)) (Nfneglit (false))) (Nfand (Nfor (Nfor (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nflit (false))) (Nfand (Nfand (Nfor (Nfneglit (false)) (Nflit (true))) (Nfand (Nfand (Nflit (false)) (Nfneglit (false))) (Nfand (Nflit (false)) (Nflit (true))))) (Nfneglit (true)))) (Nfneglit (true)))) (Nfneglit (true)))) = if false then false else true
Prop: spec (repr (Nfor (Nflit (false)) (Nfneglit (true)))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Lemma List
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 275


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 276


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:7.)
=================================================
Progress: 277


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nnfformula1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 278


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 279


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Fnot (Flit (true))) = if true then false else spec (Fnot (Flit (true)))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Lemma List
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 280


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 281


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
asdf
=================================================
Progress: 282


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
=================================================
Progress: 283


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Forr (Flit (false)) (Flit (false))) = if false then false else spec (Forr (Flit (false)) (Flit (false)))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Fnot (Flit (false))) = if false then false else spec (Fnot (Flit (false)))
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nfand (Nfneglit (false)) (Nfneglit (false)))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
asdf
=================================================
Progress: 284


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
=================================================
Progress: 285


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Fnot (Fnot (Fnot (Flit (false))))) = if false then false else spec (Fnot (Fnot (Fnot (Flit (false)))))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
asdf
Lemma List
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 286


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 287


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Forr (Flit (false)) (Fnot (Fnot (Flit (false))))) = if false then false else spec (Forr (Flit (false)) (Fnot (Fnot (Flit (false)))))
Prop: spec (Fand (Fand (Flit (false)) (Flit (false))) (Flit (false))) = if false then false else spec (Fand (Fand (Flit (false)) (Flit (false))) (Flit (false)))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
asdf
=================================================
Progress: 288


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (false))) then mainNew (Nflit (false)) else false = if mainNew (Nflit (false)) then spec (repr (Nfor (Nfneglit (false)) (Nfor (Nfneglit (true)) (Nflit (false))))) else false
Prop: if spec (repr (Nfor (Nflit (true)) (Nfor (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nfneglit (false)))))) then mainNew (Nfor (Nflit (true)) (Nfor (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nfneglit (false))))) else false = if mainNew (Nfor (Nflit (true)) (Nfor (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nfneglit (false))))) then spec (repr (Nfor (Nfneglit (false)) (Nfneglit (false)))) else false
Prop: if spec (repr (Nflit (false))) then mainNew (Nflit (false)) else false = if mainNew (Nflit (false)) then spec (repr (Nfor (Nfneglit (false)) (Nflit (false)))) else false
previous tactics
simpl in goal
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (true))) then mainNew (Nflit (true)) else false = if mainNew (Nflit (true)) then mainNew (Nfneglit (true)) else false
Prop: if spec (repr (Nfneglit (true))) then mainNew (Nfneglit (true)) else false = if mainNew (Nfneglit (true)) then mainNew (Nflit (true)) else false
Prop: if spec (repr (Nfand (Nflit (false)) (Nfneglit (false)))) then mainNew (Nfand (Nflit (false)) (Nfneglit (false))) else false = if mainNew (Nfand (Nflit (false)) (Nfneglit (false))) then mainNew (Nflit (true)) else false
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (false))) then spec (repr (Nflit (false))) else false = if mainNew (Nflit (false)) then mainNew (Nfneglit (false)) else false
Prop: if spec (repr (Nflit (false))) then spec (repr (Nflit (false))) else false = if mainNew (Nflit (false)) then mainNew (Nfneglit (true)) else false
Prop: if spec (repr (Nfor (Nflit (true)) (Nflit (false)))) then spec (repr (Nfor (Nflit (true)) (Nflit (false)))) else false = if mainNew (Nfor (Nflit (true)) (Nflit (false))) then mainNew (Nfneglit (false)) else false
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 289


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 290


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 291


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (Nfneglit (bool1))) then spec (repr (Nfneglit (bool1))) else false = if mainNew (Nfneglit (bool1)) then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 292


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (Nfneglit (bool1))) then mainNew (Nfneglit (bool1)) else false = if mainNew (Nfneglit (bool1)) then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 293


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (Nfneglit (bool1))) then spec (repr (Nfneglit (bool1))) else false = if mainNew (Nfneglit (bool1)) then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if bool1 then false else true(rank:9.)
=================================================
Progress: 294


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (Nfneglit (bool1))) then mainNew (Nfneglit (bool1)) else false = if mainNew (Nfneglit (bool1)) then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if bool1 then false else true(rank:9.)
=================================================
Progress: 295


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else true(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:9.)
=================================================
Progress: 296


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else true(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:9.)
=================================================
Progress: 297


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:12.)
=================================================
Progress: 298


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:12.)
=================================================
Progress: 299


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

4 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 300


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

4 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 301


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

7 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 302


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

7 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 303


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nfneglit (true)) then spec (repr (Nflit (true))) else false
Prop: true = if mainNew (Nflit (true)) then spec (repr (Nflit (true))) else false
Prop: true = if mainNew (Nfand (Nfneglit (false)) (Nflit (true))) then spec (repr (Nflit (true))) else false
previous tactics
simpl in goal
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nfneglit (false)) then mainNew (Nfand (Nfor (Nflit (false)) (Nfneglit (false))) (Nfneglit (true))) else false
Prop: true = if mainNew (Nfand (Nfneglit (false)) (Nflit (true))) then mainNew (Nflit (true)) else false
Prop: true = if mainNew (Nfneglit (false)) then mainNew (Nfneglit (false)) else false
asdf
=================================================
Progress: 304


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nflit (true)))
Prop: true = spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nflit (true))
asdf
=================================================
Progress: 305


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfand (Nflit (false)) (Nfneglit (false)))) then mainNew (Nfand (Nflit (false)) (Nfneglit (false))) else false = mainNew (Nfor (Nflit (true)) (Nfneglit (false)))
Prop: if spec (repr (Nfand (Nfneglit (false)) (Nfneglit (false)))) then mainNew (Nfand (Nfneglit (false)) (Nfneglit (false))) else false = mainNew (Nflit (true))
Prop: if spec (repr (Nflit (true))) then mainNew (Nflit (true)) else false = mainNew (Nfneglit (false))
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (false))) then true else false = mainNew (Nfneglit (true))
Prop: if spec (repr (Nfand (Nfneglit (true)) (Nfneglit (false)))) then true else false = mainNew (Nflit (false))
Prop: if spec (repr (Nflit (false))) then true else false = mainNew (Nfand (Nfand (Nfneglit (true)) (Nflit (false))) (Nflit (true)))
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 306


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 307


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 308


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 309


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case spec (repr (nnfformula1))(rank:6.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 310


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> case spec (repr (nnfformula1))(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:14.)
induction nnfformula2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 311


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then mainNew (Nfneglit (bool1)) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 312


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then mainNew (Nfneglit (bool1)) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 313


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 314


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then mainNew (Nfneglit (bool1)) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 315


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then mainNew (Nfneglit (bool1)) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 316


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 317


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 318


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 319


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 320


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 321


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Case1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 322


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 323


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 324


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 325


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 326


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 327


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
=================================================
Progress: 328


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
Prop: spec (Fnot (Flit (true))) = if false then false else spec (Fnot (Flit (true)))
Prop: spec (Fnot (Fand (Flit (false)) (Flit (true)))) = if false then false else spec (Fnot (Fand (Flit (false)) (Flit (true))))
Prop: spec (Fnot (Flit (false))) = if false then false else spec (Fnot (Flit (false)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfneglit (true)) (Nflit (false)))) = if false then false else true
Prop: spec (repr (Nfor (Nfor (Nflit (false)) (Nfor (Nfneglit (false)) (Nflit (false)))) (Nflit (false)))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
asdf
Lemma List
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 329


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 330


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Fnot (Flit (false))) = if true then false else spec (Fnot (Flit (false)))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
asdf
=================================================
Progress: 331


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (true))) then spec (repr (Nflit (true))) else false = mainNew (Nfor (Nflit (false)) (Nfneglit (false)))
Prop: if spec (repr (Nfor (Nfneglit (true)) (Nflit (false)))) then spec (repr (Nfor (Nfneglit (true)) (Nflit (false)))) else false = mainNew (Nflit (true))
Prop: if spec (repr (Nflit (false))) then spec (repr (Nflit (false))) else false = mainNew (Nfand (Nfneglit (false)) (Nfneglit (true)))
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (false))) then true else false = mainNew (Nfor (Nflit (true)) (Nflit (true)))
Prop: if spec (repr (Nflit (false))) then true else false = mainNew (Nfor (Nflit (true)) (Nfand (Nfneglit (true)) (Nfor (Nflit (true)) (Nfor (Nfand (Nflit (false)) (Nfand (Nfor (Nfneglit (false)) (Nfneglit (true))) (Nfand (Nfor (Nflit (true)) (Nfneglit (false))) (Nfneglit (true))))) (Nflit (true))))))
Prop: if spec (repr (Nflit (false))) then true else false = mainNew (Nfneglit (false))
=================================================
Progress: 332


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfor (Nflit (false)) (Nfneglit (true))))
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nfand (Nflit (true)) (Nfneglit (false))))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfand (Nfand (Nfand (Nflit (false)) (Nfand (Nflit (false)) (Nfor (Nfand (Nflit (true)) (Nfneglit (true))) (Nfneglit (true))))) (Nfneglit (true))) (Nfneglit (false)))
Prop: true = mainNew (Nfor (Nfneglit (false)) (Nfor (Nflit (true)) (Nflit (false))))
Prop: true = mainNew (Nfneglit (true))
asdf
=================================================
Progress: 333


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfand (Nfneglit (true)) (Nflit (false))))
Prop: true = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfor (Nfand (Nflit (false)) (Nflit (false))) (Nfneglit (false)))
Prop: true = mainNew (Nfor (Nfand (Nfneglit (false)) (Nflit (false))) (Nflit (false)))
Prop: true = mainNew (Nfneglit (true))
asdf
=================================================
Progress: 334


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 1
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: if mainNew (Nflit (true)) then spec (repr (Nflit (true))) else false = mainNew (Nfand (Nfneglit (false)) (Nfand (Nfneglit (false)) (Nflit (true))))
Prop: if mainNew (Nflit (false)) then spec (repr (Nflit (false))) else false = mainNew (Nfand (Nflit (true)) (Nflit (true)))
Prop: if mainNew (Nflit (false)) then spec (repr (Nflit (false))) else false = mainNew (Nfor (Nflit (false)) (Nflit (false)))
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: if true then spec (repr (Nfor (Nfneglit (false)) (Nflit (false)))) else false = mainNew (Nfneglit (true))
Prop: if true then spec (repr (Nfneglit (false))) else false = mainNew (Nflit (false))
Prop: if true then spec (repr (Nfor (Nflit (false)) (Nfneglit (true)))) else false = mainNew (Nflit (false))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (true))) then spec (repr (Nfneglit (true))) else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nflit (false))) then spec (repr (Nflit (false))) else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nfor (Nfneglit (true)) (Nfand (Nflit (false)) (Nfneglit (false))))) then spec (repr (Nfor (Nfneglit (true)) (Nfand (Nflit (false)) (Nfneglit (false))))) else false = mainNew (Nfneglit (true))
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 335


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 336


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if mainNew (Nfneglit (bool1)) then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 337


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if mainNew (Nfneglit (bool1)) then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 338


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 339


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 340


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 341


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 342


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 343


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 344


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 2
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfand (Nfneglit (true)) (Nfneglit (false)))) then mainNew (Nfand (Nfneglit (true)) (Nfneglit (false))) else false = mainNew (Nflit (false))
Prop: if spec (repr (Nfor (Nflit (true)) (Nfneglit (true)))) then mainNew (Nfor (Nflit (true)) (Nfneglit (true))) else false = mainNew (Nflit (true))
Prop: if spec (repr (Nfor (Nfneglit (true)) (Nfor (Nfor (Nfneglit (false)) (Nfneglit (true))) (Nflit (false))))) then mainNew (Nfor (Nfneglit (true)) (Nfor (Nfor (Nfneglit (false)) (Nfneglit (true))) (Nflit (false)))) else false = mainNew (Nflit (true))
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (true))) then true else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nfneglit (false))) then true else false = mainNew (Nfneglit (true))
Prop: if spec (repr (Nflit (false))) then true else false = mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (true))) then spec (repr (Nfneglit (true))) else false = mainNew (Nflit (true))
Prop: if spec (repr (Nfand (Nfneglit (false)) (Nfand (Nfneglit (true)) (Nfneglit (false))))) then spec (repr (Nfand (Nfneglit (false)) (Nfand (Nfneglit (true)) (Nfneglit (false))))) else false = mainNew (Nflit (true))
Prop: if spec (repr (Nflit (false))) then spec (repr (Nflit (false))) else false = mainNew (Nfneglit (false))
=================================================
Progress: 345


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfneglit (false)))
Prop: true = spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nfand (Nflit (true)) (Nflit (true)))
Prop: true = mainNew (Nfand (Nflit (false)) (Nflit (true)))
asdf
=================================================
Progress: 346


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nflit (true)))
Prop: true = spec (repr (Nfor (Nfneglit (true)) (Nflit (false))))
Prop: true = spec (repr (Nflit (true)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nflit (true))
Prop: true = mainNew (Nfand (Nfneglit (false)) (Nfor (Nfneglit (false)) (Nfneglit (true))))
asdf
=================================================
Progress: 347


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 348


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then mainNew (nnfformula2) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
rewrite <- Case1 in goal at 0
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if true then mainNew (Nfand (Nfneglit (false)) (Nfor (Nflit (false)) (Nfneglit (true)))) else false = spec (repr (Nflit (false)))
Prop: if true then mainNew (Nfor (Nflit (true)) (Nfor (Nflit (false)) (Nfor (Nflit (false)) (Nflit (true))))) else false = spec (repr (Nfand (Nfneglit (true)) (Nfneglit (true))))
Prop: if true then mainNew (Nfand (Nfneglit (false)) (Nfneglit (true))) else false = spec (repr (Nfand (Nflit (true)) (Nfneglit (false))))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nfand (Nflit (false)) (Nflit (false))))) then mainNew (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nfand (Nflit (false)) (Nflit (false)))) else false = spec (repr (Nfneglit (true)))
Prop: if spec (repr (Nfneglit (true))) then mainNew (Nfneglit (true)) else false = spec (repr (Nfor (Nfneglit (false)) (Nflit (false))))
Prop: if spec (repr (Nfand (Nfor (Nflit (true)) (Nfneglit (true))) (Nfand (Nflit (true)) (Nfor (Nflit (true)) (Nfand (Nfor (Nfneglit (true)) (Nflit (true))) (Nfand (Nflit (false)) (Nfand (Nflit (true)) (Nfor (Nfand (Nfand (Nfor (Nfand (Nflit (false)) (Nfor (Nflit (false)) (Nfand (Nflit (true)) (Nfneglit (true))))) (Nflit (false))) (Nfneglit (true))) (Nfneglit (true))) (Nflit (true)))))))))) then mainNew (Nfand (Nfor (Nflit (true)) (Nfneglit (true))) (Nfand (Nflit (true)) (Nfor (Nflit (true)) (Nfand (Nfor (Nfneglit (true)) (Nflit (true))) (Nfand (Nflit (false)) (Nfand (Nflit (true)) (Nfor (Nfand (Nfand (Nfor (Nfand (Nflit (false)) (Nfor (Nflit (false)) (Nfand (Nflit (true)) (Nfneglit (true))))) (Nflit (false))) (Nfneglit (true))) (Nfneglit (true))) (Nflit (true))))))))) else false = spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (true))) then true else false = spec (repr (Nfor (Nfneglit (false)) (Nfand (Nfneglit (true)) (Nflit (false)))))
Prop: if spec (repr (Nfneglit (false))) then true else false = spec (repr (Nflit (false)))
Prop: if spec (repr (Nfneglit (false))) then true else false = spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfand (Nfneglit (true)) (Nfor (Nflit (false)) (Nfand (Nfand (Nflit (false)) (Nflit (false))) (Nflit (true)))))) then true else false = mainNew (Nfneglit (true))
Prop: if spec (repr (Nflit (false))) then true else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nfneglit (true))) then true else false = mainNew (Nflit (false))
=================================================
Progress: 349


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfor (Nflit (false)) (Nfneglit (true)))) then spec (repr (Nfor (Nflit (false)) (Nfneglit (true)))) else false = spec (repr (Nflit (true)))
Prop: if spec (repr (Nfneglit (true))) then spec (repr (Nfneglit (true))) else false = spec (repr (Nfneglit (false)))
Prop: if spec (repr (Nfneglit (false))) then spec (repr (Nfneglit (false))) else false = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfand (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nflit (true)))) then true else false = spec (repr (Nfneglit (false)))
Prop: if spec (repr (Nfand (Nfneglit (true)) (Nflit (true)))) then true else false = spec (repr (Nfneglit (true)))
Prop: if spec (repr (Nfneglit (false))) then true else false = spec (repr (Nfand (Nfneglit (false)) (Nflit (true))))
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (true))) then true else false = mainNew (Nflit (true))
Prop: if spec (repr (Nfneglit (true))) then true else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nfor (Nfneglit (false)) (Nflit (false)))) then true else false = mainNew (Nfand (Nflit (false)) (Nfor (Nfneglit (false)) (Nfneglit (true))))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 350


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 351


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 352


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case spec (repr (nnfformula1))(rank:6.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 353


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> case spec (repr (nnfformula1))(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:14.)
induction nnfformula2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 354


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 355


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 356


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Case1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 357


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 358


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 359


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 360


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 361


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 362


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
=================================================
Progress: 363


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Forr (Fnot (Fand (Flit (false)) (Forr (Flit (false)) (Flit (true))))) (Flit (true))) = if true then false else spec (Forr (Fnot (Fand (Flit (false)) (Forr (Flit (false)) (Flit (true))))) (Flit (true)))
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Forr (Flit (false)) (Flit (true))) = if true then false else spec (Forr (Flit (false)) (Flit (true)))
Prop: spec (Fand (Fnot (Flit (false))) (Forr (Flit (true)) (Flit (false)))) = if false then false else spec (Fand (Fnot (Flit (false))) (Forr (Flit (true)) (Flit (false))))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
Lemma List
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 364


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 365


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:7.)
=================================================
Progress: 366


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nnfformula1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 367


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 368


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Cond2 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Fand (Fnot (Flit (false))) (Flit (false))) = if false then false else spec (Fand (Fnot (Flit (false))) (Flit (false)))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
asdf
=================================================
Progress: 369


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if spec (repr (nnfformula2)) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
rewrite <- Case1 in goal at 0
Prop: spec (Flit (true)) = if spec (Flit (true)) then mainNew (Nfor (Nflit (false)) (Nfneglit (true))) else false
Prop: spec (Fnot (Flit (false))) = if spec (Fnot (Flit (false))) then mainNew (Nflit (false)) else false
Prop: spec (Flit (true)) = if spec (Flit (true)) then mainNew (Nflit (true)) else false
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if spec (Flit (false)) then mainNew (Nflit (false)) else false
Prop: spec (Flit (true)) = if spec (Flit (true)) then mainNew (Nfneglit (true)) else false
Prop: spec (Flit (false)) = if spec (Flit (false)) then mainNew (Nfor (Nfneglit (true)) (Nflit (true))) else false
Prop: spec (repr (Nfneglit (true))) = if spec (repr (Nfneglit (true))) then mainNew (Nflit (true)) else false
Prop: spec (repr (Nfneglit (true))) = if spec (repr (Nfneglit (true))) then mainNew (Nflit (true)) else false
Prop: spec (repr (Nflit (true))) = if spec (repr (Nflit (true))) then mainNew (Nflit (false)) else false
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then mainNew (Nflit (false)) else false
Prop: true = if true then mainNew (Nfor (Nflit (false)) (Nfneglit (false))) else false
Prop: true = if true then mainNew (Nfneglit (true)) else false
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nflit (true)) then mainNew (Nfneglit (true)) else false
Prop: true = if mainNew (Nfneglit (false)) then mainNew (Nfneglit (true)) else false
Prop: true = if mainNew (Nflit (true)) then mainNew (Nfand (Nfand (Nfneglit (false)) (Nfneglit (true))) (Nflit (false))) else false
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nflit (false)) then spec (repr (Nfneglit (true))) else false
Prop: true = if mainNew (Nfand (Nfneglit (false)) (Nfor (Nflit (false)) (Nfneglit (true)))) then spec (repr (Nfneglit (false))) else false
Prop: true = if mainNew (Nflit (false)) then spec (repr (Nfand (Nfor (Nfor (Nfor (Nfneglit (true)) (Nflit (false))) (Nflit (false))) (Nflit (false))) (Nflit (false)))) else false
asdf
=================================================
Progress: 370


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if spec (repr (nnfformula2)) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if spec (repr (Nfneglit (true))) then mainNew (Nfand (Nfor (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nfand (Nfand (Nflit (false)) (Nfneglit (true))) (Nfneglit (true)))) (Nfand (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nflit (true))))) else false
Prop: true = if spec (repr (Nfor (Nflit (false)) (Nfneglit (false)))) then mainNew (Nfand (Nfneglit (true)) (Nfor (Nfneglit (true)) (Nfand (Nflit (false)) (Nfor (Nfor (Nfneglit (false)) (Nfor (Nfor (Nfand (Nflit (false)) (Nfor (Nfand (Nflit (true)) (Nflit (true))) (Nfor (Nfand (Nfneglit (true)) (Nfneglit (false))) (Nfor (Nfneglit (true)) (Nflit (true)))))) (Nfneglit (false))) (Nfneglit (true)))) (Nfneglit (false)))))) else false
Prop: true = if spec (repr (Nfneglit (false))) then mainNew (Nfand (Nfneglit (true)) (Nflit (true))) else false
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then mainNew (Nflit (true)) else false
Prop: true = if true then mainNew (Nfor (Nfneglit (true)) (Nflit (false))) else false
Prop: true = if true then mainNew (Nflit (true)) else false
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nflit (false)) then mainNew (Nfneglit (false)) else false
Prop: true = if mainNew (Nfneglit (true)) then mainNew (Nfor (Nfneglit (true)) (Nflit (true))) else false
Prop: true = if mainNew (Nfor (Nflit (true)) (Nflit (true))) then mainNew (Nfor (Nfneglit (false)) (Nfor (Nflit (true)) (Nflit (true)))) else false
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nflit (true)) then spec (repr (Nflit (true))) else false
Prop: true = if mainNew (Nflit (true)) then spec (repr (Nfneglit (true))) else false
Prop: true = if mainNew (Nflit (true)) then spec (repr (Nflit (true))) else false
asdf
=================================================
Progress: 371


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (true))) then mainNew (Nfneglit (true)) else false = mainNew (Nfneglit (true))
Prop: if spec (repr (Nflit (true))) then mainNew (Nflit (true)) else false = mainNew (Nfor (Nfor (Nfand (Nfneglit (true)) (Nflit (true))) (Nflit (true))) (Nfneglit (false)))
Prop: if spec (repr (Nflit (true))) then mainNew (Nflit (true)) else false = mainNew (Nfneglit (true))
asdf
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfor (Nflit (true)) (Nflit (true)))) then true else false = mainNew (Nfneglit (true))
Prop: if spec (repr (Nfneglit (true))) then true else false = mainNew (Nflit (false))
Prop: if spec (repr (Nflit (true))) then true else false = mainNew (Nfor (Nfneglit (false)) (Nfneglit (false)))
asdf
=================================================
Progress: 372


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (true))) then mainNew (Nfneglit (true)) else false = spec (repr (Nfneglit (false)))
Prop: if spec (repr (Nflit (false))) then mainNew (Nflit (false)) else false = spec (repr (Nfand (Nfor (Nflit (false)) (Nflit (true))) (Nfand (Nfor (Nfand (Nfand (Nfand (Nfand (Nfor (Nflit (true)) (Nflit (true))) (Nfand (Nflit (false)) (Nfor (Nfneglit (true)) (Nflit (false))))) (Nfneglit (true))) (Nfor (Nflit (false)) (Nfand (Nflit (false)) (Nfor (Nflit (true)) (Nfor (Nfneglit (false)) (Nflit (true))))))) (Nflit (false))) (Nflit (false))) (Nflit (true)))))
Prop: if spec (repr (Nfor (Nflit (true)) (Nflit (true)))) then mainNew (Nfor (Nflit (true)) (Nflit (true))) else false = spec (repr (Nflit (false)))
asdf
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfor (Nfneglit (true)) (Nfneglit (false)))) then true else false = spec (repr (Nfneglit (true)))
Prop: if spec (repr (Nfor (Nfor (Nfneglit (true)) (Nfneglit (true))) (Nflit (false)))) then true else false = spec (repr (Nflit (false)))
Prop: if spec (repr (Nfneglit (false))) then true else false = spec (repr (Nfneglit (false)))
asdf
=================================================
Progress: 373


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 22.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfneglit (false)))
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfor (Nflit (false)) (Nfor (Nfneglit (true)) (Nfneglit (false))))
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nflit (true))
asdf
=================================================
Progress: 374


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 22.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:6.)
=================================================
Progress: 375


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (false) = Nflit (true)
Prop: Nflit (true) = Nfneglit (false)
Prop: Nfand (Nfneglit (true)) (Nfneglit (true)) = Nflit (false)
Prop: mainNew (Nfneglit (true)) = mainNew (Nfneglit (false))
Prop: mainNew (Nflit (false)) = mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (true)) = mainNew (Nflit (false))
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nfor (Nfneglit (false)) (Nflit (true)))
Prop: true = mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = mainNew (Nfor (Nfneglit (false)) (Nfor (Nflit (true)) (Nfand (Nflit (false)) (Nfand (Nflit (true)) (Nflit (true))))))
Prop: spec (repr (Nfand (Nfneglit (false)) (Nflit (false)))) = mainNew (Nflit (true))
Prop: spec (repr (Nfor (Nfneglit (false)) (Nflit (true)))) = mainNew (Nfneglit (true))
asdf
=================================================
Progress: 376


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 22.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 0(rank:14.)
=================================================
Progress: 377


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:6.)
=================================================
Progress: 378


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
rewrite IH2 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (false) = Nflit (false)
Prop: Nfneglit (true) = Nflit (false)
Prop: Nfor (Nflit (true)) (Nflit (false)) = Nfor (Nflit (false)) (Nfneglit (true))
Prop: mainNew (Nflit (true)) = mainNew (Nflit (true))
Prop: mainNew (Nfor (Nflit (true)) (Nflit (false))) = mainNew (Nflit (false))
Prop: mainNew (Nflit (false)) = mainNew (Nfand (Nfneglit (true)) (Nfneglit (true)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfneglit (false))
Prop: true = mainNew (Nfor (Nfneglit (false)) (Nfor (Nfneglit (false)) (Nflit (false))))
Prop: true = mainNew (Nflit (false))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfor (Nfor (Nfand (Nfand (Nfneglit (false)) (Nflit (true))) (Nflit (false))) (Nfneglit (false))) (Nflit (false))))
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfor (Nflit (true)) (Nflit (true))))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: Nfand (Nfand (Nfor (Nflit (true)) (Nfand (Nfand (Nfand (Nflit (true)) (Nfand (Nfor (Nfor (Nflit (true)) (Nfand (Nfneglit (false)) (Nflit (true)))) (Nfneglit (false))) (Nfneglit (false)))) (Nflit (true))) (Nflit (false)))) (Nfneglit (false))) (Nflit (true)) = Nfneglit (true)
Prop: Nflit (true) = Nfor (Nflit (true)) (Nflit (true))
Prop: Nflit (false) = Nflit (true)
Prop: spec (repr (Nfneglit (true))) = spec (repr (Nflit (true)))
Prop: spec (repr (Nfor (Nfand (Nfneglit (true)) (Nfneglit (false))) (Nfneglit (true)))) = spec (repr (Nfneglit (false)))
Prop: spec (repr (Nflit (false))) = spec (repr (Nfneglit (false)))
=================================================
Progress: 379


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = spec (repr (Nflit (false)))
Prop: mainNew (Nfneglit (false)) = spec (repr (Nflit (true)))
Prop: mainNew (Nfor (Nfneglit (true)) (Nfneglit (false))) = spec (repr (Nflit (true)))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfor (Nfneglit (true)) (Nfneglit (true))))
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: Nflit (true) = Nfneglit (true)
Prop: Nflit (false) = Nfand (Nflit (true)) (Nfneglit (true))
Prop: Nfneglit (true) = Nfneglit (false)
Prop: spec (repr (Nflit (false))) = spec (repr (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nfneglit (true)))))
Prop: spec (repr (Nfneglit (false))) = spec (repr (Nflit (true)))
Prop: spec (repr (Nfneglit (true))) = spec (repr (Nfand (Nflit (false)) (Nfor (Nfor (Nfneglit (false)) (Nflit (true))) (Nflit (true)))))
=================================================
Progress: 380


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 22.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = mainNew (Nflit (false))
Prop: spec (repr (Nfneglit (true))) = mainNew (Nflit (false))
Prop: spec (repr (Nfneglit (true))) = mainNew (Nflit (true))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: Nfneglit (false) = Nfneglit (true)
Prop: Nflit (true) = Nfor (Nfneglit (false)) (Nflit (true))
Prop: Nflit (false) = Nfneglit (false)
Prop: spec (repr (Nfneglit (true))) = spec (repr (Nfor (Nfneglit (true)) (Nfand (Nfor (Nflit (true)) (Nflit (false))) (Nfand (Nfand (Nflit (false)) (Nfor (Nfor (Nflit (false)) (Nflit (false))) (Nfand (Nfand (Nfand (Nflit (true)) (Nflit (false))) (Nfor (Nfand (Nfneglit (false)) (Nfand (Nfand (Nflit (false)) (Nfor (Nflit (false)) (Nflit (true)))) (Nflit (false)))) (Nflit (false)))) (Nflit (true))))) (Nfand (Nfneglit (true)) (Nfor (Nfor (Nfneglit (true)) (Nflit (false))) (Nfneglit (false))))))))
Prop: spec (repr (Nfand (Nfand (Nfor (Nfneglit (true)) (Nfneglit (true))) (Nflit (true))) (Nfand (Nfand (Nfneglit (true)) (Nflit (false))) (Nfor (Nfor (Nfneglit (true)) (Nfor (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nflit (false))))) (Nflit (true)))))) = spec (repr (Nfand (Nfneglit (true)) (Nflit (false))))
Prop: spec (repr (Nfor (Nfneglit (true)) (Nflit (true)))) = spec (repr (Nflit (true)))
=================================================
Progress: 381


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 22.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:14.)
induction nnfformula2(rank:17.)
=================================================
Progress: 382


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 383


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 384


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 385


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 386


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 387


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 22.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:14.)
induction nnfformula2(rank:17.)
=================================================
Progress: 388


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 389


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 390


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 391


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 392


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 393


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 24.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: if false then false else true = if if false then false else true then mainNew (Nflit (false)) else false
Prop: if false then false else true = if if false then false else true then mainNew (Nfneglit (true)) else false
Prop: if true then false else true = if if true then false else true then mainNew (Nfand (Nfneglit (true)) (Nflit (true))) else false
asdf
=================================================
Progress: 394


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 1(rank : 24.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: true = if if false then false else true then mainNew (Nflit (false)) else false
Prop: true = if if false then false else true then mainNew (Nflit (false)) else false
Prop: true = if if false then false else true then mainNew (Nfneglit (true)) else false
asdf
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: if true then false else true = if if true then false else true then mainNew (Nflit (false)) else false
Prop: if false then false else true = if if false then false else true then mainNew (Nfand (Nflit (false)) (Nfand (Nfneglit (false)) (Nflit (false)))) else false
Prop: if false then false else true = if if false then false else true then mainNew (Nfor (Nflit (true)) (Nfneglit (false))) else false
asdf
=================================================
Progress: 395


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 24.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: if true then false else true = if if true then false else true then spec (repr (Nflit (true))) else false
Prop: if true then false else true = if if true then false else true then spec (repr (Nfand (Nfneglit (true)) (Nfor (Nflit (true)) (Nfand (Nfneglit (false)) (Nflit (false)))))) else false
Prop: if false then false else true = if if false then false else true then spec (repr (Nflit (false))) else false
asdf
=================================================
Progress: 396


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 1(rank : 24.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: true = if if false then false else true then spec (repr (Nflit (true))) else false
Prop: true = if if true then false else true then spec (repr (Nflit (false))) else false
Prop: true = if if true then false else true then spec (repr (Nfneglit (true))) else false
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: if true then false else true = if if true then false else true then spec (repr (Nflit (true))) else false
Prop: if false then false else true = if if false then false else true then spec (repr (Nfneglit (true))) else false
Prop: if false then false else true = if if false then false else true then spec (repr (Nfand (Nfneglit (true)) (Nfor (Nfor (Nflit (false)) (Nfneglit (false))) (Nfneglit (true))))) else false
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 397


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 398


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 399


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:7.)
=================================================
Progress: 400


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 401


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 402


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 403


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 404


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 24.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: if true then false else true = if if true then false else true then spec (repr (Nflit (true))) else false
Prop: if false then false else true = if if false then false else true then spec (repr (Nfneglit (true))) else false
Prop: if false then false else true = if if false then false else true then spec (repr (Nfneglit (false))) else false
asdf
=================================================
Progress: 405


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 1(rank : 24.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: true = if if true then false else true then spec (repr (Nfneglit (false))) else false
Prop: true = if if true then false else true then spec (repr (Nflit (false))) else false
Prop: true = if if false then false else true then spec (repr (Nflit (false))) else false
asdf
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: if true then false else true = if if true then false else true then spec (repr (Nfand (Nflit (true)) (Nflit (true)))) else false
Prop: if false then false else true = if if false then false else true then spec (repr (Nfneglit (true))) else false
Prop: if false then false else true = if if false then false else true then spec (repr (Nfneglit (false))) else false
asdf
=================================================
Progress: 406


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
=================================================
Progress: 407


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if false then false else mainNew (Nflit (false))
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfneglit (false)) = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if true then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nfand (Nflit (true)) (Nfneglit (false))) = if false then false else true
asdf
=================================================
Progress: 408


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfneglit (false)) (Nfneglit (true))) = if false then false else spec (repr (Nfor (Nfneglit (false)) (Nfneglit (true))))
Prop: mainNew (Nflit (true)) = if true then false else spec (repr (Nflit (true)))
Prop: mainNew (Nflit (true)) = if false then false else spec (repr (Nflit (true)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfor (Nflit (true)) (Nfneglit (false))) (Nflit (false))) = if true then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nfor (Nflit (true)) (Nflit (true))) = if true then false else true
asdf
=================================================
Progress: 409


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if false then false else mainNew (Nfneglit (true))
Prop: spec (repr (Nfand (Nflit (false)) (Nflit (true)))) = if false then false else mainNew (Nfand (Nflit (false)) (Nflit (true)))
Prop: spec (repr (Nfand (Nfor (Nfneglit (true)) (Nflit (true))) (Nflit (false)))) = if false then false else mainNew (Nfand (Nfor (Nfneglit (true)) (Nflit (true))) (Nflit (false)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfor (Nfneglit (true)) (Nfneglit (false))) (Nflit (true)))) = if false then false else true
Prop: spec (repr (Nfand (Nfneglit (false)) (Nfneglit (true)))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 410


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 411


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 412


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 413


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 414


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 415


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 416


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
asdf
=================================================
Progress: 417


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
=================================================
Progress: 418


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfneglit (true)) (Nfneglit (true))) = if false then false else mainNew (Nfand (Nfneglit (true)) (Nfneglit (true)))
Prop: mainNew (Nfor (Nfneglit (true)) (Nfand (Nflit (false)) (Nfand (Nfneglit (true)) (Nflit (true))))) = if false then false else mainNew (Nfor (Nfneglit (true)) (Nfand (Nflit (false)) (Nfand (Nfneglit (true)) (Nflit (true)))))
Prop: mainNew (Nfor (Nfand (Nfneglit (false)) (Nfand (Nflit (true)) (Nfor (Nfand (Nfneglit (true)) (Nfneglit (false))) (Nfneglit (false))))) (Nfneglit (false))) = if false then false else mainNew (Nfor (Nfand (Nfneglit (false)) (Nfand (Nflit (true)) (Nfor (Nfand (Nfneglit (true)) (Nfneglit (false))) (Nfneglit (false))))) (Nfneglit (false)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 419


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 420


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 421


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 422


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 423


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 424


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 425


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (false))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else mainNew (Nfneglit (true))
Prop: if true then false else true = if false then false else mainNew (Nfneglit (true))
Prop: if true then false else true = if true then false else mainNew (Nfneglit (true))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 426


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 427


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 428


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 429


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 430


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 431


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 432


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 433


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 434


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 435


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if false then false else mainNew (Nfneglit (true))
asdf
=================================================
Progress: 436


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (true))
asdf
validate generalize_common_subterm_goal
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
asdf
=================================================
Progress: 437


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (false)) (Nfor (Nfor (Nfneglit (false)) (Nflit (true))) (Nflit (true)))) = if false then false else spec (repr (Nfand (Nflit (false)) (Nfor (Nfor (Nfneglit (false)) (Nflit (true))) (Nflit (true)))))
Prop: mainNew (Nflit (false)) = if false then false else spec (repr (Nflit (false)))
Prop: mainNew (Nfneglit (true)) = if false then false else spec (repr (Nfneglit (true)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nfor (Nflit (true)) (Nfneglit (false))) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 438


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 439


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 440


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 441


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 442


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 443


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 444


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
Prop: if true then false else true = if false then false else spec (repr (Nfneglit (true)))
Prop: if true then false else true = if true then false else spec (repr (Nfneglit (true)))
asdf
=================================================
Progress: 445


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (true)) (Nfor (Nflit (false)) (Nfneglit (true))))) = if true then false else mainNew (Nfand (Nflit (true)) (Nfor (Nflit (false)) (Nfneglit (true))))
Prop: spec (repr (Nflit (true))) = if false then false else mainNew (Nflit (true))
Prop: spec (repr (Nfor (Nfand (Nflit (false)) (Nfor (Nfneglit (false)) (Nfor (Nflit (true)) (Nflit (true))))) (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nfor (Nfneglit (false)) (Nfneglit (false))))))) = if true then false else mainNew (Nfor (Nfand (Nflit (false)) (Nfor (Nfneglit (false)) (Nfor (Nflit (true)) (Nflit (true))))) (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nfor (Nfneglit (false)) (Nfneglit (false))))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if true then false else true
Prop: spec (repr (Nfor (Nfor (Nflit (true)) (Nflit (false))) (Nfneglit (true)))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
asdf
=================================================
Progress: 446


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if true then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nflit (false)) = if true then false else mainNew (Nflit (false))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 447


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 448


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 449


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 450


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 451


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 452


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 453


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 454


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 455


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else mainNew (Nfneglit (true))
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
=================================================
Progress: 456


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 457


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else spec (repr (Nfneglit (true)))
Prop: mainNew (Nfor (Nflit (false)) (Nfneglit (false))) = if false then false else spec (repr (Nfor (Nflit (false)) (Nfneglit (false))))
Prop: mainNew (Nfneglit (true)) = if false then false else spec (repr (Nfneglit (true)))
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nfor (Nflit (true)) (Nflit (false))) = if true then false else true
Prop: mainNew (Nfor (Nfneglit (false)) (Nflit (false))) = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 458


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 459


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 460


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 461


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 462


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 463


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 464


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else spec (repr (Nfneglit (true)))
Prop: if true then false else true = if false then false else spec (repr (Nfneglit (true)))
Prop: if true then false else true = if false then false else spec (repr (Nfneglit (true)))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 465


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 466


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 467


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 468


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 469


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 470


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
asdf
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
asdf
=================================================
Progress: 471


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 472


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfor (Nfor (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nfneglit (true)))) (Nfand (Nflit (true)) (Nfneglit (true)))) (Nfand (Nfneglit (true)) (Nfneglit (false))))) = if true then false else mainNew (Nfand (Nfor (Nfor (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nfneglit (true)))) (Nfand (Nflit (true)) (Nfneglit (true)))) (Nfand (Nfneglit (true)) (Nfneglit (false))))
Prop: spec (repr (Nfneglit (false))) = if false then false else mainNew (Nfneglit (false))
Prop: spec (repr (Nflit (true))) = if true then false else mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfor (Nflit (false)) (Nfor (Nfneglit (false)) (Nflit (false))))
Prop: true = if false then false else mainNew (Nfor (Nfand (Nfneglit (true)) (Nflit (false))) (Nfneglit (false)))
Prop: true = if true then false else mainNew (Nfand (Nfand (Nfor (Nflit (true)) (Nfand (Nfor (Nfneglit (true)) (Nfneglit (true))) (Nfneglit (false)))) (Nfneglit (false))) (Nfneglit (false)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 473


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Fnot (Flit (false))) = if true then false else spec (Fnot (Flit (false)))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (repr (Nflit (true))) = if true then false else spec (repr (Nflit (true)))
Prop: spec (repr (Nflit (false))) = if true then false else spec (repr (Nflit (false)))
Prop: spec (repr (Nfneglit (true))) = if true then false else spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 474


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (true)) (Nflit (false)))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 475


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nflit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfand (Nfneglit (false)) (Nfneglit (true))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 476


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if true then false else mainNew (Nflit (false))
Prop: mainNew (Nflit (false)) = if true then false else mainNew (Nflit (false))
Prop: mainNew (Nflit (false)) = if false then false else mainNew (Nflit (false))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 477


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 478


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if true then false else spec (repr (Nfneglit (false)))
Prop: mainNew (Nfneglit (false)) = if true then false else spec (repr (Nfneglit (false)))
Prop: mainNew (Nfor (Nflit (false)) (Nfand (Nflit (true)) (Nfand (Nfand (Nflit (false)) (Nfor (Nflit (true)) (Nflit (false)))) (Nfneglit (false))))) = if true then false else spec (repr (Nfor (Nflit (false)) (Nfand (Nflit (true)) (Nfand (Nfand (Nflit (false)) (Nfor (Nflit (true)) (Nflit (false)))) (Nfneglit (false))))))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 479


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 480


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if false then false else mainNew (Nflit (true))
Prop: spec (repr (Nfand (Nfneglit (false)) (Nfneglit (false)))) = if false then false else mainNew (Nfand (Nfneglit (false)) (Nfneglit (false)))
Prop: spec (repr (Nfand (Nfneglit (false)) (Nflit (true)))) = if true then false else mainNew (Nfand (Nfneglit (false)) (Nflit (true)))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfor (Nfneglit (false)) (Nflit (true)))
Prop: true = if true then false else mainNew (Nfor (Nflit (true)) (Nflit (false)))
Prop: true = if true then false else mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 481


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Fand (Flit (true)) (Flit (false))) = if false then false else spec (Fand (Flit (true)) (Flit (false)))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Fnot (Flit (true))) = if false then false else spec (Fnot (Flit (true)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 482


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nflit (false)) (Nfor (Nflit (true)) (Nflit (true))))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 483


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nflit (false)))
Prop: true = if false then false else spec (repr (Nflit (false)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 484


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 485


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 486


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 487


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 488


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 489


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
asdf
=================================================
Progress: 490


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else mainNew (Nflit (false))
Prop: spec (repr (Nflit (true))) = if true then false else mainNew (Nflit (true))
Prop: spec (repr (Nflit (false))) = if true then false else mainNew (Nflit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (true)) (Nflit (true)))) = if false then false else true
Prop: spec (repr (Nfand (Nfand (Nfneglit (true)) (Nflit (true))) (Nfor (Nflit (false)) (Nfor (Nfor (Nflit (false)) (Nflit (false))) (Nfand (Nflit (false)) (Nflit (true))))))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
asdf
=================================================
Progress: 491


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else mainNew (Nflit (false))
Prop: spec (repr (Nfneglit (false))) = if true then false else mainNew (Nfneglit (false))
Prop: spec (repr (Nfneglit (false))) = if false then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 492


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 493


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 494


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 495


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 496


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 497


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 498


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else true
Prop: if false then false else true = if true then false else true
Prop: if false then false else true = if true then false else true
asdf
=================================================
Progress: 499


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfand (Nflit (false)) (Nfneglit (true))) = if false then false else mainNew (Nfand (Nflit (false)) (Nfneglit (true)))
Prop: mainNew (Nflit (false)) = if false then false else mainNew (Nflit (false))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 500


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 501


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 502


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 503


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 504


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 505


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 506


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else true
Prop: if true then false else true = if true then false else true
Prop: if true then false else true = if true then false else true
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 507


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 508


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 509


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 510


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 511


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 512


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else true
Prop: if true then false else true = if false then false else true
Prop: if true then false else true = if false then false else true
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
End of Lemma List


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 513


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:11.)
=================================================
Progress: 514


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool2(rank:11.)
=================================================
Progress: 515


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 516


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 517


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 518


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else true
Prop: if false then false else true = if true then false else true
Prop: if false then false else true = if true then false else true
asdf
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 519


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro bool1(rank:13.)
=================================================
Progress: 520


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

5 conjecture(s) more...
>>> intro bool1(rank : 13.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 521


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if false then false else true
Prop: mainNew (Nfand (Nfneglit (true)) (Nflit (false))) = if true then false else true
Prop: mainNew (Nfand (Nfneglit (false)) (Nfneglit (false))) = if true then false else true
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
=================================================
Progress: 522


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfand (Nfneglit (true)) (Nflit (true)))
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nflit (false))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 523


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 524


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 525


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 526


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 527


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 528


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (false))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 529


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 530


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 531


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 532


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 533


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (true))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 534


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:11.)
=================================================
Progress: 535


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool2(rank:11.)
=================================================
Progress: 536


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 537


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 538


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (true))
asdf
=================================================
Progress: 539


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if true then false else mainNew (Nfneglit (false))
Prop: mainNew (Nflit (false)) = if true then false else mainNew (Nflit (false))
Prop: mainNew (Nfneglit (false)) = if false then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
Prop: spec (repr (Nfor (Nfneglit (false)) (Nfand (Nfneglit (true)) (Nflit (true))))) = if true then false else true
asdf
=================================================
Progress: 540


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfor (Nflit (true)) (Nflit (false))) = if true then false else true
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfor (Nfor (Nflit (false)) (Nflit (false))) (Nflit (false)))) = if false then false else true
asdf
=================================================
Progress: 541


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfand (Nflit (true)) (Nfneglit (true)))
Prop: true = if false then false else mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfand (Nfand (Nflit (false)) (Nfneglit (true))) (Nfor (Nflit (true)) (Nfneglit (true))))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
asdf
=================================================
Progress: 542


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfor (Nfor (Nfneglit (false)) (Nfor (Nfor (Nfand (Nflit (true)) (Nfneglit (true))) (Nflit (true))) (Nfand (Nflit (false)) (Nflit (true))))) (Nfand (Nfneglit (false)) (Nflit (true)))) = if true then false else mainNew (Nfor (Nfor (Nfneglit (false)) (Nfor (Nfor (Nfand (Nflit (true)) (Nfneglit (true))) (Nflit (true))) (Nfand (Nflit (false)) (Nflit (true))))) (Nfand (Nfneglit (false)) (Nflit (true))))
Prop: mainNew (Nflit (false)) = if true then false else mainNew (Nflit (false))
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Prop: spec (repr (Nfand (Nfand (Nfor (Nfand (Nfneglit (false)) (Nfand (Nfor (Nflit (true)) (Nfand (Nfand (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nfneglit (true))) (Nfand (Nfneglit (true)) (Nfneglit (false)))) (Nfneglit (false)))) (Nfneglit (false)))) (Nflit (false))) (Nflit (false))) (Nfneglit (false)))) = if true then false else true
Prop: spec (repr (Nfand (Nflit (false)) (Nfneglit (false)))) = if true then false else true
=================================================
Progress: 543


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (false)) (Nflit (false))) = if true then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfand (Nfneglit (true)) (Nflit (true))) = if true then false else true
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nfor (Nflit (true)) (Nfneglit (false)))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 544


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 545


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 546


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 547


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 548


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 549


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 550


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else true
Prop: if true then false else true = if false then false else true
Prop: if false then false else true = if false then false else true
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 551


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 552


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 553


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 554


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 555


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 556


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else true
Prop: if true then false else true = if false then false else true
Prop: if false then false else true = if false then false else true
=================================================
Progress: 557


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nflit (true))
Prop: true = if true then false else mainNew (Nflit (false))
Prop: true = if false then false else mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
asdf
=================================================
Progress: 558


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfneglit (true)) (Nfneglit (true))) = if true then false else mainNew (Nfand (Nfneglit (true)) (Nfneglit (true)))
Prop: mainNew (Nfneglit (true)) = if true then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfneglit (false)) = if false then false else mainNew (Nfneglit (false))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nflit (true)) (Nfneglit (false)))) = if true then false else true
Prop: spec (repr (Nfand (Nfand (Nflit (false)) (Nflit (false))) (Nfor (Nflit (false)) (Nfand (Nfneglit (false)) (Nflit (true)))))) = if true then false else true
Prop: spec (repr (Nfand (Nfneglit (true)) (Nfneglit (false)))) = if true then false else true
asdf
=================================================
Progress: 559


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nfneglit (false)) = if true then false else true
Prop: mainNew (Nflit (false)) = if false then false else true
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
asdf
=================================================
Progress: 560


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nflit (false))
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfor (Nflit (false)) (Nfneglit (false)))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 561


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 562


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 563


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 564


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 565


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 566


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (false))
asdf
=================================================
Progress: 567


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else mainNew (Nflit (false))
Prop: spec (repr (Nfneglit (false))) = if false then false else mainNew (Nfneglit (false))
Prop: spec (repr (Nflit (true))) = if false then false else mainNew (Nflit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 568


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 569


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 570


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 571


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 572


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 573


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 574


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 575


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 576


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 577


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 578


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 579


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 580


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else true
Prop: if true then false else true = if false then false else true
Prop: if false then false else true = if true then false else true
asdf
=================================================
Progress: 581


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else mainNew (Nfneglit (true))
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
asdf
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 582


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 583


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 584


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 585


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 586


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (true))
=================================================
Progress: 587


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
=================================================
Progress: 588


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (true)) (Nfor (Nfneglit (false)) (Nfneglit (true)))) = if true then false else spec (repr (Nfand (Nflit (true)) (Nfor (Nfneglit (false)) (Nfneglit (true)))))
Prop: mainNew (Nfand (Nfneglit (true)) (Nfor (Nfneglit (true)) (Nfneglit (false)))) = if false then false else spec (repr (Nfand (Nfneglit (true)) (Nfor (Nfneglit (true)) (Nfneglit (false)))))
Prop: mainNew (Nfneglit (true)) = if true then false else spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nfor (Nfneglit (true)) (Nflit (false))))) = if false then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 589


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 590


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 591


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 592


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 593


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 594


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 595


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else true
Prop: if false then false else true = if true then false else true
Prop: if true then false else true = if false then false else true
asdf
=================================================
Progress: 596


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nflit (true)) = if false then false else mainNew (Nflit (true))
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 597


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 598


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 599


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 600


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 601


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 602


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 603


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else mainNew (Nfneglit (true))
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
Prop: if true then false else true = if false then false else mainNew (Nfneglit (true))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 604


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 605


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 606


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 607


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 608


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 609


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 610


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 611


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 612


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 613


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (false))
=================================================
Progress: 614


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (true))
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
asdf
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 615


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:11.)
=================================================
Progress: 616


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool2(rank:11.)
=================================================
Progress: 617


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 618


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 619


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (false))
asdf
=================================================
Progress: 620


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Forr (Flit (false)) (Fnot (Flit (true)))) = if true then false else spec (Forr (Flit (false)) (Fnot (Flit (true))))
validate generalize_common_subterm_goal
Prop: spec (Forr (Fnot (Flit (true))) (Flit (false))) = if true then false else spec (Forr (Fnot (Flit (true))) (Flit (false)))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
Lemma List
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 621


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 622


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:7.)
=================================================
Progress: 623


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nnfformula1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 624


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 625


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Cond2 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Lemma List
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Cond2 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 626


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Cond2 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 627


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Forr (Flit (false)) (Flit (true))) = if true then false else spec (Forr (Flit (false)) (Flit (true)))
Prop: spec (Forr (Flit (true)) (Flit (true))) = if false then false else spec (Forr (Flit (true)) (Flit (true)))
Prop: spec (Fand (Fnot (Flit (true))) (Flit (false))) = if false then false else spec (Fand (Fnot (Flit (true))) (Flit (false)))
asdf
=================================================
Progress: 628


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 629


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else mainNew (Nflit (false))
Prop: spec (repr (Nfand (Nfand (Nflit (true)) (Nflit (false))) (Nfand (Nflit (false)) (Nfneglit (true))))) = if false then false else mainNew (Nfand (Nfand (Nflit (true)) (Nflit (false))) (Nfand (Nflit (false)) (Nfneglit (true))))
Prop: spec (repr (Nfneglit (false))) = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfor (Nfor (Nfor (Nfneglit (false)) (Nfand (Nflit (true)) (Nfneglit (false)))) (Nflit (true))) (Nflit (true))) (Nfneglit (true)))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 630


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 631


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (false)) (Nfor (Nfneglit (false)) (Nfneglit (true)))) = if false then false else spec (repr (Nfand (Nflit (false)) (Nfor (Nfneglit (false)) (Nfneglit (true)))))
Prop: mainNew (Nflit (false)) = if false then false else spec (repr (Nflit (false)))
Prop: mainNew (Nfneglit (false)) = if false then false else spec (repr (Nfneglit (false)))
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nflit (false)))
Prop: true = if true then false else spec (repr (Nfand (Nfneglit (true)) (Nflit (false))))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 632


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 633


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 634


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 635


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 636


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 637


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 638


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 639


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 640


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
asdf
=================================================
Progress: 641


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfneglit (true)) (Nflit (false))) = if false then false else mainNew (Nfand (Nfneglit (true)) (Nflit (false)))
Prop: mainNew (Nfneglit (false)) = if false then false else mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (true)) = if true then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 642


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfand (Nfor (Nflit (false)) (Nfneglit (false))) (Nfneglit (true))) = if false then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 643


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nflit (false))
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if false then false else mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 644


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (false)) = if true then false else mainNew (Nfneglit (false))
Prop: mainNew (Nfand (Nfor (Nfand (Nfand (Nfor (Nfor (Nflit (true)) (Nfor (Nflit (false)) (Nfneglit (true)))) (Nflit (false))) (Nfneglit (true))) (Nfand (Nfand (Nfand (Nfneglit (true)) (Nflit (false))) (Nfor (Nfor (Nfneglit (true)) (Nfor (Nfor (Nflit (true)) (Nfneglit (true))) (Nfor (Nfand (Nfor (Nflit (true)) (Nfneglit (false))) (Nfneglit (false))) (Nflit (true))))) (Nflit (true)))) (Nflit (false)))) (Nfneglit (true))) (Nfand (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nfor (Nfneglit (false)) (Nflit (true))))) (Nfneglit (true)))) = if true then false else mainNew (Nfand (Nfor (Nfand (Nfand (Nfor (Nfor (Nflit (true)) (Nfor (Nflit (false)) (Nfneglit (true)))) (Nflit (false))) (Nfneglit (true))) (Nfand (Nfand (Nfand (Nfneglit (true)) (Nflit (false))) (Nfor (Nfor (Nfneglit (true)) (Nfor (Nfor (Nflit (true)) (Nfneglit (true))) (Nfor (Nfand (Nfor (Nflit (true)) (Nfneglit (false))) (Nfneglit (false))) (Nflit (true))))) (Nflit (true)))) (Nflit (false)))) (Nfneglit (true))) (Nfand (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nfor (Nfneglit (false)) (Nflit (true))))) (Nfneglit (true))))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfor (Nflit (false)) (Nfor (Nfneglit (true)) (Nfor (Nfor (Nfneglit (true)) (Nfand (Nfor (Nflit (true)) (Nfand (Nfor (Nfand (Nfand (Nfneglit (true)) (Nfneglit (false))) (Nfand (Nfand (Nfand (Nfneglit (false)) (Nflit (false))) (Nfneglit (false))) (Nfand (Nfor (Nfneglit (false)) (Nflit (false))) (Nfand (Nfneglit (true)) (Nfneglit (true)))))) (Nfneglit (true))) (Nflit (false)))) (Nfneglit (true)))) (Nflit (true))))) (Nflit (true)))) = if false then false else true
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
=================================================
Progress: 645


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfand (Nfneglit (false)) (Nfand (Nfneglit (true)) (Nflit (true)))) = if true then false else true
Prop: mainNew (Nfand (Nflit (true)) (Nfand (Nfneglit (false)) (Nfneglit (false)))) = if true then false else true
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfneglit (false)) (Nfor (Nfneglit (false)) (Nfand (Nfneglit (false)) (Nfneglit (true)))))) = if false then false else true
Prop: spec (repr (Nfor (Nfor (Nfor (Nfor (Nfor (Nflit (false)) (Nfneglit (true))) (Nfor (Nfneglit (false)) (Nflit (true)))) (Nfor (Nflit (false)) (Nflit (false)))) (Nflit (false))) (Nfneglit (false)))) = if false then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
=================================================
Progress: 646


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nflit (true))
Prop: true = if false then false else mainNew (Nflit (false))
Prop: true = if false then false else mainNew (Nflit (false))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfor (Nfand (Nfand (Nfand (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nfneglit (false)))) (Nfneglit (true))) (Nfor (Nfor (Nfneglit (false)) (Nflit (false))) (Nflit (false)))) (Nflit (true)))) = if true then false else true
Prop: spec (repr (Nfand (Nfand (Nfneglit (false)) (Nflit (false))) (Nflit (false)))) = if false then false else true
asdf
=================================================
Progress: 647


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if false then false else mainNew (Nfneglit (true))
Prop: spec (repr (Nflit (true))) = if false then false else mainNew (Nflit (true))
Prop: spec (repr (Nfand (Nflit (false)) (Nfneglit (false)))) = if true then false else mainNew (Nfand (Nflit (false)) (Nfneglit (false)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Prop: spec (repr (Nfor (Nfneglit (false)) (Nflit (true)))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 648


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 649


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 650


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 651


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 652


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 653


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 654


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else mainNew (Nfneglit (true))
Prop: if true then false else true = if false then false else mainNew (Nfneglit (true))
Prop: if true then false else true = if false then false else mainNew (Nfneglit (true))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 655


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 656


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 657


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 658


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 659


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 660


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if false then false else mainNew (Nfneglit (false))
asdf
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
asdf
=================================================
Progress: 661


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
=================================================
Progress: 662


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nflit (false)))) = if true then false else spec (repr (Nfand (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nflit (false)))))
Prop: mainNew (Nfand (Nfneglit (false)) (Nfneglit (false))) = if false then false else spec (repr (Nfand (Nfneglit (false)) (Nfneglit (false))))
Prop: mainNew (Nfand (Nfand (Nflit (false)) (Nfneglit (false))) (Nflit (true))) = if true then false else spec (repr (Nfand (Nfand (Nflit (false)) (Nfneglit (false))) (Nflit (true))))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if false then false else true
Prop: mainNew (Nfand (Nflit (true)) (Nflit (true))) = if false then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 663


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 664


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 665


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 666


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 667


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 668


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 669


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else spec (repr (Nfneglit (true)))
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
Prop: if true then false else true = if false then false else spec (repr (Nfneglit (true)))
asdf
=================================================
Progress: 670


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfand (Nfneglit (true)) (Nfor (Nfand (Nfand (Nfor (Nflit (false)) (Nflit (false))) (Nflit (true))) (Nfneglit (false))) (Nfneglit (true)))) = if false then false else mainNew (Nfand (Nfneglit (true)) (Nfor (Nfand (Nfand (Nfor (Nflit (false)) (Nflit (false))) (Nflit (true))) (Nfneglit (false))) (Nfneglit (true))))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (false)) (Nfor (Nfand (Nfneglit (true)) (Nflit (true))) (Nflit (true)))) = if true then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 671


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 672


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 673


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 674


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 675


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 676


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 677


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
Prop: if true then false else true = if false then false else mainNew (Nfneglit (true))
Prop: if true then false else true = if false then false else mainNew (Nfneglit (true))
=================================================
Progress: 678


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
Prop: spec (Forr (Flit (false)) (Fand (Flit (false)) (Flit (true)))) = if true then false else spec (Forr (Flit (false)) (Fand (Flit (false)) (Flit (true))))
Prop: spec (Fand (Fand (Forr (Flit (false)) (Flit (true))) (Fand (Flit (false)) (Fand (Fnot (Flit (false))) (Flit (false))))) (Fand (Fand (Flit (true)) (Flit (true))) (Fand (Flit (false)) (Flit (true))))) = if false then false else spec (Fand (Fand (Forr (Flit (false)) (Flit (true))) (Fand (Flit (false)) (Fand (Fnot (Flit (false))) (Flit (false))))) (Fand (Fand (Flit (true)) (Flit (true))) (Fand (Flit (false)) (Flit (true)))))
Prop: spec (Fand (Flit (false)) (Flit (false))) = if true then false else spec (Fand (Flit (false)) (Flit (false)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
Lemma List
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 679


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 680


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Lemma List
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 681


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 682


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
asdf
=================================================
Progress: 683


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 684


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then false else mainNew (Nfneglit (true))
Prop: spec (repr (Nfneglit (true))) = if true then false else mainNew (Nfneglit (true))
Prop: spec (repr (Nfneglit (false))) = if false then false else mainNew (Nfneglit (false))
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 685


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 686


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if true then false else spec (repr (Nflit (false)))
Prop: mainNew (Nfor (Nflit (true)) (Nflit (false))) = if true then false else spec (repr (Nfor (Nflit (true)) (Nflit (false))))
Prop: mainNew (Nfneglit (false)) = if false then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nflit (true)))
Prop: true = if false then false else spec (repr (Nflit (true)))
Prop: true = if true then false else spec (repr (Nfand (Nflit (false)) (Nfneglit (true))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 687


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nflit (true))))) = if false then false else mainNew (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nflit (true)))))
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nflit (true)) = if true then false else mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 688


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nfor (Nfneglit (true)) (Nflit (false))) = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 689


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nflit (false))
Prop: true = if true then false else mainNew (Nflit (false))
Prop: true = if true then false else mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 690


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if true then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfneglit (true)) = if true then false else mainNew (Nfneglit (true))
Prop: mainNew (Nflit (true)) = if false then false else mainNew (Nflit (true))
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if false then false else true
Prop: spec (repr (Nfor (Nfneglit (false)) (Nfneglit (true)))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
asdf
=================================================
Progress: 691


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (false)) (Nfor (Nfor (Nfneglit (false)) (Nfor (Nfor (Nfneglit (false)) (Nflit (false))) (Nflit (false)))) (Nfand (Nfneglit (false)) (Nfor (Nflit (false)) (Nflit (false)))))) = if false then false else true
Prop: mainNew (Nfor (Nflit (false)) (Nflit (false))) = if true then false else true
Prop: mainNew (Nfand (Nfneglit (false)) (Nfand (Nfand (Nfor (Nfneglit (false)) (Nflit (false))) (Nfneglit (true))) (Nfneglit (true)))) = if false then false else true
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfand (Nflit (false)) (Nfneglit (false))) (Nfneglit (false)))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 692


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 693


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 694


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 695


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 696


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 697


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 698


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 699


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 700


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 701


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 702


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 703


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 704


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else true
Prop: if true then false else true = if true then false else true
Prop: if false then false else true = if true then false else true
asdf
=================================================
Progress: 705


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else true
Prop: if false then false else true = if false then false else true
Prop: if false then false else true = if true then false else true
asdf
=================================================
Progress: 706


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nflit (true))
Prop: true = if true then false else mainNew (Nflit (true))
Prop: true = if false then false else mainNew (Nfor (Nflit (false)) (Nfneglit (false)))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfneglit (false)) (Nfneglit (true)))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
=================================================
Progress: 707


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
=================================================
Progress: 708


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfneglit (false)) = if false then false else mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (true)) = if true then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfand (Nflit (false)) (Nfand (Nflit (false)) (Nfor (Nfand (Nfneglit (false)) (Nfand (Nflit (false)) (Nfneglit (false)))) (Nflit (true))))) (Nflit (false))) = if false then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfand (Nfneglit (false)) (Nflit (false))) = if true then false else true
=================================================
Progress: 709


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if true then false else spec (repr (Nflit (false)))
Prop: mainNew (Nflit (true)) = if true then false else spec (repr (Nflit (true)))
Prop: mainNew (Nflit (false)) = if false then false else spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
=================================================
Progress: 710


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfor (Nfand (Nflit (false)) (Nflit (false))) (Nfor (Nfor (Nflit (true)) (Nflit (false))) (Nfand (Nflit (false)) (Nfneglit (true))))) (Nfand (Nfneglit (false)) (Nfneglit (false)))) = if false then false else mainNew (Nfand (Nfor (Nfand (Nflit (false)) (Nflit (false))) (Nfor (Nfor (Nflit (true)) (Nflit (false))) (Nfand (Nflit (false)) (Nfneglit (true))))) (Nfand (Nfneglit (false)) (Nfneglit (false))))
Prop: mainNew (Nflit (true)) = if true then false else mainNew (Nflit (true))
Prop: mainNew (Nfand (Nflit (false)) (Nfor (Nfneglit (true)) (Nflit (false)))) = if false then false else mainNew (Nfand (Nflit (false)) (Nfor (Nfneglit (true)) (Nflit (false))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 711


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 712


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfneglit (false)) (Nflit (false))) = if true then false else spec (repr (Nfand (Nfneglit (false)) (Nflit (false))))
Prop: mainNew (Nflit (true)) = if true then false else spec (repr (Nflit (true)))
Prop: mainNew (Nfor (Nfneglit (false)) (Nfneglit (true))) = if false then false else spec (repr (Nfor (Nfneglit (false)) (Nfneglit (true))))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfneglit (true)) (Nfor (Nfneglit (true)) (Nflit (false)))) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
=================================================
Progress: 713


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 714


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else mainNew (Nfneglit (false))
Prop: spec (repr (Nflit (false))) = if false then false else mainNew (Nflit (false))
Prop: spec (repr (Nfand (Nfneglit (false)) (Nfneglit (true)))) = if true then false else mainNew (Nfand (Nfneglit (false)) (Nfneglit (true)))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nflit (true))
Prop: true = if true then false else mainNew (Nfor (Nfneglit (false)) (Nfneglit (false)))
Prop: true = if false then false else mainNew (Nflit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 715


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Fand (Fand (Flit (true)) (Flit (false))) (Forr (Flit (true)) (Flit (true)))) = if true then false else spec (Fand (Fand (Flit (true)) (Flit (false))) (Forr (Flit (true)) (Flit (true))))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
Lemma List
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 716


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 717


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
asdf
=================================================
Progress: 718


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nflit (false))) = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 719


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfand (Nflit (false)) (Nfand (Nfneglit (false)) (Nflit (true)))))
Prop: true = if true then false else spec (repr (Nflit (false)))
Prop: true = if true then false else spec (repr (Nflit (false)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 720


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 721


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 722


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 723


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 724


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 725


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 726


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 727


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 728


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 729


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 730


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 731


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:11.)
=================================================
Progress: 732


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool2(rank:11.)
=================================================
Progress: 733


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 734


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 735


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
=================================================
Progress: 736


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
=================================================
Progress: 737


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfor (Nfand (Nfneglit (false)) (Nflit (false))) (Nflit (false))) (Nflit (false))) = if true then false else mainNew (Nfor (Nfor (Nfand (Nfneglit (false)) (Nflit (false))) (Nflit (false))) (Nflit (false)))
Prop: mainNew (Nflit (false)) = if true then false else mainNew (Nflit (false))
Prop: mainNew (Nflit (false)) = if false then false else mainNew (Nflit (false))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfand (Nflit (true)) (Nfneglit (true))) = if false then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 738


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 739


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 740


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 741


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 742


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 743


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 744


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if false then false else true
Prop: if true then false else true = if false then false else true
Prop: if true then false else true = if true then false else true
=================================================
Progress: 745


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if false then false else spec (repr (Nflit (false)))
Prop: mainNew (Nfor (Nflit (true)) (Nflit (true))) = if true then false else spec (repr (Nfor (Nflit (true)) (Nflit (true))))
Prop: mainNew (Nflit (true)) = if false then false else spec (repr (Nflit (true)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nfneglit (false)) = if true then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
asdf
=================================================
Progress: 746


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nflit (true))) = if false then false else mainNew (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nflit (true)))
Prop: mainNew (Nfor (Nfneglit (false)) (Nfand (Nflit (false)) (Nfand (Nfneglit (false)) (Nfand (Nfor (Nflit (false)) (Nfand (Nfneglit (true)) (Nfor (Nflit (false)) (Nfor (Nflit (true)) (Nfneglit (true)))))) (Nflit (false)))))) = if false then false else mainNew (Nfor (Nfneglit (false)) (Nfand (Nflit (false)) (Nfand (Nfneglit (false)) (Nfand (Nfor (Nflit (false)) (Nfand (Nfneglit (true)) (Nfor (Nflit (false)) (Nfor (Nflit (true)) (Nfneglit (true)))))) (Nflit (false))))))
Prop: mainNew (Nflit (true)) = if false then false else mainNew (Nflit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 747


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 748


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfneglit (false)) (Nfneglit (false))) = if true then false else spec (repr (Nfand (Nfneglit (false)) (Nfneglit (false))))
Prop: mainNew (Nflit (true)) = if false then false else spec (repr (Nflit (true)))
Prop: mainNew (Nfneglit (false)) = if false then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nfor (Nfor (Nflit (true)) (Nfor (Nflit (true)) (Nflit (false)))) (Nfand (Nfand (Nfor (Nfneglit (true)) (Nflit (false))) (Nflit (true))) (Nflit (true)))) = if false then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 749


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 750


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then false else mainNew (Nfneglit (true))
Prop: spec (repr (Nfneglit (true))) = if true then false else mainNew (Nfneglit (true))
Prop: spec (repr (Nfor (Nfor (Nfor (Nflit (true)) (Nfneglit (false))) (Nflit (true))) (Nflit (true)))) = if true then false else mainNew (Nfor (Nfor (Nfor (Nflit (true)) (Nfneglit (false))) (Nflit (true))) (Nflit (true)))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfor (Nflit (true)) (Nfor (Nfneglit (false)) (Nfor (Nfneglit (false)) (Nfand (Nflit (false)) (Nflit (true))))))
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if false then false else mainNew (Nfand (Nflit (true)) (Nfor (Nfor (Nfneglit (true)) (Nflit (true))) (Nfneglit (false))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 751


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 752


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfand (Nfand (Nfand (Nfor (Nfor (Nfor (Nfneglit (false)) (Nflit (false))) (Nfand (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nfneglit (false))))) (Nflit (true))) (Nflit (true))) (Nfor (Nfneglit (true)) (Nflit (true)))) (Nfneglit (true))) (Nfand (Nfneglit (false)) (Nfand (Nfneglit (true)) (Nflit (false)))))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfand (Nfneglit (true)) (Nflit (false)))) = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 753


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nflit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 754


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 0
Prop: spec (Fnot (Fnot (Flit (true)))) = if false then false else spec (Fnot (Fnot (Flit (true))))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Forr (Flit (true)) (Flit (false))) = if false then false else spec (Forr (Flit (true)) (Flit (false)))
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if false then false else true
asdf
=================================================
Progress: 755


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (true)) (Nfneglit (true)))) = if true then false else true
Prop: spec (repr (Nfand (Nfor (Nflit (false)) (Nfneglit (true))) (Nfor (Nflit (false)) (Nflit (false))))) = if false then false else true
Prop: spec (repr (Nfor (Nfneglit (false)) (Nfneglit (true)))) = if true then false else true
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if false then false else true
Prop: mainNew (Nfor (Nfneglit (false)) (Nfneglit (false))) = if false then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
=================================================
Progress: 756


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nflit (false)))
Prop: true = if true then false else spec (repr (Nfand (Nflit (true)) (Nflit (true))))
Prop: true = if true then false else spec (repr (Nfand (Nfneglit (true)) (Nflit (false))))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (false)) (Nfneglit (false))) = if false then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfand (Nflit (false)) (Nfor (Nflit (true)) (Nfneglit (true)))) = if false then false else true
=================================================
Progress: 757


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if true then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
Prop: mainNew (Nfand (Nfor (Nflit (true)) (Nfneglit (false))) (Nfneglit (false))) = if true then false else true
asdf
=================================================
Progress: 758


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfand (Nfneglit (false)) (Nfor (Nfneglit (true)) (Nfneglit (true))))) = if false then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if false then false else true
Prop: mainNew (Nfand (Nfneglit (false)) (Nflit (false))) = if false then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
=================================================
Progress: 759


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfand (Nfneglit (true)) (Nflit (true))))
Prop: true = if false then false else spec (repr (Nfor (Nfneglit (true)) (Nfneglit (false))))
Prop: true = if true then false else spec (repr (Nfand (Nfneglit (false)) (Nfand (Nfand (Nflit (true)) (Nflit (true))) (Nflit (false)))))
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
Prop: mainNew (Nfand (Nfneglit (true)) (Nfneglit (true))) = if false then false else true
=================================================
Progress: 760


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 0
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (false)) (Nfand (Nfneglit (false)) (Nfneglit (false)))) = if true then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfand (Nflit (true)) (Nfand (Nfneglit (false)) (Nfor (Nflit (true)) (Nflit (false))))) = if true then false else true
asdf
=================================================
Progress: 761


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfneglit (true)) (Nfneglit (false)))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
asdf
=================================================
Progress: 762


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nflit (false)))
Prop: true = if true then false else spec (repr (Nflit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (true)) (Nflit (false))) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 763


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 764


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 765


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 766


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 767


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 768


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 769


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 770


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 771


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 772


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 773


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
asdf
=================================================
Progress: 774


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 0
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Fand (Flit (true)) (Flit (false))) = if true then false else spec (Fand (Flit (true)) (Flit (false)))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
validate generalize_common_subterm_goal
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Fand (Flit (false)) (Flit (false))) = if true then false else spec (Fand (Flit (false)) (Flit (false)))
Prop: spec (repr (Nfand (Nflit (true)) (Nfneglit (true)))) = if false then false else spec (repr (Nfand (Nflit (true)) (Nfneglit (true))))
Prop: spec (repr (Nfneglit (false))) = if true then false else spec (repr (Nfneglit (false)))
Prop: spec (repr (Nfand (Nfneglit (false)) (Nflit (false)))) = if false then false else spec (repr (Nfand (Nfneglit (false)) (Nflit (false))))
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if true then false else true
Prop: mainNew (Nfand (Nfand (Nfor (Nfor (Nflit (true)) (Nflit (false))) (Nflit (false))) (Nfand (Nfand (Nfneglit (false)) (Nflit (true))) (Nflit (false)))) (Nfand (Nfor (Nflit (true)) (Nfand (Nfand (Nfneglit (true)) (Nflit (true))) (Nfneglit (true)))) (Nflit (false)))) = if true then false else true
asdf
=================================================
Progress: 775


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfor (Nfneglit (false)) (Nfneglit (true))) (Nfor (Nfor (Nfneglit (false)) (Nflit (true))) (Nfor (Nfneglit (true)) (Nflit (false)))))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfor (Nflit (false)) (Nfand (Nflit (false)) (Nflit (true)))) = if true then false else true
asdf
=================================================
Progress: 776


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nflit (true)))
Prop: true = if false then false else spec (repr (Nfand (Nfor (Nfneglit (true)) (Nfneglit (false))) (Nflit (true))))
Prop: true = if false then false else spec (repr (Nfand (Nfand (Nfneglit (true)) (Nflit (false))) (Nflit (true))))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfneglit (false)) (Nfand (Nfor (Nflit (true)) (Nfor (Nfand (Nfor (Nfand (Nfand (Nflit (true)) (Nfneglit (true))) (Nflit (false))) (Nflit (true))) (Nfand (Nfand (Nfneglit (true)) (Nfneglit (false))) (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nflit (false))))) (Nflit (true)))) (Nfand (Nflit (true)) (Nfneglit (true))))) = if true then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfand (Nfneglit (true)) (Nfand (Nfor (Nflit (false)) (Nflit (false))) (Nfand (Nflit (true)) (Nfor (Nfneglit (true)) (Nfneglit (false)))))) = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 777


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 778


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 779


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 780


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 781


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 782


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
asdf
=================================================
Progress: 783


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Fand (Fnot (Flit (false))) (Flit (false))) = if true then false else spec (Fand (Fnot (Flit (false))) (Flit (false)))
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
=================================================
Progress: 784


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if false then false else true
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
=================================================
Progress: 785


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfor (Nfneglit (true)) (Nfneglit (true))))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nfor (Nfor (Nflit (false)) (Nfneglit (true))) (Nflit (false))) = if false then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
=================================================
Progress: 786


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 0
Prop: spec (Fnot (Flit (false))) = if true then false else spec (Fnot (Flit (false)))
Prop: spec (Fnot (Fnot (Flit (false)))) = if true then false else spec (Fnot (Fnot (Flit (false))))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Fand (Flit (true)) (Forr (Fand (Flit (false)) (Fand (Fnot (Flit (true))) (Forr (Forr (Flit (true)) (Flit (false))) (Flit (true))))) (Flit (true)))) = if false then false else spec (Fand (Flit (true)) (Forr (Fand (Flit (false)) (Fand (Fnot (Flit (true))) (Forr (Forr (Flit (true)) (Flit (false))) (Flit (true))))) (Flit (true))))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nfor (Nflit (true)) (Nflit (false))) = if false then false else true
Prop: mainNew (Nfand (Nflit (false)) (Nfneglit (false))) = if false then false else true
=================================================
Progress: 787


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfand (Nflit (false)) (Nflit (true))) (Nfneglit (true)))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Prop: spec (repr (Nfor (Nfor (Nfor (Nflit (true)) (Nfor (Nfand (Nfneglit (true)) (Nfneglit (true))) (Nfand (Nflit (false)) (Nfneglit (true))))) (Nflit (false))) (Nfneglit (true)))) = if false then false else true
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nfand (Nfneglit (true)) (Nfneglit (false))) = if true then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 788


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 789


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 790


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nflit (false)))
Prop: true = if true then false else spec (repr (Nflit (true)))
Prop: true = if true then false else spec (repr (Nflit (true)))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfneglit (false)) (Nflit (false))) = if true then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
Prop: mainNew (Nfor (Nfneglit (true)) (Nfneglit (true))) = if false then false else true
asdf
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
