Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (nnf:nnfformula), main (nnf) = mainNew (nnf)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)

---------------------------------------
forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)

---------------------------------------
forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)

---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:6.)
=================================================
Progress: 3


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)

---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nnfformula1(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
spec (repr (Nfneglit (bool1))) = mainNew (Nfneglit (bool1))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 4


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
spec (repr (Nfneglit (bool1))) = mainNew (Nfneglit (bool1))

3 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nflit (bool1)
---------------------------------------
spec (repr (Nflit (bool1))) = mainNew (Nflit (bool1))

2 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 5


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nflit (bool1)
---------------------------------------
spec (repr (Nflit (bool1))) = mainNew (Nflit (bool1))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
spec (repr (Nfand (nnfformula2) (nnfformula3))) = mainNew (Nfand (nnfformula2) (nnfformula3))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 6


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
spec (repr (Nfand (nnfformula2) (nnfformula3))) = mainNew (Nfand (nnfformula2) (nnfformula3))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case mainNew (nnfformula2)(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
case spec (repr (nnfformula2))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 7


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 8


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case spec (repr (nnfformula2))(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case mainNew (nnfformula2)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 9


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 10


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if mainNew (nnfformula2) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case mainNew (nnfformula2)(rank:5.)
=================================================
Progress: 11


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if mainNew (nnfformula2) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 12


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:4.)
=================================================
Progress: 13


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 4.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case mainNew (nnfformula2)(rank:5.)
=================================================
Progress: 14


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: Nflit (true) = Nfneglit (false)
Prop: Nfor (Nfneglit (true)) (Nfneglit (true)) = Nfneglit (true)
Prop: Nflit (false) = Nfneglit (false)
Prop: spec (repr (Nfand (Nflit (false)) (Nfneglit (false)))) = spec (repr (Nfand (Nfor (Nfand (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nfneglit (false))))) (Nflit (false))) (Nflit (true))))
Prop: spec (repr (Nflit (false))) = spec (repr (Nflit (true)))
Prop: spec (repr (Nfor (Nfor (Nflit (false)) (Nfand (Nflit (false)) (Nflit (true)))) (Nflit (false)))) = spec (repr (Nflit (false)))
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 15


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 16


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> spec (repr (Nfneglit (bool1))) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 17


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> spec (repr (Nfneglit (bool1))) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 18


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 19


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 20


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 21


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 22


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case mainNew (nnfformula2)(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 23


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 24


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if spec (repr (nnfformula2)) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case spec (repr (nnfformula2))(rank:5.)
=================================================
Progress: 25


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if spec (repr (nnfformula2)) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case spec (repr (nnfformula2))(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 26


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case spec (repr (nnfformula2))(rank:5.)
=================================================
Progress: 27


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case spec (repr (nnfformula2))(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case mainNew (nnfformula2)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 28


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 0(rank:14.)
=================================================
Progress: 29


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 30


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 31


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
=================================================
Progress: 32


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
=================================================
Progress: 33


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (true))) then spec (repr (Nflit (true))) else false = spec (repr (Nfor (Nfand (Nfneglit (false)) (Nflit (false))) (Nflit (true))))
Prop: if spec (repr (Nflit (false))) then spec (repr (Nflit (false))) else false = spec (repr (Nfand (Nfneglit (true)) (Nfor (Nfneglit (true)) (Nfand (Nflit (false)) (Nfor (Nflit (false)) (Nfneglit (true)))))))
Prop: if spec (repr (Nfneglit (false))) then spec (repr (Nfneglit (false))) else false = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (false))) then spec (repr (Nfneglit (false))) else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nfneglit (false))) then spec (repr (Nfneglit (false))) else false = mainNew (Nfneglit (true))
Prop: if spec (repr (Nfand (Nflit (false)) (Nfneglit (false)))) then spec (repr (Nfand (Nflit (false)) (Nfneglit (false)))) else false = mainNew (Nfneglit (false))
asdf
=================================================
Progress: 34


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 35


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if mainNew (Nfneglit (true)) then spec (repr (Nflit (true))) else false
Prop: mainNew (Nfneglit (false)) = if mainNew (Nfneglit (false)) then spec (repr (Nflit (true))) else false
Prop: mainNew (Nfneglit (true)) = if mainNew (Nfneglit (true)) then spec (repr (Nfneglit (false))) else false
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if mainNew (Nfneglit (false)) then mainNew (Nfneglit (true)) else false
Prop: mainNew (Nflit (false)) = if mainNew (Nflit (false)) then mainNew (Nfneglit (false)) else false
Prop: mainNew (Nfneglit (true)) = if mainNew (Nfneglit (true)) then mainNew (Nflit (true)) else false
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nflit (true)) then mainNew (Nfand (Nflit (true)) (Nflit (true))) else false
Prop: true = if mainNew (Nflit (true)) then mainNew (Nflit (true)) else false
Prop: true = if mainNew (Nflit (false)) then mainNew (Nfneglit (false)) else false
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 36


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 37


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 38


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 39


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case mainNew (nnfformula1)(rank:6.)
rewrite <- Cond1 in goal at 0(rank:13.)
=================================================
Progress: 40


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> case mainNew (nnfformula1)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:14.)
induction nnfformula2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 41


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> mainNew (Nfneglit (bool1)) = if mainNew (Nfneglit (bool1)) then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 42


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> mainNew (Nfneglit (bool1)) = if mainNew (Nfneglit (bool1)) then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 43


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 2(rank:16.)
rewrite Cond1 in goal at 0(rank:24.)
rewrite Cond1 in goal at 1(rank:24.)
=================================================
Progress: 44


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case mainNew (nnfformula2)(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 45


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:14.)
rewrite Case1 in goal at 0(rank:22.)
=================================================
Progress: 46


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 47


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 48


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 49


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
rewrite <- Case1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (false)) (Nfor (Nfneglit (true)) (Nfor (Nflit (false)) (Nfneglit (true))))) = spec (repr (Nflit (true)))
Prop: mainNew (Nflit (true)) = spec (repr (Nfneglit (true)))
Prop: mainNew (Nfand (Nfneglit (true)) (Nfneglit (false))) = spec (repr (Nflit (true)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (false) = Nfneglit (false)
Prop: Nfneglit (false) = Nfand (Nflit (true)) (Nflit (true))
Prop: Nfor (Nfor (Nfneglit (true)) (Nfneglit (true))) (Nfneglit (false)) = Nfand (Nfor (Nfor (Nflit (true)) (Nflit (false))) (Nfneglit (true))) (Nfor (Nfneglit (false)) (Nfneglit (true)))
Prop: mainNew (Nflit (true)) = mainNew (Nfneglit (true))
Prop: mainNew (Nflit (true)) = mainNew (Nflit (true))
Prop: mainNew (Nflit (false)) = mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nfneglit (false))
Prop: true = mainNew (Nflit (false))
asdf
=================================================
Progress: 50


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfor (Nfneglit (false)) (Nfand (Nfneglit (true)) (Nfor (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nfand (Nfneglit (false)) (Nflit (true)))))) (Nflit (false)))) = mainNew (Nfneglit (false))
Prop: spec (repr (Nfneglit (false))) = mainNew (Nflit (true))
Prop: spec (repr (Nfand (Nflit (false)) (Nfneglit (false)))) = mainNew (Nfor (Nflit (false)) (Nfneglit (true)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (true))
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nflit (false))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 51


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 52


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> spec (repr (Nfneglit (bool1))) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 53


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> spec (repr (Nfneglit (bool1))) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 54


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 55


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 56


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 57


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 58


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 59


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 60


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 61


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 62


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = spec (repr (Nfneglit (false)))
Prop: mainNew (Nflit (false)) = spec (repr (Nfneglit (true)))
Prop: mainNew (Nfor (Nfneglit (false)) (Nfand (Nfor (Nflit (true)) (Nfneglit (false))) (Nfneglit (true)))) = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfneglit (false) = Nfneglit (true)
Prop: Nflit (true) = Nflit (true)
Prop: Nfneglit (true) = Nfor (Nfneglit (false)) (Nflit (false))
Prop: mainNew (Nflit (true)) = mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (false)) = mainNew (Nfneglit (true))
Prop: mainNew (Nfand (Nflit (false)) (Nfneglit (true))) = mainNew (Nfand (Nflit (true)) (Nflit (false)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (true))
Prop: true = mainNew (Nfand (Nflit (true)) (Nfneglit (true)))
Prop: true = mainNew (Nfneglit (false))
asdf
=================================================
Progress: 63


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 64


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfneglit (true) = Nfor (Nfneglit (true)) (Nflit (true))
Prop: Nfneglit (false) = Nfneglit (false)
Prop: Nfand (Nflit (false)) (Nflit (true)) = Nfor (Nfneglit (false)) (Nflit (false))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nflit (true)) (Nfneglit (true)))) = mainNew (Nflit (true))
Prop: spec (repr (Nflit (true))) = mainNew (Nfand (Nflit (false)) (Nflit (false)))
Prop: spec (repr (Nfand (Nfneglit (false)) (Nfor (Nfneglit (true)) (Nflit (true))))) = mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfand (Nflit (false)) (Nfand (Nfor (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nfand (Nfor (Nfneglit (false)) (Nflit (true))) (Nfand (Nflit (true)) (Nfor (Nfneglit (false)) (Nfand (Nflit (true)) (Nfneglit (false))))))) (Nfneglit (false))))
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nflit (false))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> nnfformula1 = nnfformula2
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 65


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> nnfformula1 = nnfformula2(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> nnfformula1 = nnfformula2

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 66


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> nnfformula1 = nnfformula2

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 67


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula2(rank:5.)
=================================================
Progress: 68


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula2(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
---------------------------------------
nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Nfand (Nfneglit (true)) (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nflit (true))) = Nflit (false)
Prop: Nfand (Nfneglit (true)) (Nfand (Nfor (Nflit (false)) (Nflit (true))) (Nflit (true))) = Nfand (Nflit (true)) (Nfneglit (false))
Prop: Nfor (Nflit (false)) (Nfand (Nfneglit (false)) (Nfor (Nfneglit (true)) (Nflit (true)))) = Nfneglit (true)
asdf
=================================================
Progress: 69


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 70


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfneglit (true)) (Nfneglit (true))) = if mainNew (Nfand (Nfneglit (true)) (Nfneglit (true))) then mainNew (Nfneglit (false)) else false
Prop: mainNew (Nflit (true)) = if mainNew (Nflit (true)) then mainNew (Nflit (true)) else false
Prop: mainNew (Nflit (true)) = if mainNew (Nflit (true)) then mainNew (Nfneglit (true)) else false
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (true)) (Nfand (Nfneglit (false)) (Nfand (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nfneglit (true))) (Nfand (Nfneglit (true)) (Nflit (true)))))) = if mainNew (Nfor (Nflit (true)) (Nfand (Nfneglit (false)) (Nfand (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nfneglit (true))) (Nfand (Nfneglit (true)) (Nflit (true)))))) then spec (repr (Nfneglit (false))) else false
Prop: mainNew (Nfneglit (true)) = if mainNew (Nfneglit (true)) then spec (repr (Nfneglit (true))) else false
Prop: mainNew (Nfand (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nfneglit (true)))) = if mainNew (Nfand (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nfneglit (true)))) then spec (repr (Nfneglit (true))) else false
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nflit (false)) then spec (repr (Nflit (false))) else false
Prop: true = if mainNew (Nfneglit (true)) then spec (repr (Nfand (Nfor (Nfneglit (true)) (Nfneglit (false))) (Nfor (Nfneglit (true)) (Nflit (true))))) else false
Prop: true = if mainNew (Nflit (false)) then spec (repr (Nflit (false))) else false
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 71


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 72


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 73


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case mainNew (nnfformula1)(rank:6.)
rewrite <- Cond1 in goal at 0(rank:13.)
=================================================
Progress: 74


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> case mainNew (nnfformula1)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:14.)
induction nnfformula2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 75


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 76


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case mainNew (nnfformula2)(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 77


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nnfformula2)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
=================================================
Progress: 78


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 79


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:13.)
=================================================
Progress: 80


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 81


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- Case1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = spec (repr (Nfneglit (true)))
Prop: mainNew (Nflit (true)) = spec (repr (Nfneglit (true)))
Prop: mainNew (Nfand (Nfand (Nflit (false)) (Nfneglit (false))) (Nfneglit (true))) = spec (repr (Nfand (Nflit (true)) (Nflit (false))))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfneglit (false) = Nflit (true)
Prop: Nfand (Nfneglit (true)) (Nfneglit (false)) = Nfor (Nflit (false)) (Nfneglit (false))
Prop: Nflit (false) = Nfneglit (false)
Prop: mainNew (Nflit (false)) = mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (true)) = mainNew (Nfand (Nfor (Nfneglit (false)) (Nfand (Nflit (true)) (Nfand (Nflit (true)) (Nfand (Nflit (true)) (Nfand (Nfneglit (false)) (Nfand (Nfneglit (true)) (Nflit (true)))))))) (Nflit (true)))
Prop: mainNew (Nfor (Nflit (false)) (Nfneglit (true))) = mainNew (Nflit (false))
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfneglit (false))
Prop: true = mainNew (Nfand (Nfneglit (true)) (Nfand (Nflit (false)) (Nflit (true))))
Prop: true = mainNew (Nfand (Nflit (false)) (Nfor (Nfand (Nfand (Nflit (false)) (Nfneglit (false))) (Nfand (Nflit (false)) (Nfneglit (false)))) (Nflit (false))))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 82


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 83


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> mainNew (Nfneglit (bool1)) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 84


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> mainNew (Nfneglit (bool1)) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 85


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 86


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 87


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 88


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 89


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 90


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (false) = Nflit (false)
Prop: Nfor (Nfand (Nflit (false)) (Nflit (true))) (Nfneglit (true)) = Nfneglit (false)
Prop: Nfor (Nflit (false)) (Nflit (false)) = Nflit (false)
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
parent
repr (nnfformula2)
lower
repr(_)
upper
spec(_)
remove upper
repr(nnfformula3)
remove lower
repr(nnfformula3)
remove upper
repr(nnfformula2)
remove lower
repr(_)
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = mainNew (Nfor (Nflit (false)) (Nflit (false)))
Prop: spec (repr (Nfneglit (false))) = mainNew (Nflit (true))
Prop: spec (repr (Nfand (Nfneglit (true)) (Nfneglit (true)))) = mainNew (Nfneglit (true))
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfand (Nflit (false)) (Nfor (Nfor (Nfneglit (true)) (Nflit (false))) (Nfor (Nfneglit (false)) (Nfneglit (false)))))
Prop: true = mainNew (Nfor (Nfneglit (true)) (Nflit (false)))
Prop: true = mainNew (Nfand (Nfneglit (true)) (Nfand (Nfand (Nflit (false)) (Nflit (false))) (Nfneglit (false))))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 91


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 92


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 93


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula2(rank:5.)
=================================================
Progress: 94


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula2(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
---------------------------------------
nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Nflit (true) = Nflit (true)
Prop: Nflit (true) = Nfand (Nfneglit (true)) (Nfneglit (false))
Prop: Nflit (true) = Nfneglit (false)
asdf
=================================================
Progress: 95


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:5.)
=================================================
Progress: 96


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: if mainNew (Nfneglit (true)) then spec (repr (Nfneglit (true))) else false = spec (repr (Nfneglit (false)))
Prop: if mainNew (Nflit (false)) then spec (repr (Nflit (false))) else false = spec (repr (Nfneglit (false)))
Prop: if mainNew (Nflit (false)) then spec (repr (Nflit (false))) else false = spec (repr (Nflit (true)))
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if true then spec (repr (Nflit (true))) else false = spec (repr (Nfneglit (true)))
Prop: if true then spec (repr (Nfneglit (false))) else false = spec (repr (Nflit (true)))
Prop: if true then spec (repr (Nflit (true))) else false = spec (repr (Nflit (true)))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: if true then spec (repr (Nflit (false))) else false = mainNew (Nfneglit (true))
Prop: if true then spec (repr (Nfneglit (true))) else false = mainNew (Nflit (true))
Prop: if true then spec (repr (Nfor (Nfor (Nflit (false)) (Nflit (false))) (Nflit (true)))) else false = mainNew (Nfor (Nfneglit (true)) (Nflit (false)))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (false))) then spec (repr (Nflit (false))) else false = mainNew (Nfneglit (true))
Prop: if spec (repr (Nfand (Nfneglit (false)) (Nfor (Nflit (true)) (Nflit (false))))) then spec (repr (Nfand (Nfneglit (false)) (Nfor (Nflit (true)) (Nflit (false))))) else false = mainNew (Nflit (true))
Prop: if spec (repr (Nfor (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (true)))) then spec (repr (Nfor (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (true)))) else false = mainNew (Nfneglit (false))
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 97


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 98


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 99


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 100


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if mainNew (Nfneglit (bool1)) then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 101


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 102


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if mainNew (Nfneglit (bool1)) then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 103


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 104


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 105


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 106


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 107


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 108


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 109


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 110


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 111


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 112


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 113


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 114


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if mainNew (nnfformula1) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 115


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:5.)
=================================================
Progress: 116


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (false))) then mainNew (Nfneglit (false)) else false = spec (repr (Nfneglit (true)))
Prop: if spec (repr (Nflit (false))) then mainNew (Nflit (false)) else false = spec (repr (Nfneglit (true)))
Prop: if spec (repr (Nflit (true))) then mainNew (Nflit (true)) else false = spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (false))) then true else false = spec (repr (Nfand (Nflit (true)) (Nflit (false))))
Prop: if spec (repr (Nflit (false))) then true else false = spec (repr (Nfor (Nflit (false)) (Nfor (Nfneglit (true)) (Nflit (true)))))
Prop: if spec (repr (Nfand (Nfand (Nfor (Nflit (true)) (Nfand (Nfneglit (true)) (Nfneglit (true)))) (Nfand (Nflit (false)) (Nfneglit (true)))) (Nflit (true)))) then true else false = spec (repr (Nfor (Nfneglit (false)) (Nfneglit (false))))
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfand (Nfor (Nflit (true)) (Nflit (true))) (Nfor (Nflit (false)) (Nfneglit (true))))) then true else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nflit (false))) then true else false = mainNew (Nflit (false))
Prop: if spec (repr (Nfor (Nflit (true)) (Nfneglit (true)))) then true else false = mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfor (Nfor (Nfor (Nfneglit (true)) (Nfneglit (true))) (Nfneglit (true))) (Nfand (Nflit (true)) (Nflit (true))))) then spec (repr (Nfor (Nfor (Nfor (Nfneglit (true)) (Nfneglit (true))) (Nfneglit (true))) (Nfand (Nflit (true)) (Nflit (true))))) else false = mainNew (Nflit (true))
Prop: if spec (repr (Nflit (true))) then spec (repr (Nflit (true))) else false = mainNew (Nfneglit (true))
Prop: if spec (repr (Nfneglit (false))) then spec (repr (Nfneglit (false))) else false = mainNew (Nfneglit (false))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 117


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 118


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 119


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case spec (repr (nnfformula1))(rank:6.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 120


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> case spec (repr (nnfformula1))(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:14.)
induction nnfformula2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 121


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case mainNew (nnfformula1)(rank:6.)
=================================================
Progress: 122


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> case mainNew (nnfformula1)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nnfformula2(rank:17.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 123


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 124


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 125


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: Nfneglit (true) = Nfor (Nfor (Nflit (true)) (Nfor (Nfneglit (false)) (Nflit (true)))) (Nfneglit (false))
Prop: Nfneglit (true) = Nfneglit (false)
Prop: Nfor (Nfor (Nfneglit (true)) (Nflit (false))) (Nflit (false)) = Nfneglit (true)
=================================================
Progress: 126


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if mainNew (Nfneglit (false)) then spec (repr (Nflit (false))) else false
Prop: spec (repr (Nflit (true))) = if mainNew (Nflit (true)) then spec (repr (Nfor (Nfneglit (false)) (Nfneglit (false)))) else false
Prop: spec (repr (Nflit (false))) = if mainNew (Nflit (false)) then spec (repr (Nfneglit (false))) else false
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if mainNew (Nfneglit (true)) then mainNew (Nflit (false)) else false
Prop: spec (repr (Nfand (Nfand (Nfneglit (true)) (Nfor (Nfneglit (false)) (Nfneglit (false)))) (Nfneglit (true)))) = if mainNew (Nfand (Nfand (Nfneglit (true)) (Nfor (Nfneglit (false)) (Nfneglit (false)))) (Nfneglit (true))) then mainNew (Nflit (true)) else false
Prop: spec (repr (Nflit (false))) = if mainNew (Nflit (false)) then mainNew (Nflit (true)) else false
previous tactics
simpl in goal
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nflit (false)) then mainNew (Nflit (false)) else false
Prop: true = if mainNew (Nflit (true)) then mainNew (Nflit (true)) else false
Prop: true = if mainNew (Nfneglit (false)) then mainNew (Nflit (true)) else false
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 127


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 128


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> spec (repr (Nfneglit (bool1))) = if mainNew (Nfneglit (bool1)) then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 129


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> spec (repr (Nfneglit (bool1))) = if mainNew (Nfneglit (bool1)) then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 130


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 2(rank:16.)
rewrite Cond1 in goal at 0(rank:24.)
rewrite Cond1 in goal at 1(rank:24.)
=================================================
Progress: 131


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 132


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
parent
mainNew (nnfformula2)
lower
mainNew(_)
upper
_
remove upper
spec(repr(nnfformula3))
remove lower
spec(repr(nnfformula3))
remove upper
mainNew(nnfformula2)
remove lower
mainNew(_)
remove upper
_
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = spec (repr (Nfneglit (false)))
Prop: mainNew (Nflit (false)) = spec (repr (Nflit (true)))
Prop: mainNew (Nflit (true)) = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
parent
mainNew (nnfformula2)
lower
mainNew(_)
upper
_
remove upper
spec(repr(nnfformula3))
remove lower
spec(repr(nnfformula3))
remove upper
mainNew(nnfformula2)
remove lower
mainNew(_)
remove upper
_
validate generalize_common_subterm_goal
Prop: Nfand (Nfneglit (true)) (Nfand (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nfor (Nfand (Nfand (Nfand (Nfand (Nflit (true)) (Nflit (true))) (Nflit (true))) (Nflit (false))) (Nflit (false))) (Nfor (Nfand (Nfneglit (true)) (Nfneglit (false))) (Nflit (false))))) = Nfneglit (false)
Prop: Nfneglit (true) = Nfneglit (true)
Prop: Nfneglit (true) = Nflit (true)
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfneglit (false))
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nfor (Nflit (true)) (Nfor (Nfor (Nflit (false)) (Nflit (false))) (Nfneglit (false))))
asdf
=================================================
Progress: 133


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (false)) (Nfand (Nflit (true)) (Nfneglit (false))))) = mainNew (Nfor (Nfneglit (false)) (Nfneglit (false)))
Prop: spec (repr (Nfneglit (false))) = mainNew (Nfneglit (true))
Prop: spec (repr (Nfneglit (true))) = mainNew (Nfand (Nfand (Nflit (false)) (Nfneglit (true))) (Nfand (Nfneglit (false)) (Nflit (false))))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfneglit (true))
Prop: true = mainNew (Nfand (Nfor (Nfor (Nfneglit (true)) (Nfneglit (true))) (Nflit (false))) (Nfneglit (true)))
Prop: true = mainNew (Nflit (false))
asdf
=================================================
Progress: 134


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 135


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- Case1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = spec (repr (Nfand (Nfneglit (false)) (Nflit (true))))
Prop: mainNew (Nfneglit (true)) = spec (repr (Nfneglit (true)))
Prop: mainNew (Nflit (true)) = spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (false) = Nfor (Nfor (Nfneglit (false)) (Nflit (true))) (Nflit (false))
Prop: Nflit (false) = Nflit (false)
Prop: Nfneglit (true) = Nfor (Nflit (false)) (Nfand (Nfneglit (true)) (Nflit (false)))
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nflit (true))
Prop: true = mainNew (Nflit (false))
asdf
=================================================
Progress: 136


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 137


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (false) = Nfneglit (false)
Prop: Nfand (Nflit (true)) (Nflit (false)) = Nfand (Nfneglit (false)) (Nfneglit (true))
Prop: Nfneglit (true) = Nfand (Nfor (Nflit (true)) (Nflit (true))) (Nflit (false))
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = mainNew (Nfneglit (false))
Prop: spec (repr (Nfneglit (false))) = mainNew (Nfand (Nfor (Nfneglit (false)) (Nflit (true))) (Nflit (false)))
Prop: spec (repr (Nfand (Nfneglit (false)) (Nflit (true)))) = mainNew (Nfand (Nfand (Nflit (true)) (Nfneglit (false))) (Nfor (Nfor (Nflit (false)) (Nfneglit (true))) (Nfneglit (false))))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfneglit (true))
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nflit (false))
asdf
=================================================
Progress: 138


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case mainNew (nnfformula1)(rank:6.)
=================================================
Progress: 139


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> case mainNew (nnfformula1)(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nnfformula2(rank:17.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 140


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 141


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 142


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (true)) (Nfor (Nfor (Nflit (true)) (Nfneglit (true))) (Nfand (Nfneglit (false)) (Nfneglit (false)))))) = mainNew (Nfneglit (false))
Prop: spec (repr (Nfneglit (false))) = mainNew (Nfand (Nfneglit (true)) (Nflit (true)))
Prop: spec (repr (Nfneglit (false))) = mainNew (Nflit (true))
asdf
=================================================
Progress: 143


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 2(rank:21.)
=================================================
Progress: 144


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if true then spec (repr (Nfneglit (false))) else false
Prop: spec (repr (Nfneglit (false))) = if true then spec (repr (Nfneglit (false))) else false
Prop: spec (repr (Nfneglit (false))) = if true then spec (repr (Nfneglit (false))) else false
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if mainNew (Nfneglit (false)) then spec (repr (Nfneglit (true))) else false
Prop: spec (repr (Nflit (false))) = if mainNew (Nflit (false)) then spec (repr (Nflit (true))) else false
Prop: spec (repr (Nfneglit (true))) = if mainNew (Nfneglit (true)) then spec (repr (Nfneglit (false))) else false
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nflit (false)) then spec (repr (Nfneglit (false))) else false
Prop: true = if mainNew (Nflit (true)) then spec (repr (Nfor (Nfneglit (true)) (Nfneglit (true)))) else false
Prop: true = if mainNew (Nfneglit (false)) then spec (repr (Nflit (false))) else false
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 145


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if true then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 146


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 147


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> spec (repr (Nfneglit (bool1))) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 148


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> spec (repr (Nfneglit (bool1))) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 149


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 150


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 151


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 152


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if true then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 153


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 154


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (false) = Nfand (Nflit (false)) (Nflit (false))
Prop: Nflit (false) = Nfand (Nfneglit (true)) (Nfneglit (false))
Prop: Nfor (Nfand (Nflit (true)) (Nfneglit (true))) (Nfand (Nflit (true)) (Nfand (Nfor (Nfneglit (true)) (Nfneglit (false))) (Nfneglit (true)))) = Nfneglit (true)
Prop: mainNew (Nfneglit (false)) = mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (true)) = mainNew (Nfand (Nfand (Nflit (true)) (Nflit (false))) (Nfneglit (false)))
Prop: mainNew (Nfor (Nfneglit (false)) (Nfand (Nfand (Nfneglit (true)) (Nflit (true))) (Nfand (Nflit (true)) (Nflit (true))))) = mainNew (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nfor (Nfor (Nflit (true)) (Nfor (Nfneglit (false)) (Nflit (false)))) (Nflit (true)))))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = spec (repr (Nfneglit (true)))
Prop: mainNew (Nfand (Nfor (Nfneglit (true)) (Nfor (Nfneglit (true)) (Nfneglit (false)))) (Nfor (Nflit (false)) (Nfand (Nflit (true)) (Nflit (true))))) = spec (repr (Nfneglit (true)))
Prop: mainNew (Nfneglit (true)) = spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nflit (true)))
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfneglit (true)))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 155


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 156


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> mainNew (Nfneglit (bool1)) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 157


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> mainNew (Nfneglit (bool1)) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 158


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 159


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 160


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 161


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 162


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (true))
Prop: true = mainNew (Nfneglit (true))
Prop: true = mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nflit (true)))
Prop: true = spec (repr (Nfneglit (false)))
asdf
=================================================
Progress: 163


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (true) = Nfneglit (true)
Prop: Nfand (Nfneglit (false)) (Nfand (Nfor (Nflit (false)) (Nflit (false))) (Nfneglit (false))) = Nflit (false)
Prop: Nfneglit (false) = Nflit (true)
Prop: spec (repr (Nfand (Nfneglit (true)) (Nflit (false)))) = spec (repr (Nflit (false)))
Prop: spec (repr (Nflit (true))) = spec (repr (Nfand (Nflit (true)) (Nfneglit (true))))
Prop: spec (repr (Nflit (false))) = spec (repr (Nfneglit (false)))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nfneglit (true)))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 164


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 165


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> spec (repr (Nfneglit (bool1))) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 166


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true -> spec (repr (Nfneglit (bool1))) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 167


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 168


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 169


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 170


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 171


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 172


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- Case1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfand (Nflit (true)) (Nfand (Nflit (true)) (Nflit (false))) = Nfneglit (true)
Prop: Nfneglit (false) = Nfand (Nfor (Nflit (true)) (Nflit (false))) (Nflit (true))
Prop: Nfneglit (false) = Nfor (Nfand (Nfand (Nfneglit (true)) (Nfneglit (false))) (Nfand (Nflit (false)) (Nflit (true)))) (Nfneglit (false))
Prop: spec (repr (Nflit (true))) = spec (repr (Nflit (false)))
Prop: spec (repr (Nflit (false))) = spec (repr (Nflit (false)))
Prop: spec (repr (Nfor (Nflit (true)) (Nflit (false)))) = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = mainNew (Nfand (Nfor (Nfand (Nflit (true)) (Nflit (false))) (Nfor (Nfor (Nfneglit (false)) (Nfneglit (true))) (Nfneglit (false)))) (Nflit (false)))
Prop: spec (repr (Nfneglit (false))) = mainNew (Nfand (Nfneglit (false)) (Nfor (Nflit (false)) (Nfor (Nfand (Nfand (Nfand (Nfor (Nflit (false)) (Nflit (true))) (Nflit (true))) (Nfor (Nfor (Nfor (Nfneglit (false)) (Nfor (Nfor (Nfneglit (true)) (Nfor (Nfand (Nflit (false)) (Nfor (Nfand (Nfneglit (false)) (Nfneglit (true))) (Nfand (Nflit (true)) (Nfor (Nfneglit (true)) (Nfneglit (true)))))) (Nflit (true)))) (Nflit (false)))) (Nflit (false))) (Nfand (Nflit (false)) (Nfneglit (false))))) (Nfand (Nfneglit (true)) (Nfand (Nflit (false)) (Nfneglit (true))))) (Nfneglit (true)))))
Prop: spec (repr (Nflit (true))) = mainNew (Nfor (Nfneglit (false)) (Nflit (false)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nflit (true))
Prop: true = mainNew (Nfand (Nfneglit (true)) (Nfneglit (true)))
asdf
=================================================
Progress: 173


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 174


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- Case2 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = spec (repr (Nfneglit (true)))
Prop: mainNew (Nfor (Nflit (false)) (Nfneglit (true))) = spec (repr (Nflit (true)))
Prop: mainNew (Nflit (true)) = spec (repr (Nflit (true)))
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfand (Nflit (false)) (Nfand (Nflit (true)) (Nflit (false))) = Nflit (true)
Prop: Nflit (false) = Nflit (true)
Prop: Nflit (false) = Nflit (true)
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfor (Nfneglit (true)) (Nfneglit (false)))
Prop: true = mainNew (Nfneglit (false))
Prop: true = mainNew (Nfneglit (false))
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 175


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 176


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 177


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 178


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula2(rank:5.)
=================================================
Progress: 179


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula2(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> nnfformula1 = nnfformula2
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
---------------------------------------
nnfformula1 = nnfformula2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Nfneglit (false) = Nflit (true)
Prop: Nfneglit (false) = Nflit (false)
Prop: Nfor (Nfor (Nfneglit (true)) (Nflit (false))) (Nflit (false)) = Nflit (false)
asdf
=================================================
Progress: 180


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 0(rank:14.)
=================================================
Progress: 181


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: Nflit (true) = Nflit (true)
Prop: Nfneglit (false) = Nfneglit (false)
Prop: Nfand (Nflit (false)) (Nfor (Nfor (Nfor (Nflit (false)) (Nfor (Nflit (false)) (Nflit (true)))) (Nfor (Nfneglit (false)) (Nfneglit (true)))) (Nfneglit (true))) = Nfand (Nfneglit (true)) (Nfneglit (true))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfor (Nfneglit (true)) (Nflit (true))))
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nflit (true)))
asdf
=================================================
Progress: 182


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = spec (repr (Nflit (false)))
Prop: mainNew (Nfneglit (false)) = spec (repr (Nflit (true)))
Prop: mainNew (Nfneglit (false)) = spec (repr (Nfand (Nflit (false)) (Nfneglit (false))))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nfand (Nflit (true)) (Nfneglit (false))))
Prop: true = spec (repr (Nflit (true)))
asdf
=================================================
Progress: 183


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 184


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 185


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 186


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 187


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 188


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 189


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:6.)
=================================================
Progress: 190


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:6.)
=================================================
Progress: 191


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = spec (repr (Nfneglit (false)))
Prop: mainNew (Nflit (false)) = spec (repr (Nflit (false)))
Prop: mainNew (Nfneglit (false)) = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfor (Nfand (Nflit (false)) (Nfor (Nflit (false)) (Nfand (Nfand (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nflit (false))) (Nfor (Nflit (false)) (Nfneglit (true)))))) (Nfneglit (false))))
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfneglit (true) = Nfneglit (true)
Prop: Nfneglit (false) = Nfneglit (true)
Prop: Nfand (Nflit (true)) (Nfor (Nfor (Nflit (false)) (Nfand (Nfneglit (false)) (Nfneglit (true)))) (Nflit (false))) = Nfor (Nfneglit (true)) (Nfor (Nfand (Nflit (true)) (Nfneglit (true))) (Nflit (true)))
Prop: spec (repr (Nfand (Nfor (Nfand (Nflit (false)) (Nfneglit (true))) (Nfneglit (true))) (Nflit (true)))) = spec (repr (Nfand (Nfand (Nfor (Nfand (Nflit (false)) (Nfor (Nfor (Nfor (Nfneglit (true)) (Nfor (Nfand (Nfneglit (false)) (Nfneglit (true))) (Nfor (Nflit (false)) (Nfand (Nfand (Nflit (true)) (Nfor (Nfor (Nflit (true)) (Nfor (Nflit (true)) (Nfneglit (true)))) (Nfor (Nfneglit (false)) (Nfor (Nfneglit (true)) (Nflit (false)))))) (Nfneglit (true)))))) (Nflit (true))) (Nfand (Nfneglit (false)) (Nfneglit (true))))) (Nfneglit (true))) (Nfneglit (true))) (Nflit (true))))
Prop: spec (repr (Nflit (false))) = spec (repr (Nflit (false)))
Prop: spec (repr (Nflit (false))) = spec (repr (Nfor (Nflit (true)) (Nflit (false))))
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (false)) (Nfor (Nflit (false)) (Nflit (true))))) = mainNew (Nfor (Nfor (Nflit (true)) (Nfand (Nfneglit (false)) (Nflit (false)))) (Nfneglit (false)))
Prop: spec (repr (Nflit (false))) = mainNew (Nfneglit (true))
Prop: spec (repr (Nfand (Nflit (false)) (Nfneglit (false)))) = mainNew (Nflit (false))
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 192


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 193


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 194


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true->mainNew (Nfneglit (bool1)) = true -> spec (repr (Nfneglit (bool1))) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 195


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true->mainNew (Nfneglit (bool1)) = true -> spec (repr (Nfneglit (bool1))) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 196


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true->mainNew (Nfneglit (bool1)) = true -> spec (repr (Nfneglit (bool1))) = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true->if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 197


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (Nfneglit (bool1))) = true->mainNew (Nfneglit (bool1)) = true -> spec (repr (Nfneglit (bool1))) = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true->if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 198


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true->if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 199


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true->if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 200


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 201


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 202


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 203


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 204


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 205


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 206


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 207


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = mainNew (nnfformula2)
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 208


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 209


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
Cond2 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 210


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 211


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 212


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 213


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 214


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 215


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 216


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 217


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 218


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Case1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 219


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 220


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 221


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 222


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite IH2 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = mainNew (Nflit (false))
Prop: spec (repr (Nfneglit (false))) = mainNew (Nfand (Nfand (Nfneglit (true)) (Nfneglit (true))) (Nfneglit (true)))
Prop: spec (repr (Nflit (true))) = mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nflit (true)))
Prop: true = spec (repr (Nfneglit (false)))
Prop: true = spec (repr (Nfneglit (true)))
asdf
=================================================
Progress: 223


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite IH2 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfand (Nfor (Nflit (false)) (Nflit (false))) (Nflit (true)) = Nfneglit (false)
Prop: Nflit (false) = Nflit (true)
Prop: Nfneglit (false) = Nfand (Nfneglit (false)) (Nfand (Nfor (Nfor (Nfneglit (true)) (Nfand (Nflit (true)) (Nflit (true)))) (Nfneglit (false))) (Nfneglit (false)))
Prop: mainNew (Nflit (true)) = mainNew (Nfneglit (true))
Prop: mainNew (Nflit (false)) = mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (true)) = mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfand (Nfor (Nfand (Nflit (false)) (Nfneglit (false))) (Nfand (Nflit (false)) (Nfor (Nfand (Nfneglit (true)) (Nflit (false))) (Nflit (false))))) (Nfand (Nfor (Nflit (false)) (Nfand (Nfneglit (false)) (Nfneglit (false)))) (Nfand (Nfand (Nflit (true)) (Nfneglit (true))) (Nflit (true)))))
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nflit (true)))
asdf
=================================================
Progress: 224


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 2(rank : 16.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 225


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 226


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 227


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 228


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 229


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 2(rank : 16.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 230


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 231


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 232


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 233


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 234


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 235


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 236


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 237


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 238


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 239


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 240


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 241


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 242


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 243


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 244


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
=================================================
Progress: 245


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Fand (Flit (false)) (Flit (false))) = if true then false else spec (Fand (Flit (false)) (Flit (false)))
validate generalize_common_subterm_goal
Prop: spec (Forr (Flit (false)) (Flit (false))) = if true then false else spec (Forr (Flit (false)) (Flit (false)))
Prop: spec (Forr (Flit (false)) (Fand (Flit (false)) (Flit (true)))) = if true then false else spec (Forr (Flit (false)) (Fand (Flit (false)) (Flit (true))))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
Prop: spec (repr (Nfand (Nfneglit (true)) (Nflit (true)))) = if true then false else true
asdf
Lemma List
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 246


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 247


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:7.)
=================================================
Progress: 248


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nnfformula1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 249


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 250


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Forr (Flit (true)) (Flit (false))) = if false then false else spec (Forr (Flit (true)) (Flit (false)))
Prop: spec (Fnot (Fnot (Flit (false)))) = if false then false else spec (Fnot (Fnot (Flit (false))))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Lemma List
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 251


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 252


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Fand (Flit (false)) (Fand (Forr (Flit (true)) (Flit (true))) (Flit (true)))) = if false then false else spec (Fand (Flit (false)) (Fand (Forr (Flit (true)) (Flit (true))) (Flit (true))))
asdf
=================================================
Progress: 253


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
=================================================
Progress: 254


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
validate generalize_common_subterm_goal
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
asdf
Lemma List
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 255


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 256


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:7.)
=================================================
Progress: 257


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nnfformula1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 258


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 259


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Cond2 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
=================================================
Progress: 260


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
=================================================
Progress: 261


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
validate generalize_common_subterm_goal
Prop: spec (Forr (Flit (true)) (Forr (Fand (Fnot (Flit (true))) (Flit (true))) (Flit (true)))) = if false then false else spec (Forr (Flit (true)) (Forr (Fand (Fnot (Flit (true))) (Flit (true))) (Flit (true))))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Forr (Flit (true)) (Flit (true))) = if true then false else spec (Forr (Flit (true)) (Flit (true)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if false then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nfand (Nfneglit (true)) (Nflit (true)))) = if true then false else true
Lemma List
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 262


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 263


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:7.)
=================================================
Progress: 264


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nnfformula1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 265


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 266


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Cond2 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Lemma List
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Cond2 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 267


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Cond2 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 268


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Fnot (Fnot (Flit (false)))) = if false then false else spec (Fnot (Fnot (Flit (false))))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Lemma List
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 269


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:11.)
=================================================
Progress: 270


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 11.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Fand (Fnot (Flit (false))) (Forr (Forr (Flit (false)) (Flit (true))) (Fnot (Flit (true))))) = if false then false else spec (Fand (Fnot (Flit (false))) (Forr (Forr (Flit (false)) (Flit (true))) (Fnot (Flit (true)))))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
=================================================
Progress: 271


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
=================================================
Progress: 272


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (repr (Nfneglit (false))) = if true then false else spec (repr (Nfneglit (false)))
Prop: spec (repr (Nfneglit (false))) = if false then false else spec (repr (Nfneglit (false)))
Prop: spec (repr (Nflit (true))) = if true then false else spec (repr (Nflit (true)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
asdf
=================================================
Progress: 273


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
=================================================
Progress: 274


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Fand (Flit (false)) (Flit (true))) = if true then false else spec (Fand (Flit (false)) (Flit (true)))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfand (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nfneglit (false)))))) = if false then false else true
Prop: spec (repr (Nflit (false))) = if false then false else true
asdf
Lemma List
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 275


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 276


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
asdf
=================================================
Progress: 277


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (false))) then mainNew (Nflit (false)) else false = if mainNew (Nflit (false)) then spec (repr (Nflit (true))) else false
Prop: if spec (repr (Nfneglit (true))) then mainNew (Nfneglit (true)) else false = if mainNew (Nfneglit (true)) then spec (repr (Nflit (true))) else false
Prop: if spec (repr (Nfneglit (false))) then mainNew (Nfneglit (false)) else false = if mainNew (Nfneglit (false)) then spec (repr (Nflit (false))) else false
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfor (Nflit (false)) (Nfor (Nflit (true)) (Nfneglit (true))))) then mainNew (Nfor (Nflit (false)) (Nfor (Nflit (true)) (Nfneglit (true)))) else false = if mainNew (Nfor (Nflit (false)) (Nfor (Nflit (true)) (Nfneglit (true)))) then mainNew (Nflit (true)) else false
Prop: if spec (repr (Nfneglit (false))) then mainNew (Nfneglit (false)) else false = if mainNew (Nfneglit (false)) then mainNew (Nflit (true)) else false
Prop: if spec (repr (Nfand (Nfand (Nfneglit (true)) (Nfor (Nflit (true)) (Nflit (false)))) (Nflit (true)))) then mainNew (Nfand (Nfand (Nfneglit (true)) (Nfor (Nflit (true)) (Nflit (false)))) (Nflit (true))) else false = if mainNew (Nfand (Nfand (Nfneglit (true)) (Nfor (Nflit (true)) (Nflit (false)))) (Nflit (true))) then mainNew (Nflit (false)) else false
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfand (Nfneglit (false)) (Nfand (Nfneglit (true)) (Nfneglit (false))))) then spec (repr (Nfand (Nfneglit (false)) (Nfand (Nfneglit (true)) (Nfneglit (false))))) else false = if mainNew (Nfand (Nfneglit (false)) (Nfand (Nfneglit (true)) (Nfneglit (false)))) then mainNew (Nfand (Nfor (Nfand (Nfneglit (false)) (Nflit (true))) (Nflit (false))) (Nflit (false))) else false
Prop: if spec (repr (Nflit (true))) then spec (repr (Nflit (true))) else false = if mainNew (Nflit (true)) then mainNew (Nfneglit (false)) else false
Prop: if spec (repr (Nfneglit (true))) then spec (repr (Nfneglit (true))) else false = if mainNew (Nfneglit (true)) then mainNew (Nfneglit (false)) else false
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 278


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 279


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (Nfneglit (bool1))) then mainNew (Nfneglit (bool1)) else false = if mainNew (Nfneglit (bool1)) then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 280


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (Nfneglit (bool1))) then mainNew (Nfneglit (bool1)) else false = if mainNew (Nfneglit (bool1)) then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if bool1 then false else true(rank:9.)
=================================================
Progress: 281


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else true(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:9.)
=================================================
Progress: 282


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = mainNew (nnfformula2)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:12.)
=================================================
Progress: 283


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

4 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 284


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

7 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Case1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 285


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if mainNew (nnfformula2) then spec (repr (nnfformula3)) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nflit (false)) then spec (repr (Nfand (Nfneglit (false)) (Nfneglit (false)))) else false
Prop: true = if mainNew (Nfor (Nfand (Nflit (true)) (Nflit (true))) (Nflit (false))) then spec (repr (Nflit (false))) else false
Prop: true = if mainNew (Nfor (Nfneglit (true)) (Nflit (true))) then spec (repr (Nfor (Nfneglit (false)) (Nfor (Nfand (Nfneglit (false)) (Nfneglit (true))) (Nfor (Nfand (Nfor (Nfand (Nflit (true)) (Nfneglit (false))) (Nfand (Nflit (true)) (Nfand (Nfneglit (false)) (Nfneglit (false))))) (Nfneglit (false))) (Nfneglit (true)))))) else false
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nfneglit (true)) then mainNew (Nfneglit (true)) else false
Prop: true = if mainNew (Nflit (true)) then mainNew (Nfand (Nflit (false)) (Nfneglit (false))) else false
Prop: true = if mainNew (Nflit (true)) then mainNew (Nfneglit (true)) else false
asdf
=================================================
Progress: 286


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfor (Nflit (true)) (Nflit (true))))
Prop: true = spec (repr (Nfand (Nfneglit (false)) (Nfand (Nflit (false)) (Nfneglit (false)))))
Prop: true = spec (repr (Nflit (true)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfor (Nfand (Nfand (Nfneglit (true)) (Nfneglit (true))) (Nfand (Nflit (false)) (Nfneglit (true)))) (Nfor (Nflit (false)) (Nflit (true))))
Prop: true = mainNew (Nfneglit (true))
Prop: true = mainNew (Nfand (Nfand (Nfneglit (false)) (Nfor (Nflit (true)) (Nfand (Nfor (Nfand (Nflit (false)) (Nflit (false))) (Nfor (Nflit (false)) (Nflit (true)))) (Nflit (true))))) (Nfand (Nfneglit (false)) (Nfneglit (true))))
asdf
Lemma List
forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 287


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

---------------------------------------
forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 288


1st goal of : forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

---------------------------------------
forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 289


1st goal of : forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 290


1st goal of : forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 291


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 292


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfor (Nflit (true)) (Nfor (Nflit (false)) (Nfor (Nflit (false)) (Nflit (false)))))) then mainNew (Nfor (Nflit (true)) (Nfor (Nflit (false)) (Nfor (Nflit (false)) (Nflit (false))))) else false = mainNew (Nfand (Nfneglit (false)) (Nfor (Nfand (Nfor (Nflit (false)) (Nfand (Nfand (Nflit (true)) (Nfor (Nfand (Nfand (Nflit (true)) (Nfneglit (true))) (Nfneglit (false))) (Nflit (true)))) (Nflit (false)))) (Nfneglit (true))) (Nfor (Nfneglit (true)) (Nfand (Nfand (Nflit (false)) (Nflit (true))) (Nflit (true))))))
Prop: if spec (repr (Nflit (true))) then mainNew (Nflit (true)) else false = mainNew (Nfand (Nflit (true)) (Nfneglit (false)))
Prop: if spec (repr (Nflit (false))) then mainNew (Nflit (false)) else false = mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (true))) then true else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nfor (Nfneglit (true)) (Nflit (false)))) then true else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nflit (false))) then true else false = mainNew (Nfneglit (false))
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 293


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 294


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 295


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case spec (repr (nnfformula1))(rank:6.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 296


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> case spec (repr (nnfformula1))(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:14.)
induction nnfformula2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 297


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 298


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 299


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Case1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 300


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 301


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 302


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 303


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 304


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 305


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
=================================================
Progress: 306


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
Prop: spec (Fand (Flit (true)) (Flit (false))) = if true then false else spec (Fand (Flit (true)) (Flit (false)))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
asdf
Lemma List
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 307


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 308


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Fand (Fand (Fnot (Flit (true))) (Flit (false))) (Fnot (Flit (false)))) = if true then false else spec (Fand (Fand (Fnot (Flit (true))) (Flit (false))) (Fnot (Flit (false))))
Lemma List
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 309


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 310


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Forr (Fand (Fand (Flit (true)) (Flit (true))) (Flit (false))) (Flit (true))) = if true then false else spec (Forr (Fand (Fand (Flit (true)) (Flit (true))) (Flit (false))) (Flit (true)))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Forr (Flit (false)) (Flit (true))) = if false then false else spec (Forr (Flit (false)) (Flit (true)))
asdf
=================================================
Progress: 311


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (false))) then spec (repr (Nflit (false))) else false = mainNew (Nflit (true))
Prop: if spec (repr (Nfneglit (true))) then spec (repr (Nfneglit (true))) else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nfneglit (false))) then spec (repr (Nfneglit (false))) else false = mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (true))) then true else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nflit (false))) then true else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nfneglit (false))) then true else false = mainNew (Nflit (false))
asdf
=================================================
Progress: 312


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfand (Nflit (false)) (Nfand (Nflit (true)) (Nfneglit (true)))))
Prop: true = spec (repr (Nfand (Nfneglit (false)) (Nfneglit (false))))
Prop: true = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfor (Nflit (false)) (Nflit (true)))
Prop: true = mainNew (Nfand (Nflit (false)) (Nfand (Nfand (Nfor (Nfor (Nfand (Nfor (Nflit (false)) (Nfneglit (true))) (Nfneglit (true))) (Nfor (Nfneglit (false)) (Nfneglit (true)))) (Nfneglit (true))) (Nfneglit (true))) (Nfand (Nfand (Nflit (true)) (Nflit (false))) (Nfneglit (true)))))
Prop: true = mainNew (Nflit (false))
asdf
=================================================
Progress: 313


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfand (Nfor (Nfand (Nfneglit (true)) (Nfneglit (true))) (Nflit (false))) (Nflit (true))))
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfneglit (true))
Prop: true = mainNew (Nfor (Nflit (true)) (Nfneglit (false)))
Prop: true = mainNew (Nflit (true))
asdf
=================================================
Progress: 314


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if mainNew (nnfformula2) then spec (repr (nnfformula2)) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 1
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: if mainNew (Nfneglit (false)) then spec (repr (Nfneglit (false))) else false = mainNew (Nfneglit (true))
Prop: if mainNew (Nflit (false)) then spec (repr (Nflit (false))) else false = mainNew (Nfneglit (false))
Prop: if mainNew (Nflit (false)) then spec (repr (Nflit (false))) else false = mainNew (Nflit (false))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: if true then spec (repr (Nfneglit (false))) else false = mainNew (Nfor (Nfneglit (true)) (Nflit (false)))
Prop: if true then spec (repr (Nfneglit (false))) else false = mainNew (Nfneglit (false))
Prop: if true then spec (repr (Nfneglit (false))) else false = mainNew (Nfor (Nflit (false)) (Nfor (Nfneglit (true)) (Nflit (false))))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (false))) then spec (repr (Nfneglit (false))) else false = mainNew (Nfneglit (false))
Prop: if spec (repr (Nfor (Nfand (Nflit (false)) (Nfneglit (false))) (Nflit (false)))) then spec (repr (Nfor (Nfand (Nflit (false)) (Nfneglit (false))) (Nflit (false)))) else false = mainNew (Nfand (Nfneglit (true)) (Nfand (Nflit (true)) (Nflit (false))))
Prop: if spec (repr (Nfor (Nflit (false)) (Nfneglit (false)))) then spec (repr (Nfor (Nflit (false)) (Nfneglit (false)))) else false = mainNew (Nfand (Nfneglit (true)) (Nfor (Nfand (Nflit (true)) (Nfor (Nfand (Nfneglit (true)) (Nfor (Nfneglit (false)) (Nfor (Nfneglit (false)) (Nflit (true))))) (Nflit (true)))) (Nflit (true))))
asdf
=================================================
Progress: 315


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 2
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (true))) then mainNew (Nflit (true)) else false = mainNew (Nflit (false))
Prop: if spec (repr (Nfor (Nflit (true)) (Nflit (true)))) then mainNew (Nfor (Nflit (true)) (Nflit (true))) else false = mainNew (Nfand (Nflit (true)) (Nfor (Nflit (false)) (Nfneglit (true))))
Prop: if spec (repr (Nflit (false))) then mainNew (Nflit (false)) else false = mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfand (Nfand (Nflit (true)) (Nfneglit (false))) (Nfneglit (false)))) then true else false = mainNew (Nflit (false))
Prop: if spec (repr (Nfand (Nfneglit (false)) (Nflit (true)))) then true else false = mainNew (Nflit (true))
Prop: if spec (repr (Nflit (false))) then true else false = mainNew (Nfand (Nfor (Nflit (false)) (Nfneglit (true))) (Nfand (Nfor (Nfor (Nfor (Nflit (false)) (Nfneglit (true))) (Nflit (true))) (Nfneglit (true))) (Nflit (true))))
asdf
previous tactics
simpl in goal
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (true))) then spec (repr (Nfneglit (true))) else false = mainNew (Nflit (false))
Prop: if spec (repr (Nfand (Nfneglit (true)) (Nflit (true)))) then spec (repr (Nfand (Nfneglit (true)) (Nflit (true)))) else false = mainNew (Nfand (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nfneglit (true))))
Prop: if spec (repr (Nfneglit (false))) then spec (repr (Nfneglit (false))) else false = mainNew (Nfand (Nfand (Nflit (true)) (Nfand (Nfor (Nfand (Nflit (false)) (Nflit (false))) (Nfor (Nflit (false)) (Nflit (true)))) (Nfneglit (true)))) (Nfand (Nflit (false)) (Nfand (Nfor (Nfneglit (false)) (Nflit (false))) (Nfneglit (false)))))
asdf
=================================================
Progress: 316


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfand (Nflit (false)) (Nfneglit (false))))
Prop: true = spec (repr (Nflit (true)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfor (Nflit (false)) (Nfor (Nfneglit (true)) (Nflit (false))))
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nflit (true))
asdf
=================================================
Progress: 317


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nflit (true)))
Prop: true = spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nfand (Nfneglit (false)) (Nfneglit (true)))
Prop: true = mainNew (Nflit (true))
asdf
=================================================
Progress: 318


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 319


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if true then mainNew (nnfformula2) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
rewrite <- Case1 in goal at 0
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if true then mainNew (Nfor (Nfor (Nfneglit (true)) (Nflit (false))) (Nfand (Nfneglit (false)) (Nfneglit (true)))) else false = spec (repr (Nflit (false)))
Prop: if true then mainNew (Nfor (Nfneglit (true)) (Nflit (true))) else false = spec (repr (Nfneglit (true)))
Prop: if true then mainNew (Nfand (Nfor (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nfor (Nfand (Nfneglit (false)) (Nflit (true))) (Nfand (Nflit (false)) (Nfor (Nflit (true)) (Nfneglit (false))))))) (Nfand (Nfand (Nfneglit (false)) (Nflit (false))) (Nfneglit (true)))) (Nflit (false))) else false = spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (true))) then mainNew (Nfneglit (true)) else false = spec (repr (Nfor (Nflit (false)) (Nfneglit (true))))
Prop: if spec (repr (Nfneglit (true))) then mainNew (Nfneglit (true)) else false = spec (repr (Nfneglit (false)))
Prop: if spec (repr (Nfneglit (true))) then mainNew (Nfneglit (true)) else false = spec (repr (Nfneglit (true)))
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (false))) then true else false = spec (repr (Nflit (true)))
Prop: if spec (repr (Nfneglit (true))) then true else false = spec (repr (Nfneglit (true)))
Prop: if spec (repr (Nfand (Nflit (true)) (Nfneglit (true)))) then true else false = spec (repr (Nflit (true)))
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (false))) then true else false = mainNew (Nflit (true))
Prop: if spec (repr (Nfneglit (true))) then true else false = mainNew (Nfand (Nfneglit (true)) (Nflit (true)))
Prop: if spec (repr (Nfneglit (true))) then true else false = mainNew (Nfand (Nflit (true)) (Nflit (false)))
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 320


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then mainNew (nnfformula2) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 321


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 322


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 323


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 324


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 325


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 326


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 327


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 328


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 329


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then true else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfand (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nflit (true)))) then spec (repr (Nfand (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nflit (true)))) else false = spec (repr (Nfand (Nfneglit (false)) (Nfneglit (false))))
Prop: if spec (repr (Nfor (Nfneglit (true)) (Nfneglit (true)))) then spec (repr (Nfor (Nfneglit (true)) (Nfneglit (true)))) else false = spec (repr (Nflit (false)))
Prop: if spec (repr (Nfor (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (true)))) then spec (repr (Nfor (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (true)))) else false = spec (repr (Nfneglit (false)))
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (true))) then true else false = spec (repr (Nfneglit (true)))
Prop: if spec (repr (Nflit (true))) then true else false = spec (repr (Nflit (false)))
Prop: if spec (repr (Nfor (Nflit (true)) (Nflit (false)))) then true else false = spec (repr (Nfor (Nfneglit (true)) (Nfneglit (false))))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (true))) then true else false = mainNew (Nfor (Nfneglit (true)) (Nfneglit (true)))
Prop: if spec (repr (Nfand (Nfneglit (false)) (Nfand (Nflit (true)) (Nflit (false))))) then true else false = mainNew (Nflit (true))
Prop: if spec (repr (Nflit (true))) then true else false = mainNew (Nfand (Nfor (Nfneglit (false)) (Nfor (Nfor (Nfneglit (true)) (Nflit (true))) (Nflit (false)))) (Nflit (true)))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 330


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : spec (repr (nnfformula2)) = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : mainNew (nnfformula2) = true
---------------------------------------
if spec (repr (nnfformula2)) then spec (repr (nnfformula2)) else false = spec (repr (nnfformula3))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:8.)
=================================================
Progress: 331


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 332


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 333


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 334


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 335


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then spec (repr (Nfneglit (bool1))) else false = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 336


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 337


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 338


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then spec (repr (nnfformula1)) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 339


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (true))) then mainNew (Nflit (true)) else false = spec (repr (Nfand (Nfand (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nflit (false)))) (Nflit (false))))
Prop: if spec (repr (Nfand (Nflit (true)) (Nfneglit (false)))) then mainNew (Nfand (Nflit (true)) (Nfneglit (false))) else false = spec (repr (Nfneglit (true)))
Prop: if spec (repr (Nfneglit (false))) then mainNew (Nfneglit (false)) else false = spec (repr (Nfor (Nfneglit (true)) (Nfor (Nflit (false)) (Nflit (true)))))
asdf
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (false))) then true else false = spec (repr (Nflit (false)))
Prop: if spec (repr (Nflit (false))) then true else false = spec (repr (Nflit (true)))
Prop: if spec (repr (Nfneglit (true))) then true else false = spec (repr (Nfneglit (true)))
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 340


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:7.)
=================================================
Progress: 341


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nnfformula1(rank : 7.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 342


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case spec (repr (nnfformula1))(rank:8.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 343


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

2 conjecture(s) more...
>>> case spec (repr (nnfformula1))(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:16.)
induction nnfformula2(rank:19.)
rewrite <- Cond1 in goal at 0(rank:16.)
=================================================
Progress: 344


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 16.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 345


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 346


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite Case1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 347


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 16.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:11.)
=================================================
Progress: 348


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula2(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 349


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 350


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula2(rank : 19.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 351


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 1(rank:27.)
=================================================
Progress: 352


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 19.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
rewrite <- Cond1 in goal at 2(rank:27.)
=================================================
Progress: 353


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 19.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
Prop: spec (Fand (Fand (Flit (false)) (Flit (false))) (Flit (false))) = if false then false else spec (Fand (Fand (Flit (false)) (Flit (false))) (Flit (false)))
Prop: spec (Fnot (Fnot (Fnot (Flit (false))))) = if false then false else spec (Fnot (Fnot (Fnot (Flit (false)))))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
validate generalize_common_subterm_goal
Prop: spec (Forr (Flit (true)) (Flit (false))) = if true then false else spec (Forr (Flit (true)) (Flit (false)))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (repr (Nflit (false))) = if false then false else spec (repr (Nflit (false)))
Prop: spec (repr (Nflit (true))) = if true then false else spec (repr (Nflit (true)))
Prop: spec (repr (Nflit (false))) = if false then false else spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Prop: spec (repr (Nfor (Nfand (Nfand (Nfand (Nfand (Nflit (false)) (Nfneglit (false))) (Nflit (false))) (Nfneglit (false))) (Nflit (true))) (Nfneglit (true)))) = if false then false else true
asdf
=================================================
Progress: 354


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if spec (repr (nnfformula2)) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
rewrite <- Case1 in goal at 0
Prop: spec (Flit (false)) = if spec (Flit (false)) then mainNew (Nflit (true)) else false
Prop: spec (Flit (true)) = if spec (Flit (true)) then mainNew (Nflit (true)) else false
Prop: spec (Fnot (Flit (true))) = if spec (Fnot (Flit (true))) then mainNew (Nflit (false)) else false
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then mainNew (Nfneglit (true)) else false
Prop: true = if true then mainNew (Nfand (Nfand (Nfor (Nfneglit (true)) (Nflit (true))) (Nfneglit (false))) (Nfneglit (true))) else false
Prop: true = if true then mainNew (Nfneglit (false)) else false
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nfand (Nflit (true)) (Nfneglit (false))) then mainNew (Nfor (Nfneglit (true)) (Nfneglit (false))) else false
Prop: true = if mainNew (Nflit (true)) then mainNew (Nfor (Nfand (Nfand (Nflit (false)) (Nfor (Nflit (false)) (Nfneglit (true)))) (Nfor (Nfneglit (true)) (Nflit (true)))) (Nfand (Nfneglit (true)) (Nfand (Nfor (Nfneglit (true)) (Nflit (false))) (Nflit (true))))) else false
Prop: true = if mainNew (Nfneglit (false)) then mainNew (Nfneglit (true)) else false
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nflit (true)) then spec (repr (Nflit (true))) else false
Prop: true = if mainNew (Nfand (Nfneglit (true)) (Nflit (true))) then spec (repr (Nfneglit (true))) else false
Prop: true = if mainNew (Nfneglit (true)) then spec (repr (Nflit (false))) else false
Lemma List
forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if spec (repr (nnfformula2)) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 355


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
spec (repr (nnfformula2)) = if spec (repr (nnfformula2)) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false(rank : 0.)


1st goal of : forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false

---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction formula1(rank:8.)
=================================================
Progress: 356


1st goal of : forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false

---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false

0 goal(s) more...

1 conjecture(s) more...
>>> induction formula1(rank : 8.)


1st goal of : forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false
formula1 : formula
bool1 : bool
Base1 : formula1 = Flit (bool1)
---------------------------------------
forall (nnfformula1:nnfformula), spec (Flit (bool1)) = if spec (Flit (bool1)) then mainNew (nnfformula1) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 357


1st goal of : forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false
formula1 : formula
bool1 : bool
Base1 : formula1 = Flit (bool1)
---------------------------------------
forall (nnfformula1:nnfformula), spec (Flit (bool1)) = if spec (Flit (bool1)) then mainNew (nnfformula1) else false

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false
formula1 : formula
bool1 : bool
Base1 : formula1 = Flit (bool1)
---------------------------------------
forall (nnfformula1:nnfformula), bool1 = if bool1 then mainNew (nnfformula1) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then mainNew (Nfor (Nflit (false)) (Nflit (false))) else false
Prop: true = if true then mainNew (Nflit (false)) else false
Prop: true = if true then mainNew (Nfneglit (true)) else false
asdf
=================================================
Progress: 358


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if true then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if spec (repr (nnfformula2)) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if spec (repr (Nfneglit (false))) then mainNew (Nfneglit (false)) else false
Prop: true = if spec (repr (Nfneglit (false))) then mainNew (Nflit (true)) else false
Prop: true = if spec (repr (Nflit (true))) then mainNew (Nfor (Nfneglit (false)) (Nfneglit (false))) else false
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then mainNew (Nflit (true)) else false
Prop: true = if true then mainNew (Nfneglit (false)) else false
Prop: true = if true then mainNew (Nfneglit (true)) else false
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nfneglit (false)) then mainNew (Nflit (false)) else false
Prop: true = if mainNew (Nfand (Nfor (Nfor (Nflit (false)) (Nfor (Nflit (false)) (Nfneglit (true)))) (Nfneglit (true))) (Nfor (Nflit (false)) (Nfor (Nflit (true)) (Nflit (true))))) then mainNew (Nfneglit (true)) else false
Prop: true = if mainNew (Nfand (Nfneglit (true)) (Nfneglit (false))) then mainNew (Nfneglit (true)) else false
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
validate generalize_common_subterm_goal
Prop: true = if mainNew (Nfneglit (false)) then spec (repr (Nflit (true))) else false
Prop: true = if mainNew (Nflit (false)) then spec (repr (Nfneglit (true))) else false
Prop: true = if mainNew (Nflit (true)) then spec (repr (Nfneglit (true))) else false
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if spec (repr (nnfformula2)) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 359


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = mainNew (nnfformula2)
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
---------------------------------------
true = if spec (repr (nnfformula2)) then mainNew (nnfformula3) else false

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:5.)
=================================================
Progress: 360


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> intro nnfformula1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 361


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:13.)
rewrite <- Cond1 in goal at 0(rank:13.)
=================================================
Progress: 362


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if true then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 363


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if true then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Cond1 in goal at 0(rank:13.)
induction nnfformula2(rank:16.)
=================================================
Progress: 364


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
Prop: spec (Flit (false)) = if spec (Flit (false)) then mainNew (Nfneglit (false)) else false
Prop: spec (Flit (false)) = if spec (Flit (false)) then mainNew (Nfneglit (true)) else false
Prop: spec (Flit (true)) = if spec (Flit (true)) then mainNew (Nflit (true)) else false
validate generalize_common_subterm_goal
Prop: true = if spec (repr (Nflit (true))) then mainNew (Nfand (Nfor (Nfneglit (true)) (Nfneglit (true))) (Nflit (true))) else false
Prop: true = if spec (repr (Nflit (true))) then mainNew (Nfneglit (true)) else false
Prop: true = if spec (repr (Nfor (Nflit (false)) (Nflit (false)))) then mainNew (Nfor (Nfor (Nfneglit (true)) (Nflit (false))) (Nfand (Nfor (Nfneglit (false)) (Nfor (Nfor (Nflit (true)) (Nflit (false))) (Nflit (false)))) (Nfand (Nfand (Nflit (false)) (Nfor (Nflit (true)) (Nflit (true)))) (Nflit (true))))) else false
asdf
Lemma List
forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 365


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false(rank : 0.)


1st goal of : forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false

---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction formula1(rank:10.)
=================================================
Progress: 366


1st goal of : forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false

---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
>>> induction formula1(rank : 10.)


1st goal of : forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false
formula1 : formula
bool1 : bool
Base1 : formula1 = Flit (bool1)
---------------------------------------
forall (nnfformula1:nnfformula), spec (Flit (bool1)) = if spec (Flit (bool1)) then mainNew (nnfformula1) else false

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 367


1st goal of : forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false
formula1 : formula
bool1 : bool
Base1 : formula1 = Flit (bool1)
---------------------------------------
forall (nnfformula1:nnfformula), spec (Flit (bool1)) = if spec (Flit (bool1)) then mainNew (nnfformula1) else false

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (formula1:formula) (nnfformula1:nnfformula), spec (formula1) = if spec (formula1) then mainNew (nnfformula1) else false
formula1 : formula
bool1 : bool
Base1 : formula1 = Flit (bool1)
---------------------------------------
forall (nnfformula1:nnfformula), bool1 = if bool1 then mainNew (nnfformula1) else false

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then mainNew (Nflit (false)) else false
Prop: false = if false then mainNew (Nflit (true)) else false
Prop: true = if true then mainNew (Nfneglit (false)) else false
asdf
=================================================
Progress: 368


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 13.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:8.)
=================================================
Progress: 369


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 370


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = mainNew (Nfneglit (bool1))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:16.)
rewrite <- Cond1 in goal at 0(rank:16.)
=================================================
Progress: 371


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 16.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 372


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:24.)
rewrite <- Cond1 in goal at 1(rank:24.)
rewrite <- Cond1 in goal at 2(rank:24.)
=================================================
Progress: 373


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 16.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nfand (Nflit (false)) (Nflit (true)))) = if false then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 374


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 375


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 376


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 377


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 378


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 379


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else true
Prop: if false then false else true = if true then false else true
Prop: if true then false else true = if true then false else true
asdf
=================================================
Progress: 380


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 16.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Fnot (Forr (Flit (false)) (Fnot (Fand (Fand (Flit (true)) (Flit (false))) (Forr (Flit (false)) (Flit (true))))))) = if true then false else spec (Fnot (Forr (Flit (false)) (Fnot (Fand (Fand (Flit (true)) (Flit (false))) (Forr (Flit (false)) (Flit (true)))))))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfor (Nflit (false)) (Nflit (true)))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
asdf
Lemma List
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 381


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 382


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:7.)
=================================================
Progress: 383


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nnfformula1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 384


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Lemma List
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 385


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 386


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Forr (Flit (false)) (Flit (false))) = if true then false else spec (Forr (Flit (false)) (Flit (false)))
Prop: spec (Forr (Flit (false)) (Flit (true))) = if true then false else spec (Forr (Flit (false)) (Flit (true)))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
asdf
=================================================
Progress: 387


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 21.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = mainNew (nnfformula2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nflit (true))) then mainNew (Nflit (true)) else false = mainNew (Nflit (false))
Prop: if spec (repr (Nfneglit (false))) then mainNew (Nfneglit (false)) else false = mainNew (Nfneglit (true))
Prop: if spec (repr (Nfneglit (true))) then mainNew (Nfneglit (true)) else false = mainNew (Nfneglit (true))
asdf
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfand (Nfor (Nfor (Nflit (false)) (Nflit (false))) (Nfneglit (false))) (Nfneglit (true)))) then true else false = mainNew (Nfneglit (true))
Prop: if spec (repr (Nflit (true))) then true else false = mainNew (Nfneglit (true))
Prop: if spec (repr (Nfneglit (false))) then true else false = mainNew (Nflit (false))
asdf
=================================================
Progress: 388


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 22.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfor (Nflit (false)) (Nfor (Nflit (false)) (Nflit (false)))))
Prop: true = spec (repr (Nfneglit (false)))
Prop: true = spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfneglit (true))
Prop: true = mainNew (Nfand (Nflit (false)) (Nfneglit (true)))
Prop: true = mainNew (Nflit (false))
asdf
=================================================
Progress: 389


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 22.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:6.)
=================================================
Progress: 390


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfand (Nflit (false)) (Nfneglit (true)) = Nfor (Nfneglit (false)) (Nfor (Nfand (Nflit (true)) (Nflit (true))) (Nfneglit (true)))
Prop: Nflit (true) = Nfor (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nfand (Nfor (Nfneglit (false)) (Nfand (Nfor (Nflit (false)) (Nfor (Nfand (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nflit (true)))) (Nfor (Nfneglit (true)) (Nflit (false))))) (Nfor (Nfor (Nfneglit (false)) (Nfand (Nfneglit (false)) (Nfor (Nflit (false)) (Nfand (Nfneglit (false)) (Nfneglit (false)))))) (Nfneglit (false))))) (Nfor (Nfand (Nfneglit (false)) (Nfneglit (true))) (Nfneglit (false))))
Prop: Nflit (false) = Nfor (Nfand (Nfneglit (true)) (Nfneglit (false))) (Nfand (Nflit (false)) (Nfand (Nfor (Nflit (true)) (Nfneglit (false))) (Nfneglit (false))))
Prop: mainNew (Nflit (true)) = mainNew (Nflit (true))
Prop: mainNew (Nfor (Nflit (false)) (Nfneglit (false))) = mainNew (Nflit (true))
Prop: mainNew (Nfor (Nflit (true)) (Nfneglit (false))) = mainNew (Nflit (false))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = mainNew (Nfor (Nflit (false)) (Nflit (true)))
Prop: true = mainNew (Nfneglit (false))
Prop: true = mainNew (Nfor (Nflit (false)) (Nfneglit (true)))
asdf
previous tactics
simpl in goal
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (true)) (Nfand (Nfneglit (false)) (Nflit (true))))) = mainNew (Nflit (true))
Prop: spec (repr (Nflit (true))) = mainNew (Nfand (Nfand (Nfor (Nflit (true)) (Nflit (true))) (Nfneglit (false))) (Nflit (true)))
Prop: spec (repr (Nfneglit (false))) = mainNew (Nflit (false))
asdf
=================================================
Progress: 391


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 22.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 0(rank:14.)
=================================================
Progress: 392


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:6.)
=================================================
Progress: 393


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 6.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
rewrite IH2 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: Nfneglit (false) = Nfneglit (false)
Prop: Nfor (Nfor (Nfneglit (true)) (Nfor (Nfneglit (false)) (Nflit (false)))) (Nflit (true)) = Nfneglit (true)
Prop: Nfor (Nflit (true)) (Nfneglit (true)) = Nfand (Nflit (true)) (Nfor (Nflit (true)) (Nflit (true)))
Prop: mainNew (Nfand (Nfneglit (false)) (Nfneglit (false))) = mainNew (Nflit (true))
Prop: mainNew (Nfor (Nfneglit (false)) (Nfneglit (true))) = mainNew (Nfand (Nfor (Nfneglit (true)) (Nfneglit (false))) (Nfand (Nfand (Nfor (Nfand (Nfand (Nflit (true)) (Nfneglit (true))) (Nfand (Nfneglit (false)) (Nflit (false)))) (Nfor (Nflit (false)) (Nfor (Nflit (true)) (Nfor (Nfneglit (true)) (Nfneglit (true)))))) (Nflit (true))) (Nflit (false))))
Prop: mainNew (Nfneglit (true)) = mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: true = mainNew (Nflit (false))
Prop: true = mainNew (Nflit (true))
Prop: true = mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nflit (false)))
Prop: true = spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: Nflit (true) = Nflit (false)
Prop: Nflit (true) = Nflit (false)
Prop: Nfneglit (false) = Nfneglit (false)
Prop: spec (repr (Nflit (false))) = spec (repr (Nfneglit (false)))
Prop: spec (repr (Nflit (true))) = spec (repr (Nflit (true)))
Prop: spec (repr (Nfor (Nfneglit (false)) (Nflit (false)))) = spec (repr (Nfand (Nfor (Nflit (false)) (Nflit (true))) (Nflit (true))))
=================================================
Progress: 394


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
true = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
mainNew (nnfformula2) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = spec (repr (Nfand (Nflit (false)) (Nflit (true))))
Prop: mainNew (Nfand (Nflit (false)) (Nflit (false))) = spec (repr (Nfor (Nfand (Nflit (true)) (Nfand (Nfneglit (false)) (Nfneglit (true)))) (Nfneglit (false))))
Prop: mainNew (Nfneglit (true)) = spec (repr (Nflit (true)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = spec (repr (Nfneglit (true)))
Prop: true = spec (repr (Nfneglit (false)))
Prop: true = spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: Nflit (false) = Nflit (false)
Prop: Nflit (false) = Nfand (Nfneglit (true)) (Nflit (false))
Prop: Nflit (true) = Nfand (Nfneglit (true)) (Nflit (false))
Prop: spec (repr (Nfneglit (false))) = spec (repr (Nfor (Nfneglit (true)) (Nflit (false))))
Prop: spec (repr (Nfor (Nfneglit (false)) (Nflit (false)))) = spec (repr (Nfor (Nfor (Nfneglit (true)) (Nfor (Nflit (true)) (Nflit (true)))) (Nfor (Nflit (true)) (Nfneglit (false)))))
Prop: spec (repr (Nfor (Nfneglit (false)) (Nfor (Nfor (Nfneglit (false)) (Nfor (Nflit (true)) (Nfand (Nfneglit (true)) (Nfneglit (true))))) (Nfneglit (true))))) = spec (repr (Nfor (Nflit (true)) (Nfneglit (false))))
asdf
=================================================
Progress: 395


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = spec (repr (nnfformula3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 22.)


1st goal of : forall (nnfformula1:nnfformula), main (nnfformula1) = mainNew (nnfformula1)
nnfformula1 : nnfformula
nnfformula2 : nnfformula
nnfformula3 : nnfformula
IH1 : true = true
IH2 : spec (repr (nnfformula3)) = mainNew (nnfformula3)
Inductive1 : nnfformula1 = Nfand (nnfformula2) (nnfformula3)
Case1 : spec (repr (nnfformula2)) = true
Case2 : mainNew (nnfformula2) = true
---------------------------------------
spec (repr (nnfformula2)) = mainNew (nnfformula3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfneglit (true)) (Nfand (Nfand (Nflit (true)) (Nfneglit (false))) (Nfand (Nfand (Nflit (false)) (Nfor (Nfor (Nflit (false)) (Nflit (false))) (Nfneglit (false)))) (Nflit (true)))))) = mainNew (Nfneglit (false))
Prop: spec (repr (Nflit (false))) = mainNew (Nfneglit (false))
Prop: spec (repr (Nflit (false))) = mainNew (Nflit (false))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case spec (repr (nnfformula2))
rewrite <- Case1 in goal at 0
case mainNew (nnfformula2)
validate generalize_common_subterm_goal
Prop: Nfneglit (true) = Nflit (false)
Prop: Nflit (true) = Nfor (Nflit (false)) (Nfneglit (false))
Prop: Nflit (true) = Nflit (false)
Prop: spec (repr (Nflit (true))) = spec (repr (Nfor (Nflit (true)) (Nflit (true))))
Prop: spec (repr (Nfand (Nflit (false)) (Nfneglit (true)))) = spec (repr (Nfor (Nfand (Nfor (Nfand (Nfneglit (true)) (Nfand (Nfand (Nfor (Nfneglit (false)) (Nflit (false))) (Nfor (Nflit (true)) (Nfneglit (false)))) (Nfand (Nflit (false)) (Nflit (true))))) (Nfand (Nflit (false)) (Nfneglit (true)))) (Nflit (false))) (Nfneglit (true))))
Prop: spec (repr (Nfand (Nflit (true)) (Nflit (false)))) = spec (repr (Nfneglit (false)))
=================================================
Progress: 396


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 22.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:14.)
induction nnfformula2(rank:17.)
=================================================
Progress: 397


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 398


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 399


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 400


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = mainNew (nnfformula2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 401


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = mainNew (Nfneglit (bool1))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 402


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), spec (repr (nnfformula1)) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 22.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:14.)
induction nnfformula2(rank:17.)
=================================================
Progress: 403


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:9.)
=================================================
Progress: 404


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (nnfformula1) = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 405


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 406


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nnfformula2(rank : 17.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 407


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = spec (repr (Nfneglit (bool1)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 408


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 23.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (true))) then mainNew (Nfneglit (true)) else false = spec (repr (Nflit (true)))
Prop: if spec (repr (Nfand (Nfneglit (true)) (Nfand (Nflit (true)) (Nflit (true))))) then mainNew (Nfand (Nfneglit (true)) (Nfand (Nflit (true)) (Nflit (true)))) else false = spec (repr (Nfor (Nfneglit (false)) (Nfneglit (false))))
Prop: if spec (repr (Nflit (false))) then mainNew (Nflit (false)) else false = spec (repr (Nfor (Nflit (false)) (Nfneglit (false))))
validate generalize_common_subterm_goal
Prop: if spec (repr (Nfneglit (false))) then true else false = spec (repr (Nfneglit (true)))
Prop: if spec (repr (Nfneglit (true))) then true else false = spec (repr (Nfneglit (true)))
Prop: if spec (repr (Nfor (Nfor (Nflit (false)) (Nfor (Nfneglit (true)) (Nfneglit (false)))) (Nflit (true)))) then true else false = spec (repr (Nfneglit (true)))
asdf
Lemma List
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 409


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (nnfformula2:nnfformula), if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))(rank : 0.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:12.)
=================================================
Progress: 410


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

---------------------------------------
forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nnfformula1(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 411


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), mainNew (Nfneglit (bool1)) = true -> if spec (repr (Nfneglit (bool1))) then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 412


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = true -> if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:12.)
=================================================
Progress: 413


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if if bool1 then false else true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 414


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if true then mainNew (Nfneglit (bool1)) else false = spec (repr (nnfformula2))

3 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:12.)
=================================================
Progress: 415


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = spec (repr (nnfformula2))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 12.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nnfformula2(rank:15.)
=================================================
Progress: 416


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = spec (repr (nnfformula2))

3 goal(s) more...

3 conjecture(s) more...
>>> induction nnfformula2(rank : 15.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 417


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

6 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then mainNew (nnfformula1) else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
nnfformula2 : nnfformula
bool2 : bool
Base2 : nnfformula2 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

6 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 418


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 24.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: if true then false else true = if if true then false else true then spec (repr (Nfneglit (true))) else false
Prop: if true then false else true = if if true then false else true then spec (repr (Nflit (false))) else false
Prop: if true then false else true = if if true then false else true then spec (repr (Nflit (false))) else false
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 419


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 420


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 421


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 2(rank:15.)
rewrite Cond1 in goal at 0(rank:23.)
rewrite Cond1 in goal at 1(rank:23.)
=================================================
Progress: 422


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 2(rank : 15.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = if true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 423


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = if true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:7.)
=================================================
Progress: 424


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 425


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 426


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 427


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 23.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: if false then false else true = if if false then false else true then spec (repr (Nfor (Nflit (true)) (Nfand (Nfneglit (true)) (Nfand (Nflit (false)) (Nfneglit (true)))))) else false
Prop: if false then false else true = if if false then false else true then spec (repr (Nflit (false))) else false
Prop: if false then false else true = if if false then false else true then spec (repr (Nfneglit (false))) else false
asdf
=================================================
Progress: 428


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 1(rank : 23.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if if true then false else true then spec (repr (Nfand (Nfand (Nfneglit (false)) (Nflit (false))) (Nflit (true)))) else false
Prop: true = if if true then false else true then spec (repr (Nfand (Nflit (true)) (Nfneglit (false)))) else false
Prop: true = if if false then false else true then spec (repr (Nfor (Nfneglit (true)) (Nfor (Nfneglit (false)) (Nfneglit (true))))) else false
validate generalize_common_subterm_goal
Prop: if false then false else true = if if false then false else true then spec (repr (Nflit (false))) else false
Prop: if true then false else true = if if true then false else true then spec (repr (Nflit (false))) else false
Prop: if false then false else true = if if false then false else true then spec (repr (Nfneglit (true))) else false
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 429


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 430


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 431


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 432


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if if bool1 then false else true then spec (repr (nnfformula1)) else false

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if true then spec (repr (nnfformula1)) else false

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 433


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if true then spec (repr (nnfformula1)) else false

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:12.)
=================================================
Progress: 434


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = spec (repr (nnfformula1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nnfformula1(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 435


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
true = spec (repr (Nfneglit (bool2)))

3 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> true = if if bool1 then false else true then spec (repr (nnfformula1)) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 436


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 1(rank : 24.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if if bool1 then false else true then spec (repr (nnfformula2)) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: true = if if false then false else true then spec (repr (Nfneglit (true))) else false
Prop: true = if if false then false else true then spec (repr (Nfneglit (false))) else false
Prop: true = if if false then false else true then spec (repr (Nfneglit (false))) else false
asdf
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: if false then false else true = if if false then false else true then spec (repr (Nfneglit (true))) else false
Prop: if true then false else true = if if true then false else true then spec (repr (Nflit (false))) else false
Prop: if false then false else true = if if false then false else true then spec (repr (Nfneglit (true))) else false
asdf
=================================================
Progress: 437


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 24.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: if true then false else true = if if true then false else true then mainNew (Nflit (true)) else false
Prop: if true then false else true = if if true then false else true then mainNew (Nfand (Nfor (Nflit (true)) (Nflit (true))) (Nfneglit (false))) else false
Prop: if false then false else true = if if false then false else true then mainNew (Nfneglit (false)) else false
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 438


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 439


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 440


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 2(rank:15.)
rewrite Cond1 in goal at 0(rank:23.)
rewrite Cond1 in goal at 1(rank:23.)
=================================================
Progress: 441


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 2(rank : 15.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = if true then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 442


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = if true then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:7.)
=================================================
Progress: 443


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 444


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 445


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
true = mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
true = if bool2 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 446


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 23.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if true then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: if true then false else true = if if true then false else true then mainNew (Nflit (false)) else false
Prop: if true then false else true = if if true then false else true then mainNew (Nfor (Nfor (Nfneglit (true)) (Nfneglit (true))) (Nflit (true))) else false
Prop: if false then false else true = if if false then false else true then mainNew (Nfneglit (true)) else false
asdf
=================================================
Progress: 447


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 1(rank : 23.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), if bool1 then false else true = true -> if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula1) else false
bool1 : bool
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula1:nnfformula), true = if if bool1 then false else true then mainNew (nnfformula1) else false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if if false then false else true then mainNew (Nflit (false)) else false
Prop: true = if if false then false else true then mainNew (Nfand (Nflit (true)) (Nflit (true))) else false
Prop: true = if if true then false else true then mainNew (Nfand (Nflit (false)) (Nfneglit (true))) else false
asdf
validate generalize_common_subterm_goal
Prop: if false then false else true = if if false then false else true then mainNew (Nfor (Nfneglit (true)) (Nflit (false))) else false
Prop: if true then false else true = if if true then false else true then mainNew (Nflit (true)) else false
Prop: if true then false else true = if if true then false else true then mainNew (Nflit (false)) else false
asdf
=================================================
Progress: 448


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), if bool1 then false else true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 1(rank : 24.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
bool1 : bool
Base1 : nnfformula1 = Nfneglit (bool1)
Cond1 : if bool1 then false else true = true
---------------------------------------
forall (nnfformula2:nnfformula), true = if if bool1 then false else true then mainNew (nnfformula2) else false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: true = if if true then false else true then mainNew (Nfneglit (true)) else false
Prop: true = if if false then false else true then mainNew (Nflit (true)) else false
Prop: true = if if false then false else true then mainNew (Nfneglit (true)) else false
asdf
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: if false then false else true = if if false then false else true then mainNew (Nfneglit (false)) else false
Prop: if true then false else true = if if true then false else true then mainNew (Nflit (true)) else false
Prop: if true then false else true = if if true then false else true then mainNew (Nfor (Nfneglit (false)) (Nfor (Nfneglit (false)) (Nfand (Nfneglit (true)) (Nfneglit (true))))) else false
=================================================
Progress: 449


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 24.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Fand (Fand (Flit (false)) (Flit (false))) (Flit (false))) = if false then false else spec (Fand (Fand (Flit (false)) (Flit (false))) (Flit (false)))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Forr (Flit (false)) (Flit (false))) = if true then false else spec (Forr (Flit (false)) (Flit (false)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 450


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 24.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 451


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 24.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nflit (true)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 452


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if spec (repr (nnfformula1)) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 453


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 454


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
=================================================
Progress: 455


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if false then false else mainNew (Nflit (false))
Prop: mainNew (Nfor (Nflit (true)) (Nflit (true))) = if false then false else mainNew (Nfor (Nflit (true)) (Nflit (true)))
Prop: mainNew (Nflit (true)) = if false then false else mainNew (Nflit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfneglit (false)) (Nflit (false))) = if false then false else true
Prop: mainNew (Nflit (false)) = if false then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 456


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 457


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 458


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 459


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 460


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 461


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 462


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 463


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 464


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 465


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 466


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 467


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 468


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if false then false else true
Prop: if false then false else true = if true then false else true
Prop: if false then false else true = if true then false else true
asdf
=================================================
Progress: 469


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else mainNew (Nfneglit (true))
Prop: if true then false else true = if true then false else mainNew (Nfneglit (true))
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
asdf
=================================================
Progress: 470


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if true then false else spec (repr (Nfneglit (true)))
Prop: mainNew (Nflit (false)) = if false then false else spec (repr (Nflit (false)))
Prop: mainNew (Nflit (false)) = if false then false else spec (repr (Nflit (false)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfneglit (true)) (Nfneglit (true))) = if false then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
Prop: mainNew (Nfand (Nfneglit (true)) (Nflit (true))) = if false then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 471


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 472


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 473


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 474


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 475


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 476


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 477


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else spec (repr (Nfneglit (true)))
Prop: if false then false else true = if false then false else spec (repr (Nfneglit (false)))
Prop: if false then false else true = if false then false else spec (repr (Nfneglit (false)))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 478


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 479


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 480


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 481


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 482


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 483


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
Prop: if false then false else true = if false then false else spec (repr (Nfneglit (false)))
Prop: if true then false else true = if false then false else spec (repr (Nfneglit (true)))
asdf
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 484


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:11.)
=================================================
Progress: 485


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool2(rank:11.)
=================================================
Progress: 486


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 487


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 488


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 489


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro bool1(rank:13.)
=================================================
Progress: 490


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro bool1(rank : 13.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro bool2(rank:13.)
=================================================
Progress: 491


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro bool2(rank : 13.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 492


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 493


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
=================================================
Progress: 494


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nflit (true)) (Nfneglit (true)))) = if true then false else mainNew (Nfor (Nflit (true)) (Nfneglit (true)))
Prop: spec (repr (Nfor (Nflit (false)) (Nfneglit (false)))) = if false then false else mainNew (Nfor (Nflit (false)) (Nfneglit (false)))
Prop: spec (repr (Nflit (false))) = if false then false else mainNew (Nflit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfneglit (false)) (Nflit (false)))) = if true then false else true
Prop: spec (repr (Nfor (Nflit (false)) (Nfneglit (false)))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
asdf
=================================================
Progress: 495


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
=================================================
Progress: 496


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if true then false else mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (false)) = if true then false else mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (false)) = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if false then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nflit (false)) = if false then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 497


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 498


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 499


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 500


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 501


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 502


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 503


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else true
Prop: if true then false else true = if true then false else true
Prop: if true then false else true = if false then false else true
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 504


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 505


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 506


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 507


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 508


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 509


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 510


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 511


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
validate generalize_common_subterm_goal
Prop: if false then false else true = if false then false else true
Prop: if true then false else true = if false then false else true
Prop: if false then false else true = if false then false else true
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
End of Lemma List


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 512


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:11.)
=================================================
Progress: 513


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool2(rank:11.)
=================================================
Progress: 514


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 515


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 516


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 517


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else true
Prop: if false then false else true = if false then false else true
Prop: if true then false else true = if false then false else true
asdf
=================================================
Progress: 518


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else spec (repr (Nfneglit (true)))
Prop: mainNew (Nfor (Nfneglit (false)) (Nflit (true))) = if false then false else spec (repr (Nfor (Nfneglit (false)) (Nflit (true))))
Prop: mainNew (Nflit (false)) = if true then false else spec (repr (Nflit (false)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfneglit (true)) (Nflit (false))) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 519


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 520


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 521


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 522


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 523


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 524


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 525


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else spec (repr (Nfneglit (true)))
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
Prop: if true then false else true = if true then false else spec (repr (Nfneglit (true)))
asdf
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 526


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 527


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 528


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 529


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 530


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
asdf
=================================================
Progress: 531


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfand (Nfand (Nfor (Nfneglit (false)) (Nfand (Nflit (false)) (Nfneglit (true)))) (Nfneglit (false))) (Nfor (Nflit (true)) (Nflit (true)))) (Nflit (true)))) = if false then false else mainNew (Nfor (Nfand (Nfand (Nfor (Nfneglit (false)) (Nfand (Nflit (false)) (Nfneglit (true)))) (Nfneglit (false))) (Nfor (Nflit (true)) (Nflit (true)))) (Nflit (true)))
Prop: spec (repr (Nfor (Nfand (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nfneglit (true)))) (Nfand (Nflit (true)) (Nfor (Nflit (true)) (Nflit (false)))))) = if true then false else mainNew (Nfor (Nfand (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nfneglit (true)))) (Nfand (Nflit (true)) (Nfor (Nflit (true)) (Nflit (false)))))
Prop: spec (repr (Nfneglit (false))) = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nfand (Nfneglit (true)) (Nfor (Nfneglit (true)) (Nfneglit (true)))))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
asdf
=================================================
Progress: 532


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if false then false else mainNew (Nfneglit (false))
Prop: spec (repr (Nfneglit (false))) = if true then false else mainNew (Nfneglit (false))
Prop: spec (repr (Nfor (Nflit (true)) (Nfor (Nflit (false)) (Nflit (false))))) = if true then false else mainNew (Nfor (Nflit (true)) (Nfor (Nflit (false)) (Nflit (false))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
asdf
=================================================
Progress: 533


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
=================================================
Progress: 534


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (false)) (Nfand (Nfor (Nflit (true)) (Nfor (Nflit (true)) (Nflit (false)))) (Nflit (true)))) = if true then false else spec (repr (Nfor (Nflit (false)) (Nfand (Nfor (Nflit (true)) (Nfor (Nflit (true)) (Nflit (false)))) (Nflit (true)))))
Prop: mainNew (Nfand (Nfor (Nfor (Nflit (true)) (Nfneglit (true))) (Nfneglit (false))) (Nflit (true))) = if true then false else spec (repr (Nfand (Nfor (Nfor (Nflit (true)) (Nfneglit (true))) (Nfneglit (false))) (Nflit (true))))
Prop: mainNew (Nfneglit (false)) = if false then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
asdf
=================================================
Progress: 535


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfneglit (true)) (Nfneglit (false))) = if true then false else mainNew (Nfor (Nfneglit (true)) (Nfneglit (false)))
Prop: mainNew (Nflit (true)) = if true then false else mainNew (Nflit (true))
Prop: mainNew (Nflit (false)) = if false then false else mainNew (Nflit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfor (Nfor (Nflit (false)) (Nfand (Nfneglit (false)) (Nflit (true)))) (Nflit (false))) (Nfneglit (true))) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfor (Nfneglit (false)) (Nfneglit (false))) = if true then false else true
asdf
=================================================
Progress: 536


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if true then false else mainNew (Nflit (true))
Prop: mainNew (Nfneglit (true)) = if true then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfneglit (true)) = if true then false else mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 537


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 538


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if false then false else spec (repr (Nflit (true)))
Prop: mainNew (Nfneglit (false)) = if false then false else spec (repr (Nfneglit (false)))
Prop: mainNew (Nfor (Nfneglit (false)) (Nfneglit (false))) = if true then false else spec (repr (Nfor (Nfneglit (false)) (Nfneglit (false))))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nfor (Nflit (false)) (Nflit (false))) = if false then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 539


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 540


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 541


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 542


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if false then false else mainNew (Nfneglit (true))
Prop: spec (repr (Nfneglit (false))) = if false then false else mainNew (Nfneglit (false))
Prop: spec (repr (Nflit (false))) = if false then false else mainNew (Nflit (false))
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfor (Nflit (false)) (Nflit (true)))
Prop: true = if true then false else mainNew (Nflit (true))
Prop: true = if true then false else mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 543


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 544


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 545


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 546


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 547


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 548


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 549


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
Prop: if true then false else true = if false then false else mainNew (Nfneglit (true))
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
asdf
=================================================
Progress: 550


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Fand (Fnot (Fnot (Forr (Flit (true)) (Flit (false))))) (Fnot (Flit (false)))) = if false then false else spec (Fand (Fnot (Fnot (Forr (Flit (true)) (Flit (false))))) (Fnot (Flit (false))))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
validate generalize_common_subterm_goal
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Forr (Flit (true)) (Flit (true))) = if false then false else spec (Forr (Flit (true)) (Flit (true)))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 551


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfor (Nflit (true)) (Nfneglit (true))) (Nflit (false)))) = if false then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
Prop: spec (repr (Nfand (Nfor (Nfneglit (true)) (Nfneglit (false))) (Nfor (Nflit (false)) (Nflit (false))))) = if true then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 552


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 553


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 554


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 555


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 556


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 557


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 558


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else true
Prop: if false then false else true = if false then false else true
Prop: if false then false else true = if true then false else true
asdf
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 559


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 560


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 561


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nflit (true)))
Prop: true = if true then false else spec (repr (Nflit (true)))
Prop: true = if false then false else spec (repr (Nfor (Nfor (Nfand (Nflit (true)) (Nfneglit (false))) (Nflit (true))) (Nfand (Nflit (false)) (Nfneglit (true)))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 562


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (false)) (Nfand (Nfand (Nfneglit (false)) (Nflit (true))) (Nfneglit (false)))) = if false then false else mainNew (Nfand (Nflit (false)) (Nfand (Nfand (Nfneglit (false)) (Nflit (true))) (Nfneglit (false))))
Prop: mainNew (Nfor (Nflit (true)) (Nfor (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (false)))) = if true then false else mainNew (Nfor (Nflit (true)) (Nfor (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (false))))
Prop: mainNew (Nfneglit (false)) = if false then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 563


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 564


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else spec (repr (Nfneglit (false)))
Prop: mainNew (Nfand (Nfand (Nfneglit (false)) (Nfand (Nflit (false)) (Nfand (Nfneglit (false)) (Nfneglit (false))))) (Nfneglit (true))) = if true then false else spec (repr (Nfand (Nfand (Nfneglit (false)) (Nfand (Nflit (false)) (Nfand (Nfneglit (false)) (Nfneglit (false))))) (Nfneglit (true))))
Prop: mainNew (Nflit (true)) = if false then false else spec (repr (Nflit (true)))
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nfor (Nfneglit (false)) (Nflit (false))) = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 565


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 566


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else mainNew (Nfneglit (false))
Prop: spec (repr (Nfor (Nflit (false)) (Nfand (Nfneglit (false)) (Nfneglit (true))))) = if true then false else mainNew (Nfor (Nflit (false)) (Nfand (Nfneglit (false)) (Nfneglit (true))))
Prop: spec (repr (Nfand (Nfand (Nflit (false)) (Nfand (Nfor (Nfneglit (true)) (Nflit (false))) (Nflit (true)))) (Nfneglit (true)))) = if false then false else mainNew (Nfand (Nfand (Nflit (false)) (Nfand (Nfor (Nfneglit (true)) (Nflit (false))) (Nflit (true)))) (Nfneglit (true)))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if false then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 567


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Forr (Flit (false)) (Flit (false))) = if false then false else spec (Forr (Flit (false)) (Flit (false)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 568


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nflit (true)) (Nfneglit (false)))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 569


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfor (Nfneglit (true)) (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nflit (true))))))
Prop: true = if false then false else spec (repr (Nfor (Nfneglit (true)) (Nfor (Nflit (true)) (Nflit (false)))))
Prop: true = if false then false else spec (repr (Nfand (Nfneglit (false)) (Nfand (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (true)))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 570


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Fand (Flit (false)) (Flit (true))) = if false then false else spec (Fand (Flit (false)) (Flit (true)))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 571


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 572


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if false then false else mainNew (Nfneglit (true))
Prop: spec (repr (Nfneglit (true))) = if false then false else mainNew (Nfneglit (true))
Prop: spec (repr (Nfneglit (false))) = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 573


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 574


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (false)) (Nfneglit (false))) = if true then false else spec (repr (Nfand (Nflit (false)) (Nfneglit (false))))
Prop: mainNew (Nfneglit (false)) = if false then false else spec (repr (Nfneglit (false)))
Prop: mainNew (Nflit (false)) = if false then false else spec (repr (Nflit (false)))
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nflit (false)))
Prop: true = if true then false else spec (repr (Nflit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 575


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 576


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 577


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 578


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 579


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 580


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 581


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
Prop: if true then false else true = if true then false else spec (repr (Nfneglit (true)))
Prop: if false then false else true = if false then false else spec (repr (Nfneglit (false)))
asdf
=================================================
Progress: 582


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if true then false else mainNew (Nfneglit (false))
Prop: mainNew (Nflit (true)) = if true then false else mainNew (Nflit (true))
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 583


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 584


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 585


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nflit (false)) = if false then false else true
Prop: mainNew (Nfand (Nflit (true)) (Nfneglit (true))) = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 586


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 587


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 588


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 589


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 590


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 591


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 592


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else true
Prop: if false then false else true = if false then false else true
Prop: if true then false else true = if false then false else true
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 593


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 594


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 595


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 596


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 597


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 598


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else true
Prop: if true then false else true = if false then false else true
Prop: if true then false else true = if false then false else true
=================================================
Progress: 599


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfand (Nflit (false)) (Nfneglit (false)))
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if false then false else mainNew (Nfneglit (false))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 600


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 601


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 602


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 603


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 604


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 605


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (true))
asdf
=================================================
Progress: 606


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nfneglit (false))))) = if false then false else mainNew (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nfneglit (false))))
Prop: spec (repr (Nflit (true))) = if true then false else mainNew (Nflit (true))
Prop: spec (repr (Nfand (Nflit (false)) (Nflit (false)))) = if true then false else mainNew (Nfand (Nflit (false)) (Nflit (false)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
Prop: spec (repr (Nfor (Nfor (Nflit (true)) (Nfand (Nfor (Nflit (true)) (Nfneglit (true))) (Nfneglit (false)))) (Nfand (Nfor (Nfand (Nflit (false)) (Nflit (false))) (Nflit (true))) (Nfneglit (true))))) = if false then false else true
=================================================
Progress: 607


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (true)) (Nfneglit (true)))) = if true then false else mainNew (Nfand (Nflit (true)) (Nfneglit (true)))
Prop: spec (repr (Nfneglit (false))) = if false then false else mainNew (Nfneglit (false))
Prop: spec (repr (Nfneglit (true))) = if false then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (false)) (Nfand (Nflit (true)) (Nflit (true))))) = if false then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 608


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 609


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 610


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 611


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 612


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 613


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 614


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 615


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 616


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 617


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 618


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 619


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 620


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else true
Prop: if false then false else true = if true then false else true
Prop: if false then false else true = if false then false else true
asdf
=================================================
Progress: 621


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
Prop: if true then false else true = if true then false else mainNew (Nfneglit (true))
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
asdf
=================================================
Progress: 622


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if true then false else mainNew (Nflit (false))
Prop: mainNew (Nflit (false)) = if false then false else mainNew (Nflit (false))
Prop: mainNew (Nflit (false)) = if true then false else mainNew (Nflit (false))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
asdf
=================================================
Progress: 623


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nfand (Nfneglit (false)) (Nflit (true))) = if false then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (true)) (Nflit (true)))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
asdf
=================================================
Progress: 624


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nflit (false))
Prop: true = if true then false else mainNew (Nflit (true))
Prop: true = if true then false else mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
=================================================
Progress: 625


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfneglit (true)) (Nfor (Nfneglit (true)) (Nflit (true)))) = if false then false else mainNew (Nfand (Nfneglit (true)) (Nfor (Nfneglit (true)) (Nflit (true))))
Prop: mainNew (Nfneglit (false)) = if true then false else mainNew (Nfneglit (false))
Prop: mainNew (Nflit (true)) = if false then false else mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
=================================================
Progress: 626


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nfor (Nfneglit (true)) (Nfneglit (true))) = if false then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfand (Nflit (false)) (Nfor (Nfneglit (true)) (Nfneglit (false)))) (Nfneglit (false)))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
asdf
=================================================
Progress: 627


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nflit (false))
Prop: true = if false then false else mainNew (Nfor (Nfor (Nflit (true)) (Nfneglit (true))) (Nflit (true)))
Prop: true = if false then false else mainNew (Nfneglit (false))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfor (Nfand (Nfneglit (true)) (Nflit (false))) (Nflit (true))) (Nflit (false)))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 628


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 629


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 630


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 631


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 632


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 633


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (true))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 634


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 635


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 636


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 637


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 638


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (false))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 639


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:11.)
=================================================
Progress: 640


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool2(rank:11.)
=================================================
Progress: 641


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 642


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 643


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (true))
=================================================
Progress: 644


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfneglit (false)) = if true then false else mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
asdf
=================================================
Progress: 645


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if true then false else true
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfneglit (false)) (Nflit (false)))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
asdf
=================================================
Progress: 646


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nflit (true))
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfand (Nfor (Nflit (true)) (Nfneglit (true))) (Nfneglit (true)))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nflit (false)) (Nfor (Nflit (true)) (Nfand (Nfand (Nflit (true)) (Nfand (Nfneglit (false)) (Nfneglit (true)))) (Nfor (Nfor (Nfneglit (false)) (Nfor (Nflit (true)) (Nfneglit (false)))) (Nfneglit (true))))))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nfor (Nfand (Nfneglit (true)) (Nflit (true))) (Nfand (Nflit (true)) (Nfneglit (true))))) = if true then false else true
asdf
=================================================
Progress: 647


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (true)) (Nflit (false))) = if true then false else mainNew (Nfor (Nflit (true)) (Nflit (false)))
Prop: mainNew (Nfand (Nflit (true)) (Nfand (Nflit (true)) (Nfneglit (false)))) = if true then false else mainNew (Nfand (Nflit (true)) (Nfand (Nflit (true)) (Nfneglit (false))))
Prop: mainNew (Nfneglit (true)) = if true then false else mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfor (Nfor (Nfneglit (false)) (Nflit (false))) (Nflit (true)))) = if true then false else true
asdf
=================================================
Progress: 648


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nfneglit (false)))) = if false then false else true
Prop: mainNew (Nfand (Nflit (true)) (Nfneglit (false))) = if true then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfneglit (false)) (Nfor (Nfneglit (false)) (Nfneglit (true))))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
=================================================
Progress: 649


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfand (Nflit (true)) (Nfneglit (false)))
Prop: true = if false then false else mainNew (Nfand (Nfneglit (true)) (Nflit (true)))
Prop: true = if false then false else mainNew (Nflit (true))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
Prop: spec (repr (Nfor (Nflit (true)) (Nflit (false)))) = if false then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 650


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 651


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 652


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 653


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 654


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 655


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (false))
asdf
=================================================
Progress: 656


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nflit (true)) = if false then false else mainNew (Nflit (true))
Prop: mainNew (Nflit (false)) = if false then false else mainNew (Nflit (false))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (true)) (Nfneglit (true)))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 657


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 658


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 659


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 660


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 661


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 662


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 663


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else mainNew (Nfneglit (true))
Prop: if true then false else true = if false then false else mainNew (Nfneglit (true))
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
asdf
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 664


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 665


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 666


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 667


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 668


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (true))
asdf
=================================================
Progress: 669


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nfand (Nfand (Nfor (Nfor (Nflit (false)) (Nflit (true))) (Nfneglit (true))) (Nfneglit (false))) (Nflit (true)))) = if false then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 670


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 671


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 672


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nflit (true))
Prop: true = if false then false else mainNew (Nfand (Nfneglit (false)) (Nfneglit (false)))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nfor (Nfand (Nfand (Nfor (Nfneglit (false)) (Nfneglit (true))) (Nfneglit (false))) (Nflit (false))) (Nflit (true)))) = if false then false else true
=================================================
Progress: 673


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfneglit (true)) (Nflit (false)))) = if false then false else mainNew (Nfand (Nfneglit (true)) (Nflit (false)))
Prop: spec (repr (Nfor (Nfand (Nflit (false)) (Nfand (Nfneglit (true)) (Nflit (true)))) (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nfneglit (false))))) = if false then false else mainNew (Nfor (Nfand (Nflit (false)) (Nfand (Nfneglit (true)) (Nflit (true)))) (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nfneglit (false))))
Prop: spec (repr (Nflit (true))) = if true then false else mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if true then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
asdf
=================================================
Progress: 674


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
=================================================
Progress: 675


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfneglit (true)) (Nfor (Nflit (true)) (Nfneglit (true)))) = if true then false else spec (repr (Nfor (Nfneglit (true)) (Nfor (Nflit (true)) (Nfneglit (true)))))
Prop: mainNew (Nfneglit (false)) = if false then false else spec (repr (Nfneglit (false)))
Prop: mainNew (Nfor (Nfneglit (true)) (Nfneglit (true))) = if true then false else spec (repr (Nfor (Nfneglit (true)) (Nfneglit (true))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfand (Nflit (true)) (Nflit (true))) (Nfneglit (true))) = if false then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if true then false else true
asdf
=================================================
Progress: 676


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if false then false else mainNew (Nflit (false))
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
Prop: mainNew (Nfand (Nflit (true)) (Nfand (Nfand (Nfneglit (false)) (Nflit (true))) (Nfneglit (true)))) = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 677


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 678


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 679


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 680


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 681


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 682


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 683


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
Prop: if true then false else true = if true then false else mainNew (Nfneglit (true))
Prop: if true then false else true = if true then false else mainNew (Nfneglit (true))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 684


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 685


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 686


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 687


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 688


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 689


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (true))
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
asdf
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 690


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:11.)
=================================================
Progress: 691


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool2(rank:11.)
=================================================
Progress: 692


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 693


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 694


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfneglit (true))
asdf
=================================================
Progress: 695


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Fnot (Flit (false))) = if false then false else spec (Fnot (Flit (false)))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
Lemma List
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 696


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 697


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nnfformula1(rank:7.)
=================================================
Progress: 698


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nnfformula1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 699


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
---------------------------------------
forall (formula1:formula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 700


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
---------------------------------------
forall (formula1:formula), spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Cond2 : spec (repr (nnfformula1)) = true
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Fand (Flit (true)) (Fand (Fnot (Flit (true))) (Fand (Fand (Flit (false)) (Fand (Flit (false)) (Flit (true)))) (Flit (true))))) = if true then false else spec (Fand (Flit (true)) (Fand (Fnot (Flit (true))) (Fand (Fand (Flit (false)) (Fand (Flit (false)) (Flit (true)))) (Flit (true)))))
Prop: spec (Fnot (Flit (true))) = if true then false else spec (Fnot (Flit (true)))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
asdf
=================================================
Progress: 701


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 702


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if true then false else mainNew (Nfneglit (false))
Prop: spec (repr (Nflit (true))) = if false then false else mainNew (Nflit (true))
Prop: spec (repr (Nfor (Nfand (Nflit (false)) (Nflit (false))) (Nfand (Nfand (Nfneglit (true)) (Nflit (false))) (Nfor (Nfand (Nfand (Nflit (false)) (Nflit (false))) (Nflit (true))) (Nfneglit (true)))))) = if false then false else mainNew (Nfor (Nfand (Nflit (false)) (Nflit (false))) (Nfand (Nfand (Nfneglit (true)) (Nflit (false))) (Nfor (Nfand (Nfand (Nflit (false)) (Nflit (false))) (Nflit (true))) (Nfneglit (true)))))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
Prop: spec (repr (Nfor (Nfand (Nflit (false)) (Nflit (true))) (Nflit (true)))) = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 703


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 704


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 705


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 706


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 707


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 708


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 709


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else true
Prop: if true then false else true = if false then false else true
Prop: if false then false else true = if true then false else true
asdf
=================================================
Progress: 710


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 711


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if false then false else spec (repr (Nflit (true)))
Prop: mainNew (Nflit (false)) = if false then false else spec (repr (Nflit (false)))
Prop: mainNew (Nfneglit (true)) = if false then false else spec (repr (Nfneglit (true)))
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nflit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfor (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (true))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 712


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 713


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 714


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 715


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 716


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 717


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 718


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else spec (repr (Nfneglit (true)))
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
Prop: if true then false else true = if false then false else spec (repr (Nfneglit (true)))
asdf
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 719


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 720


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 721


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 722


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 723


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
=================================================
Progress: 724


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if true then false else mainNew (Nflit (true))
Prop: mainNew (Nfor (Nflit (false)) (Nfneglit (false))) = if true then false else mainNew (Nfor (Nflit (false)) (Nfneglit (false)))
Prop: mainNew (Nfneglit (false)) = if false then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 725


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 726


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 727


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfand (Nfneglit (false)) (Nfneglit (false))) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 728


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nflit (false))
Prop: true = if true then false else mainNew (Nflit (true))
Prop: true = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 729


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfand (Nfand (Nfneglit (false)) (Nflit (true))) (Nfneglit (true))) (Nflit (true))) = if true then false else mainNew (Nfand (Nfand (Nfand (Nfneglit (false)) (Nflit (true))) (Nfneglit (true))) (Nflit (true)))
Prop: mainNew (Nfneglit (false)) = if true then false else mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (false)) = if false then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
asdf
=================================================
Progress: 730


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (true)) (Nfneglit (false))) = if true then false else true
Prop: mainNew (Nfor (Nfand (Nflit (false)) (Nflit (true))) (Nflit (false))) = if true then false else true
Prop: mainNew (Nfor (Nfneglit (false)) (Nfneglit (false))) = if true then false else true
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfand (Nfneglit (true)) (Nfneglit (true))) (Nflit (false)))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
asdf
=================================================
Progress: 731


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfand (Nflit (true)) (Nfneglit (false)))
Prop: true = if true then false else mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Prop: spec (repr (Nfor (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nflit (true))))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if false then false else true
=================================================
Progress: 732


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
=================================================
Progress: 733


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfor (Nfneglit (true)) (Nfor (Nfneglit (false)) (Nfneglit (true)))) = if true then false else mainNew (Nfor (Nfneglit (true)) (Nfor (Nfneglit (false)) (Nfneglit (true))))
Prop: mainNew (Nfneglit (false)) = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (false)) (Nflit (false))) = if true then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if true then false else true
asdf
=================================================
Progress: 734


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if true then false else spec (repr (Nfneglit (true)))
Prop: mainNew (Nflit (true)) = if true then false else spec (repr (Nflit (true)))
Prop: mainNew (Nfand (Nfneglit (true)) (Nflit (true))) = if false then false else spec (repr (Nfand (Nfneglit (true)) (Nflit (true))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (false)) (Nfor (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nflit (false))))) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
=================================================
Progress: 735


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nflit (true)) = if true then false else mainNew (Nflit (true))
Prop: mainNew (Nfneglit (false)) = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 736


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 737


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if false then false else spec (repr (Nflit (true)))
Prop: mainNew (Nfand (Nfneglit (false)) (Nflit (false))) = if false then false else spec (repr (Nfand (Nfneglit (false)) (Nflit (false))))
Prop: mainNew (Nfor (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (true))) = if false then false else spec (repr (Nfor (Nfand (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (true))))
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfand (Nfand (Nfor (Nflit (true)) (Nfneglit (true))) (Nfor (Nflit (true)) (Nflit (false)))) (Nfneglit (false))) (Nflit (true))) = if false then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nfor (Nflit (true)) (Nfneglit (true))) = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 738


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 739


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else mainNew (Nflit (false))
Prop: spec (repr (Nfand (Nfneglit (false)) (Nflit (false)))) = if true then false else mainNew (Nfand (Nfneglit (false)) (Nflit (false)))
Prop: spec (repr (Nfneglit (false))) = if false then false else mainNew (Nfneglit (false))
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfor (Nfneglit (true)) (Nfneglit (false)))
Prop: true = if false then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 740


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Fnot (Fand (Fand (Fand (Flit (true)) (Flit (false))) (Flit (true))) (Flit (true)))) = if true then false else spec (Fnot (Fand (Fand (Fand (Flit (true)) (Flit (false))) (Flit (true))) (Flit (true))))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
validate generalize_common_subterm_goal
Prop: spec (Fnot (Fand (Forr (Flit (false)) (Fnot (Fnot (Fand (Flit (true)) (Flit (false)))))) (Flit (false)))) = if true then false else spec (Fnot (Fand (Forr (Flit (false)) (Fnot (Fnot (Fand (Flit (true)) (Flit (false)))))) (Flit (false))))
Prop: spec (Fand (Flit (false)) (Flit (false))) = if true then false else spec (Fand (Flit (false)) (Flit (false)))
Prop: spec (Forr (Flit (true)) (Fand (Flit (false)) (Flit (true)))) = if false then false else spec (Forr (Flit (true)) (Fand (Flit (false)) (Flit (true))))
Prop: spec (repr (Nfneglit (true))) = if false then false else spec (repr (Nfneglit (true)))
Prop: spec (repr (Nflit (true))) = if false then false else spec (repr (Nflit (true)))
Prop: spec (repr (Nfneglit (true))) = if false then false else spec (repr (Nfneglit (true)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 741


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 742


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 743


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 744


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 745


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 746


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 747


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else spec (repr (Nfneglit (true)))
Prop: if false then false else true = if false then false else spec (repr (Nfneglit (false)))
Prop: if true then false else true = if false then false else spec (repr (Nfneglit (true)))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 748


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 749


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 750


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 751


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 752


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 753


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 754


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 755


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 756


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 757


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
=================================================
Progress: 758


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
asdf
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else spec (repr (Nfneglit (true)))
Prop: if true then false else true = if true then false else spec (repr (Nfneglit (true)))
Prop: if true then false else true = if true then false else spec (repr (Nfneglit (true)))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 759


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:11.)
=================================================
Progress: 760


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool2(rank:11.)
=================================================
Progress: 761


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 762


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 763


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 764


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else spec (repr (Nfneglit (true)))
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
Prop: if true then false else true = if true then false else spec (repr (Nfneglit (true)))
asdf
=================================================
Progress: 765


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfneglit (false)) (Nfneglit (true)))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 766


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nflit (false)))
Prop: true = if true then false else spec (repr (Nflit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
=================================================
Progress: 767


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
=================================================
Progress: 768


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nfneglit (false)) = if false then false else mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nflit (false)) = if false then false else true
=================================================
Progress: 769


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfneglit (false)) (Nflit (false))) = if true then false else spec (repr (Nfor (Nfneglit (false)) (Nflit (false))))
Prop: mainNew (Nflit (false)) = if true then false else spec (repr (Nflit (false)))
Prop: mainNew (Nflit (false)) = if false then false else spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if false then false else true
Prop: mainNew (Nflit (false)) = if false then false else true
Prop: mainNew (Nfand (Nflit (false)) (Nflit (false))) = if false then false else true
=================================================
Progress: 770


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if true then false else mainNew (Nflit (false))
Prop: mainNew (Nfor (Nflit (false)) (Nflit (true))) = if false then false else mainNew (Nfor (Nflit (false)) (Nflit (true)))
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 771


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 772


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (true)) (Nfneglit (false))) = if true then false else spec (repr (Nfor (Nflit (true)) (Nfneglit (false))))
Prop: mainNew (Nfneglit (false)) = if false then false else spec (repr (Nfneglit (false)))
Prop: mainNew (Nfand (Nflit (true)) (Nflit (false))) = if false then false else spec (repr (Nfand (Nflit (true)) (Nflit (false))))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfand (Nflit (false)) (Nfneglit (true))) (Nfand (Nfneglit (true)) (Nfneglit (true)))) = if false then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
Prop: mainNew (Nfor (Nfor (Nfor (Nflit (false)) (Nfneglit (false))) (Nfand (Nfand (Nfor (Nfneglit (false)) (Nfand (Nflit (true)) (Nflit (false)))) (Nfneglit (true))) (Nfand (Nflit (true)) (Nfneglit (false))))) (Nflit (true))) = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
=================================================
Progress: 773


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 774


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else mainNew (Nflit (false))
Prop: spec (repr (Nflit (false))) = if false then false else mainNew (Nflit (false))
Prop: spec (repr (Nfor (Nfneglit (true)) (Nfneglit (false)))) = if true then false else mainNew (Nfor (Nfneglit (true)) (Nfneglit (false)))
asdf
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if true then false else mainNew (Nfor (Nfand (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nflit (true)))) (Nfand (Nflit (false)) (Nfneglit (true))))
Prop: true = if false then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 775


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 776


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (false)) (Nflit (true)))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (true))) = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
=================================================
Progress: 777


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nflit (false)))
Prop: true = if true then false else spec (repr (Nfand (Nfor (Nflit (false)) (Nflit (false))) (Nflit (false))))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 778


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 779


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 780


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 781


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 782


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 783


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 784


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 785


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 786


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 787


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 788


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
=================================================
Progress: 789


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfor (Nflit (false)) (Nfand (Nflit (true)) (Nfor (Nfor (Nfneglit (false)) (Nflit (true))) (Nflit (false))))) = if false then false else true
asdf
Lemma List
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 790


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 791


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Fnot (Flit (false))) = if false then false else spec (Fnot (Flit (false)))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
asdf
=================================================
Progress: 792


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nfand (Nfneglit (false)) (Nfneglit (true)))) = if false then false else true
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (false)) (Nfor (Nfand (Nfand (Nflit (true)) (Nfand (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (true)))) (Nflit (true))) (Nflit (false)))) = if true then false else true
Prop: mainNew (Nflit (false)) = if false then false else true
Prop: mainNew (Nfand (Nflit (true)) (Nflit (true))) = if false then false else true
=================================================
Progress: 793


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nflit (true)))
Prop: true = if false then false else spec (repr (Nflit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if false then false else true
=================================================
Progress: 794


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (true)) (Nflit (false))) = if false then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
asdf
=================================================
Progress: 795


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nfor (Nfand (Nflit (true)) (Nfneglit (true))) (Nflit (true)))) = if true then false else true
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
=================================================
Progress: 796


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfand (Nflit (false)) (Nfor (Nflit (false)) (Nfand (Nfand (Nfneglit (false)) (Nflit (true))) (Nfand (Nflit (false)) (Nflit (false)))))))
Prop: true = if true then false else spec (repr (Nflit (false)))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nfand (Nflit (false)) (Nfor (Nfand (Nfneglit (false)) (Nfand (Nflit (false)) (Nfor (Nfneglit (false)) (Nflit (true))))) (Nfneglit (false)))) = if false then false else true
=================================================
Progress: 797


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 0
Prop: spec (Forr (Flit (false)) (Flit (true))) = if false then false else spec (Forr (Flit (false)) (Flit (true)))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (repr (Nflit (false))) = if true then false else spec (repr (Nflit (false)))
Prop: spec (repr (Nfneglit (true))) = if false then false else spec (repr (Nfneglit (true)))
Prop: spec (repr (Nfneglit (true))) = if false then false else spec (repr (Nfneglit (true)))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (true)) (Nfneglit (false))) = if true then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfor (Nfneglit (true)) (Nfand (Nflit (false)) (Nflit (false)))) = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 798


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 799


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 800


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 801


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 802


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 803


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 804


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
Prop: if false then false else true = if false then false else spec (repr (Nfneglit (false)))
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
asdf
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 805


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 806


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool2(rank:9.)
=================================================
Progress: 807


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 808


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 809


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
asdf
=================================================
Progress: 810


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (true)) (Nfneglit (true)))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
Prop: spec (repr (Nfand (Nfor (Nflit (false)) (Nfand (Nfneglit (false)) (Nfneglit (true)))) (Nflit (false)))) = if true then false else true
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfor (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nflit (false)))) (Nflit (false))) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nflit (false)) = if false then false else true
=================================================
Progress: 811


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfneglit (true)) (Nflit (false))) = if false then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
asdf
=================================================
Progress: 812


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 0
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if true then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
asdf
=================================================
Progress: 813


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfor (Nfand (Nfand (Nfneglit (true)) (Nfor (Nfor (Nfneglit (false)) (Nflit (false))) (Nfneglit (true)))) (Nfor (Nfneglit (true)) (Nfand (Nfneglit (false)) (Nflit (false))))) (Nfor (Nfor (Nfor (Nfor (Nflit (true)) (Nflit (false))) (Nfneglit (false))) (Nflit (true))) (Nfor (Nflit (false)) (Nfand (Nflit (true)) (Nfneglit (true))))))) = if true then false else true
Prop: spec (repr (Nfor (Nfneglit (false)) (Nfneglit (false)))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if false then false else true
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfor (Nflit (false)) (Nflit (false))) (Nfneglit (false))) = if true then false else true
Prop: mainNew (Nflit (false)) = if false then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 814


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 815


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 816


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 817


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 818


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 819


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 820


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if false then false else true
Prop: if true then false else true = if true then false else true
Prop: if true then false else true = if true then false else true
Lemma List
forall (bool1:bool), true = if bool1 then false else true
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 821


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool), true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 822


1st goal of : forall (bool1:bool), true = if bool1 then false else true

---------------------------------------
forall (bool1:bool), true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool), true = if bool1 then false else true
bool1 : bool
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 823


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nflit (true)))
Prop: true = if false then false else spec (repr (Nfor (Nfand (Nflit (false)) (Nfor (Nflit (true)) (Nflit (true)))) (Nflit (true))))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (false)) (Nflit (false))) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 824


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = mainNew (nnfformula2)
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 825


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 826


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 827


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 828


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 829


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
asdf
=================================================
Progress: 830


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 0
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Fnot (Flit (true))) = if true then false else spec (Fnot (Flit (true)))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if true then false else true
asdf
=================================================
Progress: 831


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nfand (Nfneglit (true)) (Nflit (true)))) = if false then false else true
Prop: spec (repr (Nfor (Nfneglit (true)) (Nfneglit (true)))) = if true then false else true
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (true)) (Nfand (Nfor (Nfor (Nfneglit (false)) (Nfneglit (true))) (Nflit (true))) (Nfneglit (false)))) = if false then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
=================================================
Progress: 832


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfand (Nflit (false)) (Nflit (true))))
Prop: true = if true then false else spec (repr (Nflit (false)))
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfand (Nfor (Nflit (true)) (Nflit (false))) (Nfand (Nflit (true)) (Nfneglit (true)))) = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 833


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then mainNew (nnfformula2) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 834


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 835


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 836


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 837


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 838


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
=================================================
Progress: 839


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 0
Prop: spec (Forr (Flit (false)) (Flit (false))) = if false then false else spec (Forr (Flit (false)) (Flit (false)))
Prop: spec (Flit (true)) = if true then false else spec (Flit (true))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Fnot (Fnot (Flit (true)))) = if true then false else spec (Fnot (Fnot (Flit (true))))
Prop: spec (Forr (Forr (Flit (false)) (Forr (Flit (false)) (Flit (false)))) (Flit (false))) = if false then false else spec (Forr (Forr (Flit (false)) (Forr (Flit (false)) (Flit (false)))) (Flit (false)))
Prop: spec (repr (Nfor (Nfand (Nfneglit (true)) (Nfneglit (true))) (Nfand (Nflit (false)) (Nfneglit (true))))) = if false then false else spec (repr (Nfor (Nfand (Nfneglit (true)) (Nfneglit (true))) (Nfand (Nflit (false)) (Nfneglit (true)))))
Prop: spec (repr (Nflit (false))) = if true then false else spec (repr (Nflit (false)))
Prop: spec (repr (Nfneglit (false))) = if false then false else spec (repr (Nfneglit (false)))
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfneglit (false)) = if false then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 840


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:7.)
=================================================
Progress: 841


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro bool1(rank : 7.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:10.)
=================================================
Progress: 842


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nnfformula1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 843


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
spec (repr (Nfneglit (bool2))) = true->mainNew (Nfneglit (bool2)) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 844


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 845


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 846


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), spec (repr (nnfformula1)) = true->mainNew (nnfformula1) = true -> spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else spec (repr (Nfneglit (true)))
Prop: if false then false else true = if true then false else spec (repr (Nfneglit (false)))
Prop: if true then false else true = if true then false else spec (repr (Nfneglit (true)))
asdf
=================================================
Progress: 847


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nfor (Nfneglit (true)) (Nfneglit (true)))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nfneglit (true)) = if false then false else true
Prop: mainNew (Nfand (Nflit (true)) (Nfand (Nflit (false)) (Nfneglit (false)))) = if false then false else true
=================================================
Progress: 848


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 25.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), spec (repr (nnfformula1)) = true -> true = if mainNew (nnfformula1) then spec (repr (nnfformula2)) else false
nnfformula1 : nnfformula
Cond1 : spec (repr (nnfformula1)) = true
Case1 : mainNew (nnfformula1) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfand (Nfneglit (false)) (Nfand (Nfneglit (true)) (Nflit (false)))))
Prop: true = if false then false else spec (repr (Nflit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nflit (true)) = if false then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
=================================================
Progress: 849


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (false)) (Nfneglit (false)))) = if false then false else mainNew (Nfand (Nflit (false)) (Nfneglit (false)))
Prop: spec (repr (Nfor (Nflit (true)) (Nfand (Nfand (Nfneglit (true)) (Nfor (Nflit (false)) (Nflit (false)))) (Nfneglit (false))))) = if true then false else mainNew (Nfor (Nflit (true)) (Nfand (Nfand (Nfneglit (true)) (Nfor (Nflit (false)) (Nflit (false)))) (Nfneglit (false))))
Prop: spec (repr (Nfneglit (false))) = if false then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nflit (false)) (Nfor (Nflit (false)) (Nflit (false))))) = if true then false else true
Prop: spec (repr (Nfand (Nfand (Nfand (Nfneglit (false)) (Nfneglit (true))) (Nflit (false))) (Nflit (false)))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 850


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 851


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:12.)
=================================================
Progress: 852


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true

0 goal(s) more...

3 conjecture(s) more...
>>> induction nnfformula1(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 853


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else true

3 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 854


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 855


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:12.)
=================================================
Progress: 856


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if false then false else true
Prop: if false then false else true = if false then false else true
Prop: if true then false else true = if true then false else true
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 857


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else true
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

3 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:11.)
=================================================
Progress: 858


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool2(rank:11.)
=================================================
Progress: 859


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 860


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 861


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 862


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else true
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else true
Prop: if false then false else true = if false then false else true
Prop: if false then false else true = if false then false else true
=================================================
Progress: 863


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
=================================================
Progress: 864


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nfneglit (true)) (Nflit (false))) = if true then false else spec (repr (Nfor (Nfneglit (true)) (Nflit (false))))
Prop: mainNew (Nfneglit (true)) = if false then false else spec (repr (Nfneglit (true)))
Prop: mainNew (Nfneglit (true)) = if true then false else spec (repr (Nfneglit (true)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nfor (Nfneglit (true)) (Nfor (Nflit (false)) (Nflit (true)))) (Nfor (Nfneglit (true)) (Nflit (false)))) = if true then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
=================================================
Progress: 865


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nflit (true)) = if true then false else mainNew (Nflit (true))
Prop: mainNew (Nfneglit (false)) = if true then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (false)) (Nflit (false))) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nfor (Nfor (Nflit (true)) (Nflit (true))) (Nfor (Nfneglit (true)) (Nfand (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nfor (Nfand (Nfneglit (true)) (Nfneglit (false))) (Nfor (Nfand (Nfneglit (false)) (Nfor (Nfneglit (false)) (Nfor (Nflit (false)) (Nfand (Nflit (false)) (Nfand (Nfneglit (false)) (Nflit (true))))))) (Nfneglit (true))))))) = if true then false else true
asdf
=================================================
Progress: 866


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
Prop: spec (Flit (false)) = if true then false else spec (Flit (false))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
Lemma List
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 867


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

2 conjecture(s) more...
>>> assert forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)(rank : 0.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 868


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

---------------------------------------
forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (formula1:formula) (bool1:bool), spec (formula1) = if bool1 then false else spec (formula1)
bool1 : bool
---------------------------------------
forall (formula1:formula), spec (formula1) = if bool1 then false else spec (formula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Forr (Flit (false)) (Fnot (Fand (Flit (true)) (Fand (Flit (false)) (Flit (true)))))) = if true then false else spec (Forr (Flit (false)) (Fnot (Fand (Flit (true)) (Fand (Flit (false)) (Flit (true))))))
asdf
=================================================
Progress: 869


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:11.)
=================================================
Progress: 870


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (false))) = if false then false else mainNew (Nfneglit (false))
Prop: spec (repr (Nfneglit (true))) = if true then false else mainNew (Nfneglit (true))
Prop: spec (repr (Nflit (true))) = if false then false else mainNew (Nflit (true))
previous tactics
simpl in goal
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if false then false else true
Prop: spec (repr (Nfor (Nfor (Nflit (false)) (Nfand (Nflit (false)) (Nflit (false)))) (Nflit (true)))) = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 871


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 872


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:12.)
=================================================
Progress: 873


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nnfformula1(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 874


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> spec (repr (Nfneglit (bool2))) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 875


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 876


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:12.)
=================================================
Progress: 877


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> spec (repr (nnfformula1)) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if false then false else mainNew (Nfneglit (true))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if true then false else true = if true then false else mainNew (Nfneglit (true))
Prop: if true then false else true = if false then false else mainNew (Nfneglit (true))
Prop: if false then false else true = if true then false else mainNew (Nfneglit (false))
asdf
=================================================
Progress: 878


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:11.)
=================================================
Progress: 879


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 11.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nflit (true)) = if false then false else spec (repr (Nflit (true)))
Prop: mainNew (Nfneglit (false)) = if false then false else spec (repr (Nfneglit (false)))
Prop: mainNew (Nflit (false)) = if true then false else spec (repr (Nflit (false)))
previous tactics
simpl in goal
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfor (Nfneglit (true)) (Nflit (true))))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 880


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 881


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:12.)
=================================================
Progress: 882


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nnfformula1(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 883


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 884


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 885


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> true = if bool1 then false else spec (repr (nnfformula1))
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else spec (repr (Nfneglit (bool2)))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfneglit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (false)))
asdf
=================================================
Progress: 886


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (false)) (Nfand (Nfor (Nfand (Nfneglit (false)) (Nfand (Nflit (false)) (Nflit (true)))) (Nflit (false))) (Nfand (Nfor (Nflit (false)) (Nflit (true))) (Nflit (false))))) = if true then false else mainNew (Nfand (Nflit (false)) (Nfand (Nfor (Nfand (Nfneglit (false)) (Nfand (Nflit (false)) (Nflit (true)))) (Nflit (false))) (Nfand (Nfor (Nflit (false)) (Nflit (true))) (Nflit (false)))))
Prop: mainNew (Nflit (true)) = if false then false else mainNew (Nflit (true))
Prop: mainNew (Nfor (Nfand (Nfneglit (false)) (Nfand (Nflit (true)) (Nfand (Nfneglit (false)) (Nfor (Nfor (Nflit (false)) (Nfor (Nfor (Nfneglit (true)) (Nfand (Nflit (true)) (Nfand (Nfor (Nfneglit (true)) (Nfneglit (true))) (Nfor (Nfand (Nflit (false)) (Nflit (true))) (Nfor (Nfneglit (true)) (Nfor (Nfand (Nflit (true)) (Nfand (Nfor (Nflit (false)) (Nflit (false))) (Nfneglit (true)))) (Nfand (Nflit (true)) (Nfneglit (true))))))))) (Nfand (Nflit (true)) (Nfand (Nflit (false)) (Nflit (true)))))) (Nflit (false)))))) (Nflit (false))) = if false then false else mainNew (Nfor (Nfand (Nfneglit (false)) (Nfand (Nflit (true)) (Nfand (Nfneglit (false)) (Nfor (Nfor (Nflit (false)) (Nfor (Nfor (Nfneglit (true)) (Nfand (Nflit (true)) (Nfand (Nfor (Nfneglit (true)) (Nfneglit (true))) (Nfor (Nfand (Nflit (false)) (Nflit (true))) (Nfor (Nfneglit (true)) (Nfor (Nfand (Nflit (true)) (Nfand (Nfor (Nflit (false)) (Nflit (false))) (Nfneglit (true)))) (Nfand (Nflit (true)) (Nfneglit (true))))))))) (Nfand (Nflit (true)) (Nfand (Nflit (false)) (Nflit (true)))))) (Nflit (false)))))) (Nflit (false)))
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if false then false else true
asdf
Lemma List
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
End of Lemma List


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 887


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)(rank : 0.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:9.)
=================================================
Progress: 888


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

---------------------------------------
forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 9.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nnfformula1(rank:12.)
=================================================
Progress: 889


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
---------------------------------------
forall (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nnfformula1(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 890


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
mainNew (Nfneglit (bool2)) = true->spec (repr (Nfneglit (bool2))) = true -> mainNew (Nfneglit (bool2)) = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 891


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 892


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:12.)
=================================================
Progress: 893


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 12.)


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nfneglit (true))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if false then false else true = if false then false else mainNew (Nfneglit (false))
Prop: if true then false else true = if false then false else mainNew (Nfneglit (true))
Prop: if true then false else true = if false then false else mainNew (Nfneglit (true))
Lemma List
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
End of Lemma List


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 894


1st goal of : forall (bool1:bool) (nnfformula1:nnfformula), mainNew (nnfformula1) = true->spec (repr (nnfformula1)) = true -> mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)
bool1 : bool
nnfformula1 : nnfformula
bool2 : bool
Base1 : nnfformula1 = Nfneglit (bool2)
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

3 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))(rank : 0.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:11.)
=================================================
Progress: 895


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

---------------------------------------
forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool2(rank:11.)
=================================================
Progress: 896


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
---------------------------------------
forall (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 897


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
---------------------------------------
if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 898


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
---------------------------------------
if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool1:bool) (bool2:bool), if bool2 then false else true = true->if bool2 then false else true = true -> true = if bool1 then false else mainNew (Nfneglit (bool2))
bool1 : bool
bool2 : bool
Cond1 : if bool2 then false else true = true
Cond2 : if bool2 then false else true = true
---------------------------------------
true = if bool1 then false else mainNew (Nfneglit (bool2))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfneglit (false))
Prop: true = if false then false else mainNew (Nfneglit (false))
Prop: true = if false then false else mainNew (Nfneglit (false))
asdf
=================================================
Progress: 899


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else true
Prop: mainNew (Nflit (false)) = if true then false else true
Prop: mainNew (Nfneglit (true)) = if false then false else true
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 900


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else mainNew (Nflit (false))
Prop: true = if true then false else mainNew (Nflit (true))
Prop: true = if false then false else mainNew (Nfneglit (false))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if false then false else true
Prop: true = if true then false else true
asdf
=================================================
Progress: 901


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (false)) = if false then false else mainNew (Nfneglit (false))
Prop: mainNew (Nfneglit (true)) = if false then false else mainNew (Nfneglit (true))
Prop: mainNew (Nflit (false)) = if false then false else mainNew (Nflit (false))
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
Prop: spec (repr (Nfor (Nfneglit (true)) (Nfor (Nflit (true)) (Nflit (true))))) = if true then false else true
asdf
=================================================
Progress: 902


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 1(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
mainNew (nnfformula1) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 1
validate generalize_common_subterm_goal
Prop: mainNew (Nfor (Nflit (false)) (Nfor (Nfneglit (true)) (Nfor (Nflit (false)) (Nfneglit (false))))) = if false then false else true
Prop: mainNew (Nfor (Nfneglit (true)) (Nflit (true))) = if false then false else true
Prop: mainNew (Nflit (false)) = if false then false else true
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if true then false else true
asdf
=================================================
Progress: 903


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else mainNew (nnfformula1)

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Case1 in goal at 0
rewrite <- Cond1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if true then false else mainNew (Nfor (Nflit (true)) (Nfneglit (true)))
Prop: true = if false then false else mainNew (Nfneglit (true))
Prop: true = if false then false else mainNew (Nflit (true))
asdf
previous tactics
simpl in goal
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: spec (repr (Nfneglit (true))) = if false then false else true
Prop: spec (repr (Nflit (true))) = if false then false else true
Prop: spec (repr (Nfor (Nfneglit (true)) (Nfand (Nfneglit (true)) (Nfneglit (false))))) = if false then false else true
=================================================
Progress: 904


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 0
Prop: spec (Flit (false)) = if false then false else spec (Flit (false))
Prop: spec (Fand (Forr (Flit (true)) (Forr (Flit (true)) (Flit (false)))) (Flit (false))) = if false then false else spec (Fand (Forr (Flit (true)) (Forr (Flit (true)) (Flit (false)))) (Flit (false)))
Prop: spec (Flit (true)) = if false then false else spec (Flit (true))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if true then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nfand (Nfor (Nfneglit (false)) (Nfneglit (false))) (Nfneglit (true))) = if true then false else true
asdf
=================================================
Progress: 905


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
spec (repr (nnfformula1)) = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: spec (repr (Nfand (Nfand (Nflit (true)) (Nfor (Nfand (Nflit (true)) (Nflit (false))) (Nfneglit (false)))) (Nflit (false)))) = if false then false else true
Prop: spec (repr (Nfneglit (false))) = if true then false else true
Prop: spec (repr (Nflit (false))) = if true then false else true
asdf
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if true then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (true)) (Nfand (Nfneglit (false)) (Nfor (Nflit (true)) (Nfneglit (false))))) = if false then false else true
Prop: mainNew (Nflit (true)) = if true then false else true
Prop: mainNew (Nfor (Nflit (false)) (Nfor (Nflit (false)) (Nflit (false)))) = if true then false else true
asdf
=================================================
Progress: 906


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 27.)


1st goal of : forall (nnfformula1:nnfformula) (nnfformula2:nnfformula), mainNew (nnfformula1) = true -> if spec (repr (nnfformula1)) then true else false = spec (repr (nnfformula2))
nnfformula1 : nnfformula
Cond1 : mainNew (nnfformula1) = true
Case1 : spec (repr (nnfformula1)) = true
nnfformula2 : nnfformula
bool1 : bool
Base1 : nnfformula2 = Nfneglit (bool1)
---------------------------------------
true = if bool1 then false else spec (repr (nnfformula1))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: true = if false then false else spec (repr (Nflit (false)))
Prop: true = if true then false else spec (repr (Nfneglit (true)))
Prop: true = if false then false else spec (repr (Nfand (Nfneglit (false)) (Nfand (Nflit (true)) (Nflit (false)))))
previous tactics
simpl in goal
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = if false then false else true
Prop: true = if true then false else true
Prop: true = if false then false else true
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew (Nfand (Nflit (true)) (Nflit (true))) = if false then false else true
Prop: mainNew (Nfneglit (true)) = if true then false else true
Prop: mainNew (Nfand (Nfand (Nflit (true)) (Nfor (Nfneglit (true)) (Nfand (Nflit (false)) (Nflit (false))))) (Nfor (Nfneglit (true)) (Nfneglit (true)))) = if true then false else true
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
