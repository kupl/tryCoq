Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (f:formula), eval_ta1 (f) = eval (f)(rank : 0.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)

---------------------------------------
forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)

---------------------------------------
forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)

---------------------------------------
forall (formula1:formula), eval_ta1 (formula1) = match (eval_help (formula1)) with
| True -> true
| False -> false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction formula1(rank:9.)
=================================================
Progress: 3


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)

---------------------------------------
forall (formula1:formula), eval_ta1 (formula1) = match (eval_help (formula1)) with
| True -> true
| False -> false

0 goal(s) more...

0 conjecture(s) more...
>>> induction formula1(rank : 9.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
Base1 : formula1 = True
---------------------------------------
eval_ta1 (True) = match (eval_help (True)) with
| True -> true
| False -> false

6 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 4


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
Base1 : formula1 = True
---------------------------------------
eval_ta1 (True) = match (eval_help (True)) with
| True -> true
| False -> false

6 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
Base1 : formula1 = False
---------------------------------------
eval_ta1 (False) = match (eval_help (False)) with
| True -> true
| False -> false

5 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 5


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
Base1 : formula1 = False
---------------------------------------
eval_ta1 (False) = match (eval_help (False)) with
| True -> true
| False -> false

5 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
eval_ta1 (Not (formula2)) = match (eval_help (Not (formula2))) with
| True -> true
| False -> false

4 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 6


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
eval_ta1 (Not (formula2)) = match (eval_help (Not (formula2))) with
| True -> true
| False -> false

4 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
if eval_ta1 (formula2) then false else true = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case eval_ta1 (formula2)(rank:8.)
rewrite IH1 in goal at 0(rank:15.)
=================================================
Progress: 7


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
if eval_ta1 (formula2) then false else true = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false

4 goal(s) more...

0 conjecture(s) more...
>>> case eval_ta1 (formula2)(rank : 8.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : true = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
Case1 : eval_ta1 (formula2) = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false

5 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:8.)
=================================================
Progress: 8


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : true = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
Case1 : eval_ta1 (formula2) = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false

5 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : true = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
Case1 : eval_ta1 (formula2) = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false

5 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case eval_ta1 (formula2)
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
previous tactics
simpl in goal
case eval_ta1 (formula2)
validate generalize_common_subterm_goal
Lemma List
forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
End of Lemma List


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : true = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
Case1 : eval_ta1 (formula2) = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false

5 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
End of Lemma List


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : true = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
Case1 : eval_ta1 (formula2) = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false

5 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 9


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : true = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
Case1 : eval_ta1 (formula2) = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false

5 goal(s) more...

0 conjecture(s) more...
>>> assert forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false(rank : 0.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

---------------------------------------
forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro formula1(rank:5.)
=================================================
Progress: 10


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : true = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
Case1 : eval_ta1 (formula2) = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false

5 goal(s) more...

0 conjecture(s) more...
>>> assert forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false(rank : 0.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

---------------------------------------
forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction formula1(rank:11.)
=================================================
Progress: 11


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

---------------------------------------
forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
>>> intro formula1(rank : 5.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
---------------------------------------
eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 12


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
---------------------------------------
eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : eval_ta1 (formula1) = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:5.)
=================================================
Progress: 13


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : eval_ta1 (formula1) = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 5.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : eval_ta1 (formula1) = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
validate generalize_common_subterm_goal
Lemma List
forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
End of Lemma List


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : eval_ta1 (formula1) = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
End of Lemma List


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : eval_ta1 (formula1) = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 14


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : eval_ta1 (formula1) = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false(rank : 0.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

---------------------------------------
forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro formula1(rank:7.)
=================================================
Progress: 15


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : eval_ta1 (formula1) = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false(rank : 0.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

---------------------------------------
forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction formula1(rank:13.)
=================================================
Progress: 16


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

---------------------------------------
forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

2 conjecture(s) more...
>>> intro formula1(rank : 7.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
---------------------------------------
eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 17


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
---------------------------------------
eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : eval_ta1 (formula1) = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:7.)
=================================================
Progress: 18


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : eval_ta1 (formula1) = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 7.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : eval_ta1 (formula1) = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
validate generalize_common_subterm_goal
=================================================
Progress: 19


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

---------------------------------------
forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

0 goal(s) more...

1 conjecture(s) more...
>>> induction formula1(rank : 11.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
Base1 : formula1 = True
---------------------------------------
eval_ta1 (True) = true -> false = match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> eval_ta1 (True)
| False -> false

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 20


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
Base1 : formula1 = True
---------------------------------------
eval_ta1 (True) = true -> false = match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> eval_ta1 (True)
| False -> false

6 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
Base1 : formula1 = False
---------------------------------------
eval_ta1 (False) = true -> false = match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> eval_ta1 (False)
| False -> false

5 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 21


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
Base1 : formula1 = False
---------------------------------------
eval_ta1 (False) = true -> false = match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> eval_ta1 (False)
| False -> false

5 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
eval_ta1 (Not (formula2)) = true -> false = match (match (Not (formula2)) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (Not (formula2))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 22


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
eval_ta1 (Not (formula2)) = true -> false = match (match (Not (formula2)) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (Not (formula2))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
if eval_ta1 (formula2) then false else true = true -> false = match (match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 23


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
if eval_ta1 (formula2) then false else true = true -> false = match (match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
---------------------------------------
false = match (match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))(rank:15.)
=================================================
Progress: 24


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

---------------------------------------
forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

0 goal(s) more...

2 conjecture(s) more...
>>> induction formula1(rank : 13.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
Base1 : formula1 = True
---------------------------------------
eval_ta1 (True) = true -> false = match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> eval_ta1 (True)
| False -> false

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 25


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
Base1 : formula1 = True
---------------------------------------
eval_ta1 (True) = true -> false = match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> eval_ta1 (True)
| False -> false

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
Base1 : formula1 = False
---------------------------------------
eval_ta1 (False) = true -> false = match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> eval_ta1 (False)
| False -> false

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 26


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
Base1 : formula1 = False
---------------------------------------
eval_ta1 (False) = true -> false = match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> eval_ta1 (False)
| False -> false

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
eval_ta1 (Not (formula2)) = true -> false = match (match (Not (formula2)) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (Not (formula2))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 27


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
eval_ta1 (Not (formula2)) = true -> false = match (match (Not (formula2)) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (Not (formula2))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
if eval_ta1 (formula2) then false else true = true -> false = match (match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 28


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
if eval_ta1 (formula2) then false else true = true -> false = match (match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
---------------------------------------
false = match (match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))(rank:17.)
=================================================
Progress: 29


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
if eval_ta1 (formula2) then false else true = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
if match (eval_help (formula2)) with
| True -> true
| False -> false then false else true = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case match (eval_help (formula2)) with
| True -> true
| False -> false(rank:8.)
=================================================
Progress: 30


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = match (eval_help (formula2)) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
if match (eval_help (formula2)) with
| True -> true
| False -> false then false else true = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false

4 goal(s) more...

0 conjecture(s) more...
>>> case match (eval_help (formula2)) with
| True -> true
| False -> false(rank : 8.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true
Inductive1 : formula1 = Not (formula2)
Case1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false

5 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 31


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true
Inductive1 : formula1 = Not (formula2)
Case1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false

5 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true
Inductive1 : formula1 = Not (formula2)
Case1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false

5 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case match (eval_help (formula2)) with
| True -> true
| False -> false
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case match (eval_help (formula2)) with
| True -> true
| False -> false
validate generalize_common_subterm_goal
Lemma List
forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
End of Lemma List


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true
Inductive1 : formula1 = Not (formula2)
Case1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false

5 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
End of Lemma List


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true
Inductive1 : formula1 = Not (formula2)
Case1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false

5 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 32


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true
Inductive1 : formula1 = Not (formula2)
Case1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false

5 goal(s) more...

0 conjecture(s) more...
>>> assert forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false(rank : 0.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

---------------------------------------
forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro formula1(rank:5.)
=================================================
Progress: 33


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = eval (formula1)
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true
Inductive1 : formula1 = Not (formula2)
Case1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true
---------------------------------------
false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false

5 goal(s) more...

0 conjecture(s) more...
>>> assert forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false(rank : 0.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

---------------------------------------
forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction formula1(rank:11.)
=================================================
Progress: 34


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

---------------------------------------
forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
>>> intro formula1(rank : 5.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
---------------------------------------
match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 35


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
---------------------------------------
match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : match (eval_help (formula1)) with
| True -> true
| False -> false = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma List
forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
End of Lemma List


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : match (eval_help (formula1)) with
| True -> true
| False -> false = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 36


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : match (eval_help (formula1)) with
| True -> true
| False -> false = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false(rank : 0.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

---------------------------------------
forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro formula1(rank:7.)
=================================================
Progress: 37


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

---------------------------------------
forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

2 conjecture(s) more...
>>> intro formula1(rank : 7.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
---------------------------------------
match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 38


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
---------------------------------------
match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false
formula1 : formula
Cond1 : match (eval_help (formula1)) with
| True -> true
| False -> false = true
---------------------------------------
false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
=================================================
Progress: 39


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

---------------------------------------
forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false

0 goal(s) more...

1 conjecture(s) more...
>>> induction formula1(rank : 11.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
Base1 : formula1 = True
---------------------------------------
match (eval_help (True)) with
| True -> true
| False -> false = true -> false = match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> eval_ta1 (True)
| False -> false

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 40


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
Base1 : formula1 = True
---------------------------------------
match (eval_help (True)) with
| True -> true
| False -> false = true -> false = match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> eval_ta1 (True)
| False -> false

6 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
Base1 : formula1 = False
---------------------------------------
match (eval_help (False)) with
| True -> true
| False -> false = true -> false = match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> eval_ta1 (False)
| False -> false

5 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 41


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
Base1 : formula1 = False
---------------------------------------
match (eval_help (False)) with
| True -> true
| False -> false = true -> false = match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> eval_ta1 (False)
| False -> false

5 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
match (eval_help (Not (formula2))) with
| True -> true
| False -> false = true -> false = match (match (Not (formula2)) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (Not (formula2))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 42


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
match (eval_help (Not (formula2))) with
| True -> true
| False -> false = true -> false = match (match (Not (formula2)) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (Not (formula2))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false = true -> false = match (match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 43


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
---------------------------------------
match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false = true -> false = match (match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false = true
---------------------------------------
false = match (match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))(rank:15.)
=================================================
Progress: 44


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
---------------------------------------
false = match (match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

1 conjecture(s) more...
>>> case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))(rank : 15.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
---------------------------------------
false = if eval_ta1 (formula2) then false else true

10 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case eval_ta1 (formula2)(rank:16.)
rewrite Cond1 in goal at 0(rank:23.)
=================================================
Progress: 45


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false = true
---------------------------------------
false = match (match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

1 conjecture(s) more...
>>> case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))(rank : 15.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
---------------------------------------
false = if eval_ta1 (formula2) then false else true

10 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case eval_ta1 (formula2)(rank:16.)
=================================================
Progress: 46


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
---------------------------------------
false = if eval_ta1 (formula2) then false else true

10 goal(s) more...

1 conjecture(s) more...
>>> case eval_ta1 (formula2)(rank : 16.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : true = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : false = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = true
---------------------------------------
false = false

11 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 47


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : true = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : false = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = true
---------------------------------------
false = false

11 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> false
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = false
---------------------------------------
false = true

10 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:15.)
=================================================
Progress: 48


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> false
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = false
---------------------------------------
false = true

10 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 15.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> false
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = false
---------------------------------------
eval_ta1 (formula2) = true

10 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))
case eval_ta1 (formula2)
reflexivity
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
previous tactics
simpl in goal
intro Cond1
case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))
case eval_ta1 (formula2)
reflexivity
Lemma List
forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
End of Lemma List


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> false
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = false
---------------------------------------
eval_ta1 (formula2) = true

10 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 49


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> false
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = false
---------------------------------------
eval_ta1 (formula2) = true

10 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true(rank : 0.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true

---------------------------------------
forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction formula1(rank:13.)
=================================================
Progress: 50


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true

---------------------------------------
forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction formula1(rank : 13.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = True
---------------------------------------
true = true->match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))))) = True->eval_ta1 (True) = false -> eval_ta1 (True) = true

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 51


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = True
---------------------------------------
true = true->match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))))) = True->eval_ta1 (True) = false -> eval_ta1 (True) = true

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
---------------------------------------
true = true->match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))))) = True->eval_ta1 (False) = false -> eval_ta1 (False) = true

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 52


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
---------------------------------------
true = true->match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))))) = True->eval_ta1 (False) = false -> eval_ta1 (False) = true

5 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
---------------------------------------
true = true->False = True->false = false -> false = true

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 53


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
---------------------------------------
true = true->False = True->false = false -> false = true

5 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
---------------------------------------
False = True->false = false -> false = true

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 54


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
---------------------------------------
False = True->false = false -> false = true

5 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
Cond2 : False = True
---------------------------------------
false = false -> false = true

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:12.)
=================================================
Progress: 55


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
Cond2 : False = True
---------------------------------------
false = false -> false = true

5 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 12.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
Cond2 : False = True
Cond3 : false = false
---------------------------------------
false = true

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 56


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
---------------------------------------
false = if eval_ta1 (formula2) then false else true

10 goal(s) more...

1 conjecture(s) more...
>>> case eval_ta1 (formula2)(rank : 16.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = true
---------------------------------------
false = false

11 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 57


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = true
---------------------------------------
false = false

11 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> false
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = false
---------------------------------------
false = true

10 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:15.)
=================================================
Progress: 58


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> false
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = false
---------------------------------------
false = true

10 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 15.)


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> false
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = false
---------------------------------------
eval_ta1 (formula2) = true

10 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))
case eval_ta1 (formula2)
reflexivity
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
previous tactics
simpl in goal
intro Cond1
case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))
case eval_ta1 (formula2)
reflexivity
Lemma List
forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
End of Lemma List


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> false
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = false
---------------------------------------
eval_ta1 (formula2) = true

10 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 59


1st goal of : forall (formula1:formula), match (eval_help (formula1)) with
| True -> true
| False -> false = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : match (eval_help (formula2)) with
| True -> true
| False -> false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> false
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = false
---------------------------------------
eval_ta1 (formula2) = true

10 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true(rank : 0.)


1st goal of : forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true

---------------------------------------
forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction formula1(rank:13.)
=================================================
Progress: 60


1st goal of : forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true

---------------------------------------
forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction formula1(rank : 13.)


1st goal of : forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = True
---------------------------------------
match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> true
| False -> false = true->match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))))) = True->eval_ta1 (True) = false -> eval_ta1 (True) = true

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 61


1st goal of : forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = True
---------------------------------------
match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> true
| False -> false = true->match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))))) = True->eval_ta1 (True) = false -> eval_ta1 (True) = true

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
---------------------------------------
match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> true
| False -> false = true->match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))))) = True->eval_ta1 (False) = false -> eval_ta1 (False) = true

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 62


1st goal of : forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
---------------------------------------
match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> true
| False -> false = true->match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))))) = True->eval_ta1 (False) = false -> eval_ta1 (False) = true

5 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
---------------------------------------
true = true->False = True->false = false -> false = true

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 63


1st goal of : forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
---------------------------------------
true = true->False = True->false = false -> false = true

5 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
---------------------------------------
False = True->false = false -> false = true

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 64


1st goal of : forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
---------------------------------------
False = True->false = false -> false = true

5 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
Cond2 : False = True
---------------------------------------
false = false -> false = true

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:12.)
=================================================
Progress: 65


1st goal of : forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
Cond2 : False = True
---------------------------------------
false = false -> false = true

5 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 12.)


1st goal of : forall (formula1:formula), match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> true
| False -> false = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
Cond2 : False = True
Cond3 : false = false
---------------------------------------
false = true

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 66


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
---------------------------------------
false = match (match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))) with
| True -> eval_ta1 (Not (formula2))
| False -> false

4 goal(s) more...

2 conjecture(s) more...
>>> case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))(rank : 17.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
---------------------------------------
false = if eval_ta1 (formula2) then false else true

10 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case eval_ta1 (formula2)(rank:18.)
rewrite Cond1 in goal at 0(rank:25.)
=================================================
Progress: 67


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
---------------------------------------
false = if eval_ta1 (formula2) then false else true

10 goal(s) more...

2 conjecture(s) more...
>>> case eval_ta1 (formula2)(rank : 18.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : true = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : false = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = true
---------------------------------------
false = false

11 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 68


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : true = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> true
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : false = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = true
---------------------------------------
false = false

11 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> false
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = false
---------------------------------------
false = true

10 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:17.)
=================================================
Progress: 69


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> false
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = false
---------------------------------------
false = true

10 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 17.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : false = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> false
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
Case2 : eval_ta1 (formula2) = false
---------------------------------------
eval_ta1 (formula2) = true

10 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))
case eval_ta1 (formula2)
reflexivity
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
previous tactics
simpl in goal
intro Cond1
case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))
case eval_ta1 (formula2)
reflexivity
=================================================
Progress: 70


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
---------------------------------------
false = if eval_ta1 (formula2) then false else true

10 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 23.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
---------------------------------------
false = true

10 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))
rewrite Cond1 in goal at 0
previous tactics
simpl in goal
intro Cond1
case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))
validate generalize_common_subterm_goal
Lemma List
forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
End of Lemma List


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
---------------------------------------
false = if eval_ta1 (formula2) then false else true

10 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 71


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
---------------------------------------
false = if eval_ta1 (formula2) then false else true

10 goal(s) more...

1 conjecture(s) more...
>>> assert forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true(rank : 0.)


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true

---------------------------------------
forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro formula1(rank:7.)
=================================================
Progress: 72


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true

---------------------------------------
forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro formula1(rank : 7.)


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
---------------------------------------
if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 73


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
---------------------------------------
if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
Cond1 : if eval_ta1 (formula1) then false else true = true
---------------------------------------
match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 74


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
Cond1 : if eval_ta1 (formula1) then false else true = true
---------------------------------------
match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
Cond1 : if eval_ta1 (formula1) then false else true = true
Cond2 : match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True
---------------------------------------
false = if eval_ta1 (formula1) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case eval_ta1 (formula1)(rank:8.)
rewrite Cond1 in goal at 0(rank:15.)
=================================================
Progress: 75


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
Cond1 : if eval_ta1 (formula1) then false else true = true
Cond2 : match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True
---------------------------------------
false = if eval_ta1 (formula1) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> case eval_ta1 (formula1)(rank : 8.)


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
Cond1 : false = true
Cond2 : match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True
Case1 : eval_ta1 (formula1) = true
---------------------------------------
false = false

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 76


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
Cond1 : false = true
Cond2 : match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True
Case1 : eval_ta1 (formula1) = true
---------------------------------------
false = false

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
Cond1 : true = true
Cond2 : match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True
Case1 : eval_ta1 (formula1) = false
---------------------------------------
false = true

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:7.)
=================================================
Progress: 77


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
Cond1 : true = true
Cond2 : match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True
Case1 : eval_ta1 (formula1) = false
---------------------------------------
false = true

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 7.)


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
Cond1 : true = true
Cond2 : match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True
Case1 : eval_ta1 (formula1) = false
---------------------------------------
eval_ta1 (formula1) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma List
forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
End of Lemma List


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
Cond1 : true = true
Cond2 : match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True
Case1 : eval_ta1 (formula1) = false
---------------------------------------
eval_ta1 (formula1) = true

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 78


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
Cond1 : true = true
Cond2 : match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True
Case1 : eval_ta1 (formula1) = false
---------------------------------------
eval_ta1 (formula1) = true

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true(rank : 0.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true

---------------------------------------
forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction formula1(rank:15.)
=================================================
Progress: 79


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
Cond1 : if eval_ta1 (formula1) then false else true = true
Cond2 : match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True
---------------------------------------
false = if eval_ta1 (formula1) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 15.)


1st goal of : forall (formula1:formula), if eval_ta1 (formula1) then false else true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True -> false = if eval_ta1 (formula1) then false else true
formula1 : formula
Cond1 : if eval_ta1 (formula1) then false else true = true
Cond2 : match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True
---------------------------------------
false = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 80


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true

---------------------------------------
forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction formula1(rank : 15.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = True
---------------------------------------
true = true->match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))))) = True->eval_ta1 (True) = false -> eval_ta1 (True) = true

6 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 81


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = True
---------------------------------------
true = true->match (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (True) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (True)))))) = True->eval_ta1 (True) = false -> eval_ta1 (True) = true

6 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
---------------------------------------
true = true->match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))))) = True->eval_ta1 (False) = false -> eval_ta1 (False) = true

5 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 82


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
---------------------------------------
true = true->match (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (False) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (False)))))) = True->eval_ta1 (False) = false -> eval_ta1 (False) = true

5 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
---------------------------------------
true = true->False = True->false = false -> false = true

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 83


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
---------------------------------------
true = true->False = True->false = false -> false = true

5 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
---------------------------------------
False = True->false = false -> false = true

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 84


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
---------------------------------------
False = True->false = false -> false = true

5 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
Cond2 : False = True
---------------------------------------
false = false -> false = true

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 85


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
Cond2 : False = True
---------------------------------------
false = false -> false = true

5 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (formula1:formula), true = true->match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))))) = True->eval_ta1 (formula1) = false -> eval_ta1 (formula1) = true
formula1 : formula
Base1 : formula1 = False
Cond1 : true = true
Cond2 : False = True
Cond3 : false = false
---------------------------------------
false = true

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 86


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
---------------------------------------
false = if eval_ta1 (formula2) then false else true

10 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 25.)


1st goal of : forall (formula1:formula), eval_ta1 (formula1) = true -> false = match (match (formula1) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula1)))) with
| True -> eval_ta1 (formula1)
| False -> false
formula1 : formula
formula2 : formula
IH1 : eval_ta1 (formula2) = true -> false = match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> eval_ta1 (formula2)
| False -> false
Inductive1 : formula1 = Not (formula2)
Cond1 : if eval_ta1 (formula2) then false else true = true
Case1 : match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))))) = True
---------------------------------------
false = true

10 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))
rewrite Cond1 in goal at 0
previous tactics
simpl in goal
intro Cond1
case match (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2)))) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (match (formula2) with
| True -> False
| False -> True
| _ -> eval_help (Not (eval_help (formula2))))))
validate generalize_common_subterm_goal
File "_none_", lines 65-67, characters 2-18:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Not _|AndAlso (_, _)|OrElse (_, _)|Imply (_, _)|Equal (_, _))
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
