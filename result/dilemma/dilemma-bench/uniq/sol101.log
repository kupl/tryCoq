Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:int list), uniq_ta1 (lst) = uniq (lst)(rank : 0)


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)

---------------------------------------
forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 2


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)

---------------------------------------
forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)

---------------------------------------
forall (int_list1:int list), uniq_ta1 (int_list1) = fold_left (aux) ((Nil)) (int_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:4)
=================================================
Progress: 3


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)

---------------------------------------
forall (int_list1:int list), uniq_ta1 (int_list1) = fold_left (aux) ((Nil)) (int_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction int_list1(rank : 4)


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
uniq_ta1 ((Nil)) = fold_left (aux) ((Nil)) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 4


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
uniq_ta1 ((Nil)) = fold_left (aux) ((Nil)) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = fold_left (aux) ((Nil)) (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
uniq_ta1 ((int1::int_list2)) = fold_left (aux) ((Nil)) ((int1::int_list2))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 5


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = fold_left (aux) ((Nil)) (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
uniq_ta1 ((int1::int_list2)) = fold_left (aux) ((Nil)) ((int1::int_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = fold_left (aux) ((Nil)) (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (uniq_ta1 (int_list2))) = fold_left (aux) ((int1::(Nil))) (int_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:3)
=================================================
Progress: 6


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = fold_left (aux) ((Nil)) (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (uniq_ta1 (int_list2))) = fold_left (aux) ((int1::(Nil))) (int_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 3)


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = fold_left (aux) ((Nil)) (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (fold_left (aux) ((Nil)) (int_list2))) = fold_left (aux) ((int1::(Nil))) (int_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
New Env

;;
Lemma List
forall (aux:a list -> a -> a list) (int1:int) (int_list2:int list), (int1::remove_elem_ta1 (int1) (fold_left (aux) ((Nil)) (int_list2))) = fold_left (aux) ((int1::(Nil))) (int_list2)
End of Lemma List


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = fold_left (aux) ((Nil)) (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (fold_left (aux) ((Nil)) (int_list2))) = fold_left (aux) ((int1::(Nil))) (int_list2)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 7


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = fold_left (aux) ((Nil)) (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (fold_left (aux) ((Nil)) (int_list2))) = fold_left (aux) ((int1::(Nil))) (int_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (aux:a list -> a -> a list) (int1:int) (int_list2:int list), (int1::remove_elem_ta1 (int1) (fold_left (aux) ((Nil)) (int_list2))) = fold_left (aux) ((int1::(Nil))) (int_list2)(rank : 0)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)

---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:6)
=================================================
Progress: 8


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)

---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction int_list1(rank : 6)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) ((Nil)))) = fold_left (a list->a->a list1) ((int1::(Nil))) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 9


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) ((Nil)))) = fold_left (a list->a->a list1) ((int1::(Nil))) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list2))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) ((int2::int_list2)))) = fold_left (a list->a->a list1) ((int1::(Nil))) ((int2::int_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 10


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list2))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) ((int2::int_list2)))) = fold_left (a list->a->a list1) ((int1::(Nil))) ((int2::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list2))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list2))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro a list->a->a list1(rank:5)
intro int1(rank:5)
=================================================
Progress: 11


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list2))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list2))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro a list->a->a list1(rank : 5)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list2))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
a list->a->a list1 : a list -> a -> a list
---------------------------------------
forall (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list2))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro int1(rank:5)
=================================================
Progress: 12


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list2))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list2))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro int1(rank : 5)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list2))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list2))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
New Env

;;
Lemma List
forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list2:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list2))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list2)
End of Lemma List


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list2))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list2))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 13


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list2))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list2))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list2:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list2))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list2)(rank : 0)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)

---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:8)
=================================================
Progress: 14


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list2))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
a list->a->a list1 : a list -> a -> a list
---------------------------------------
forall (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list2))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro int1(rank : 5)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list1))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) ((Nil)) (int_list2))) = fold_left (a list->a->a list1) ((int1::(Nil))) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
a list->a->a list1 : a list -> a -> a list
int1 : int
---------------------------------------
(int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list2))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro a list->a->a list1
intro int1
=================================================
Progress: 15


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)

---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction int_list1(rank : 8)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) ((Nil)))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 16


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) ((Nil)))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro a list->a->a list1(rank:8)
intro int1(rank:8)
intro int2(rank:8)
=================================================
Progress: 17


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
>>> intro a list->a->a list1(rank : 8)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
a list->a->a list1 : a list -> a -> a list
---------------------------------------
forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro int1(rank:8)
intro int2(rank:8)
=================================================
Progress: 18


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
>>> intro int1(rank : 8)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
int1 : int
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro int2(rank:8)
=================================================
Progress: 19


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
>>> intro int2(rank : 8)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
int2 : int
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int2
New Env

;;
Lemma List
forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)
End of Lemma List


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
int2 : int
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 20


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
int2 : int
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int1:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)(rank : 0)


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

---------------------------------------
forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro int1(rank:9)
intro int2(rank:9)
=================================================
Progress: 21


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
a list->a->a list1 : a list -> a -> a list
---------------------------------------
forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
>>> intro int1(rank : 8)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
a list->a->a list1 : a list -> a -> a list
int1 : int
---------------------------------------
forall (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro int2(rank:8)
=================================================
Progress: 22


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
a list->a->a list1 : a list -> a -> a list
---------------------------------------
forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
>>> intro int2(rank : 8)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
a list->a->a list1 : a list -> a -> a list
int2 : int
---------------------------------------
forall (int1:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro a list->a->a list1
intro int2
=================================================
Progress: 23


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
int1 : int
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
>>> intro int2(rank : 8)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
int1 : int
int2 : int
---------------------------------------
forall (a list->a->a list1:a list -> a -> a list), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
intro int2
=================================================
Progress: 24


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
a list->a->a list1 : a list -> a -> a list
int1 : int
---------------------------------------
forall (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
>>> intro int2(rank : 8)


1st goal of : forall (a list->a->a list1:a list -> a -> a list) (int1:int) (int2:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (fold_left (a list->a->a list1) (a list->a->a list1 ((Nil)) (int2)) (int_list1))) = fold_left (a list->a->a list1) (a list->a->a list1 ((int1::(Nil))) (int2)) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
a list->a->a list1 : a list -> a -> a list
int1 : int
int2 : int
---------------------------------------
(int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro a list->a->a list1
intro int1
intro int2
=================================================
Progress: 25


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

---------------------------------------
forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

3 conjecture(s) more...
>>> intro int1(rank : 9)


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)
int1 : int
---------------------------------------
forall (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int2(rank:9)
=================================================
Progress: 26


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

---------------------------------------
forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

3 conjecture(s) more...
>>> intro int2(rank : 9)


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)
int2 : int
---------------------------------------
forall (int1:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
New Env

;;
Lemma List
forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)
End of Lemma List


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)
int2 : int
---------------------------------------
forall (int1:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 27


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)
int2 : int
---------------------------------------
forall (int1:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)(rank : 0)


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

---------------------------------------
forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro int1(rank:11)
intro int2(rank:11)
=================================================
Progress: 28


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)
int1 : int
---------------------------------------
forall (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

3 conjecture(s) more...
>>> intro int2(rank : 9)


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)
int1 : int
int2 : int
---------------------------------------
(int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 29


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

---------------------------------------
forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

4 conjecture(s) more...
>>> intro int1(rank : 11)


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)
int1 : int
---------------------------------------
forall (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro int2(rank:11)
=================================================
Progress: 30


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

---------------------------------------
forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

4 conjecture(s) more...
>>> intro int2(rank : 11)


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)
int2 : int
---------------------------------------
forall (int1:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 31


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)
int1 : int
---------------------------------------
forall (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

4 conjecture(s) more...
>>> intro int2(rank : 11)


1st goal of : forall (int1:int) (int2:int), (int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)
int1 : int
int2 : int
---------------------------------------
(int1::remove_elem_ta1 (int1) (a list->a->a list1 ((Nil)) (int2))) = a list->a->a list1 ((int1::(Nil))) (int2)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 211, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 26, characters 12-79
