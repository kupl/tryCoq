Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:int list), uniq_ta1 (lst) = uniq (lst)(rank : 0)


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)

---------------------------------------
forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 2


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)

---------------------------------------
forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)

---------------------------------------
forall (int_list1:int list), uniq_ta1 (int_list1) = reverse (checkdrop (int_list1) ((Nil))) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:4)
=================================================
Progress: 3


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)

---------------------------------------
forall (int_list1:int list), uniq_ta1 (int_list1) = reverse (checkdrop (int_list1) ((Nil))) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
>>> induction int_list1(rank : 4)


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
uniq_ta1 ((Nil)) = reverse (checkdrop ((Nil)) ((Nil))) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 4


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
uniq_ta1 ((Nil)) = reverse (checkdrop ((Nil)) ((Nil))) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = reverse (checkdrop (int_list2) ((Nil))) ((Nil))
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
uniq_ta1 ((int1::int_list2)) = reverse (checkdrop ((int1::int_list2)) ((Nil))) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 5


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = reverse (checkdrop (int_list2) ((Nil))) ((Nil))
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
uniq_ta1 ((int1::int_list2)) = reverse (checkdrop ((int1::int_list2)) ((Nil))) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = reverse (checkdrop (int_list2) ((Nil))) ((Nil))
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (uniq_ta1 (int_list2))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:3)
=================================================
Progress: 6


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = reverse (checkdrop (int_list2) ((Nil))) ((Nil))
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (uniq_ta1 (int_list2))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 3)


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = reverse (checkdrop (int_list2) ((Nil))) ((Nil))
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
New Env

;;
Lemma List
forall (int1:int) (int_list2:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
End of Lemma List


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = reverse (checkdrop (int_list2) ((Nil))) ((Nil))
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 7


1st goal of : forall (int_list1:int list), uniq_ta1 (int_list1) = uniq (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : uniq_ta1 (int_list2) = reverse (checkdrop (int_list2) ((Nil))) ((Nil))
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (int1:int) (int_list2:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))(rank : 0)


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

---------------------------------------
forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:6)
=================================================
Progress: 8


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

---------------------------------------
forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction int_list1(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil)))) = reverse (checkdrop ((Nil)) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 9


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil)))) = reverse (checkdrop ((Nil)) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop ((int2::int_list2)) ((Nil))) ((Nil)))) = reverse (checkdrop ((int2::int_list2)) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 10


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop ((int2::int_list2)) ((Nil))) ((Nil)))) = reverse (checkdrop ((int2::int_list2)) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((int2::(Nil)))) ((Nil)))) = reverse (if if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int2::(int1::(Nil))))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro int1(rank:5)
=================================================
Progress: 11


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((int2::(Nil)))) ((Nil)))) = reverse (if if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int2::(int1::(Nil))))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro int1(rank : 5)


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((int2::(Nil)))) ((Nil)))) = reverse (if if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int2::(int1::(Nil))))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil))(rank:6)
=================================================
Progress: 12


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((int2::(Nil)))) ((Nil)))) = reverse (if if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int2::(int1::(Nil))))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> case if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil))(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((int2::(Nil)))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 1(rank:22)
rewrite <- IH1 in goal at 2(rank:14)
=================================================
Progress: 13


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((int2::(Nil)))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 14


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::if a_eq (int1) (int2) then remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) else (int2::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case a_eq (int1) (int2)(rank:7)
=================================================
Progress: 15


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::if a_eq (int1) (int2) then remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) else (int2::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))

1 goal(s) more...

1 conjecture(s) more...
>>> case a_eq (int1) (int2)(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case2 : a_eq (int1) (int2) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 16


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case2 : a_eq (int1) (int2) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case2 : a_eq (int1) (int2) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
case if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil))
rewrite <- IH1 in goal at 0
simpl in goal
case a_eq (int1) (int2)
rewrite IH1 in goal at 0
New Env

;;
Lemma List
forall (int1:int) (int2:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
End of Lemma List


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case2 : a_eq (int1) (int2) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 17


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case2 : a_eq (int1) (int2) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (int1:int) (int2:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))(rank : 0)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

---------------------------------------
forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro int1(rank:7)
=================================================
Progress: 18


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

---------------------------------------
forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro int1(rank : 7)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
---------------------------------------
forall (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro int2(rank:7)
=================================================
Progress: 19


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
---------------------------------------
forall (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro int2(rank : 7)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 20


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7)
=================================================
Progress: 21


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:8)
=================================================
Progress: 22


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction int_list1(rank : 8)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil))))) = reverse (checkdrop ((Nil)) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 23


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil))))) = reverse (checkdrop ((Nil)) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((int3::int_list2)) ((Nil))) ((Nil))))) = reverse (checkdrop ((int3::int_list2)) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 24


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((int3::int_list2)) ((Nil))) ((Nil))))) = reverse (checkdrop ((int3::int_list2)) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (if if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int3::(int1::(Nil))))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil))(rank:8)
rewrite <- Cond2 in goal at 0(rank:23)
=================================================
Progress: 25


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (if if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int3::(int1::(Nil))))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> case if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil))(rank : 8)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case1 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8)
=================================================
Progress: 26


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case1 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case1 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil))
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (int1:int) (int2:int) (int3:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))
End of Lemma List


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case1 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 27


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case1 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (int1:int) (int2:int) (int3:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))(rank : 0)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

---------------------------------------
forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int1(rank:9)
=================================================
Progress: 28


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

---------------------------------------
forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int1(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
---------------------------------------
forall (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int2(rank:9)
=================================================
Progress: 29


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
---------------------------------------
forall (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int2(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
---------------------------------------
forall (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int3(rank:9)
=================================================
Progress: 30


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
---------------------------------------
forall (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int3(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 31


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9)
=================================================
Progress: 32


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
---------------------------------------
forall (int_list1:int list), if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:9)
=================================================
Progress: 33


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
---------------------------------------
forall (int_list1:int list), if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:10)
=================================================
Progress: 34


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction int_list1(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 35


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil)))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (if a_eq (int2) (int3) then remove_elem_ta1 (int2) ((Nil)) else (int3::remove_elem_ta1 (int2) ((Nil))))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case a_eq (int2) (int3)(rank:11)
=================================================
Progress: 36


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (if a_eq (int2) (int3) then remove_elem_ta1 (int2) ((Nil)) else (int3::remove_elem_ta1 (int2) ((Nil))))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> case a_eq (int2) (int3)(rank : 11)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 37


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
---------------------------------------
(int1::if a_eq (int1) (int3) then remove_elem_ta1 (int1) ((Nil)) else (int3::remove_elem_ta1 (int1) ((Nil)))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case a_eq (int1) (int3)(rank:11)
=================================================
Progress: 38


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
---------------------------------------
(int1::if a_eq (int1) (int3) then remove_elem_ta1 (int1) ((Nil)) else (int3::remove_elem_ta1 (int1) ((Nil)))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> case a_eq (int1) (int3)(rank : 11)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 39


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = false
---------------------------------------
(int1::(int3::(Nil))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case a_eq (int2) (int3)
reflexivity
case a_eq (int1) (int3)
reflexivity
New Env

;;
Lemma List
forall (int1:int) (int3:int), if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true->a_eq (int1) (int3) = false -> (int1::(int3::(Nil))) = (int1::(Nil))
End of Lemma List


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = false
---------------------------------------
(int1::(int3::(Nil))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 40


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = false
---------------------------------------
(int1::(int3::(Nil))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (int1:int) (int3:int), if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true->a_eq (int1) (int3) = false -> (int1::(int3::(Nil))) = (int1::(Nil))(rank : 0)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

---------------------------------------
forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro int1(rank:11)
=================================================
Progress: 41


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

---------------------------------------
forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro int1(rank : 11)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
---------------------------------------
forall (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro int2(rank:11)
=================================================
Progress: 42


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
---------------------------------------
forall (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro int2(rank : 11)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
---------------------------------------
if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 43


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
---------------------------------------
if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11)
=================================================
Progress: 44


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = false
---------------------------------------
(int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
New Env

;;
Lemma List
forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
End of Lemma List


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = false
---------------------------------------
(int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 45


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = false
---------------------------------------
(int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))(rank : 0)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

---------------------------------------
forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro int1(rank:13)
=================================================
Progress: 46


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

---------------------------------------
forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro int1(rank : 13)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
---------------------------------------
forall (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro int2(rank:13)
=================================================
Progress: 47


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
---------------------------------------
forall (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro int2(rank : 13)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
---------------------------------------
if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 48


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
---------------------------------------
if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13)
=================================================
Progress: 49


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond2(rank : 13)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = false
---------------------------------------
(int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 50


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((int2::(Nil)))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
case if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil))
rewrite <- IH1 in goal at 2
New Env

;;
Lemma List
forall (int1:int) (int2:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))
End of Lemma List


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 51


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (int1:int) (int2:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))(rank : 0)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))

---------------------------------------
forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro int1(rank:7)
=================================================
Progress: 52


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))

---------------------------------------
forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro int1(rank : 7)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
---------------------------------------
forall (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro int2(rank:7)
=================================================
Progress: 53


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
---------------------------------------
forall (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro int2(rank : 7)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
int2 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 54


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
int2 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:8)
=================================================
Progress: 55


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction int_list1(rank : 8)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop ((Nil)) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 56


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop ((Nil)) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::if a_eq (int1) (int2) then remove_elem_ta1 (int1) ((Nil)) else (int2::remove_elem_ta1 (int1) ((Nil)))) = (int1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case a_eq (int1) (int2)(rank:9)
=================================================
Progress: 57


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::if a_eq (int1) (int2) then remove_elem_ta1 (int1) ((Nil)) else (int2::remove_elem_ta1 (int1) ((Nil)))) = (int1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> case a_eq (int1) (int2)(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int1) (int2) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 58


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int1) (int2) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int1) (int2) = false
---------------------------------------
(int1::(int2::(Nil))) = (int1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case a_eq (int1) (int2)
reflexivity
New Env

;;
Lemma List
forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
End of Lemma List


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int1) (int2) = false
---------------------------------------
(int1::(int2::(Nil))) = (int1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 59


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((int2::(Nil)))) ((Nil)))) = (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int1) (int2) = false
---------------------------------------
(int1::(int2::(Nil))) = (int1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))(rank : 0)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

---------------------------------------
forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int1(rank:9)
=================================================
Progress: 60


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

---------------------------------------
forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int1(rank : 9)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
---------------------------------------
forall (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int2(rank:9)
=================================================
Progress: 61


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
---------------------------------------
forall (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int2(rank : 9)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
---------------------------------------
if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 62


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
---------------------------------------
if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9)
=================================================
Progress: 63


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9)


1st goal of : forall (int1:int) (int2:int), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = false
---------------------------------------
(int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 64


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((int2::(Nil)))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
case if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil))
rewrite <- IH1 in goal at 1
New Env

;;
Lemma List
forall (int1:int) (int2:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
End of Lemma List


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 65


1st goal of : forall (int1:int) (int_list1:int list), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), (int1::remove_elem_ta1 (int1) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (int1:int) (int2:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))(rank : 0)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

---------------------------------------
forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 66


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

---------------------------------------
forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

---------------------------------------
forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::if a_eq (int1) (int2) then remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) else (int2::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro int1(rank:7)
=================================================
Progress: 67


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

---------------------------------------
forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::if a_eq (int1) (int2) then remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) else (int2::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro int1(rank : 7)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
---------------------------------------
forall (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::if a_eq (int1) (int2) then remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) else (int2::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro int2(rank:7)
=================================================
Progress: 68


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
---------------------------------------
forall (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::if a_eq (int1) (int2) then remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) else (int2::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro int2(rank : 7)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::if a_eq (int1) (int2) then remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) else (int2::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 69


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::if a_eq (int1) (int2) then remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) else (int2::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), (int1::if a_eq (int1) (int2) then remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) else (int2::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case a_eq (int1) (int2)(rank:8)
=================================================
Progress: 70


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), (int1::if a_eq (int1) (int2) then remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))) else (int2::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> case a_eq (int1) (int2)(rank : 8)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:9)
=================================================
Progress: 71


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> induction int_list1(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil))))) = reverse (checkdrop ((Nil)) ((int1::(Nil)))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 72


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil))))) = reverse (checkdrop ((Nil)) ((int1::(Nil)))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((int3::int_list2)) ((Nil))) ((Nil))))) = reverse (checkdrop ((int3::int_list2)) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 73


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((int3::int_list2)) ((Nil))) ((Nil))))) = reverse (checkdrop ((int3::int_list2)) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (if if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int3::(int1::(Nil))))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil))(rank:9)
rewrite <- Case1 in goal at 0(rank:24)
=================================================
Progress: 74


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (if if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int3::(int1::(Nil))))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> case if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil))(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case2 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:9)
=================================================
Progress: 75


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case2 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case2 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil))
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (int1:int) (int2:int) (int3:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))
End of Lemma List


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case2 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 76


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case2 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (int1:int) (int2:int) (int3:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))(rank : 0)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

---------------------------------------
forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int1(rank:9)
=================================================
Progress: 77


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

---------------------------------------
forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int1(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
---------------------------------------
forall (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int2(rank:9)
=================================================
Progress: 78


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
---------------------------------------
forall (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int2(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
---------------------------------------
forall (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int3(rank:9)
=================================================
Progress: 79


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
---------------------------------------
forall (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int3(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 80


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9)
=================================================
Progress: 81


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
---------------------------------------
forall (int_list1:int list), if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:9)
=================================================
Progress: 82


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
---------------------------------------
forall (int_list1:int list), if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:10)
=================================================
Progress: 83


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction int_list1(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 84


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil)))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (if a_eq (int2) (int3) then remove_elem_ta1 (int2) ((Nil)) else (int3::remove_elem_ta1 (int2) ((Nil))))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case a_eq (int2) (int3)(rank:11)
=================================================
Progress: 85


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (if a_eq (int2) (int3) then remove_elem_ta1 (int2) ((Nil)) else (int3::remove_elem_ta1 (int2) ((Nil))))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> case a_eq (int2) (int3)(rank : 11)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 86


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
---------------------------------------
(int1::if a_eq (int1) (int3) then remove_elem_ta1 (int1) ((Nil)) else (int3::remove_elem_ta1 (int1) ((Nil)))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case a_eq (int1) (int3)(rank:11)
=================================================
Progress: 87


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
---------------------------------------
(int1::if a_eq (int1) (int3) then remove_elem_ta1 (int1) ((Nil)) else (int3::remove_elem_ta1 (int1) ((Nil)))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> case a_eq (int1) (int3)(rank : 11)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 88


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = false
---------------------------------------
(int1::(int3::(Nil))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case a_eq (int2) (int3)
reflexivity
case a_eq (int1) (int3)
reflexivity
=================================================
Progress: 89


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (if if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int3::(int1::(Nil))))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond2 in goal at 0(rank : 23)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (if if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int3::(int1::(Nil))))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil))(rank:8)
=================================================
Progress: 90


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (if if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int3::(int1::(Nil))))) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> case if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil))(rank : 8)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case1 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8)
=================================================
Progress: 91


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case1 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case1 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond2 in goal at 0
case if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil))
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (int1:int) (int2:int) (int3:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))
End of Lemma List


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case1 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 92


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case1 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (int1:int) (int2:int) (int3:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))(rank : 0)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

---------------------------------------
forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int1(rank:9)
=================================================
Progress: 93


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

---------------------------------------
forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int1(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
---------------------------------------
forall (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int2(rank:9)
=================================================
Progress: 94


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
---------------------------------------
forall (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int2(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
---------------------------------------
forall (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int3(rank:9)
=================================================
Progress: 95


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
---------------------------------------
forall (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int3(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 96


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9)
=================================================
Progress: 97


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
---------------------------------------
forall (int_list1:int list), if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:9)
=================================================
Progress: 98


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
---------------------------------------
forall (int_list1:int list), if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:10)
=================================================
Progress: 99


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction int_list1(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 100


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil)))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (if a_eq (int2) (int3) then remove_elem_ta1 (int2) ((Nil)) else (int3::remove_elem_ta1 (int2) ((Nil))))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case a_eq (int2) (int3)(rank:11)
=================================================
Progress: 101


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (if a_eq (int2) (int3) then remove_elem_ta1 (int2) ((Nil)) else (int3::remove_elem_ta1 (int2) ((Nil))))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> case a_eq (int2) (int3)(rank : 11)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 102


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
---------------------------------------
(int1::if a_eq (int1) (int3) then remove_elem_ta1 (int1) ((Nil)) else (int3::remove_elem_ta1 (int1) ((Nil)))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case a_eq (int1) (int3)(rank:11)
=================================================
Progress: 103


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
---------------------------------------
(int1::if a_eq (int1) (int3) then remove_elem_ta1 (int1) ((Nil)) else (int3::remove_elem_ta1 (int1) ((Nil)))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> case a_eq (int1) (int3)(rank : 11)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 104


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = false
---------------------------------------
(int1::(int3::(Nil))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case a_eq (int2) (int3)
reflexivity
case a_eq (int1) (int3)
reflexivity
New Env

;;
Lemma List
forall (int1:int) (int3:int), a_eq (int1) (int3) = false -> (int1::(int3::(Nil))) = (int1::(Nil))
End of Lemma List


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = false
---------------------------------------
(int1::(int3::(Nil))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 105


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = false
---------------------------------------
(int1::(int3::(Nil))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (int1:int) (int3:int), a_eq (int1) (int3) = false -> (int1::(int3::(Nil))) = (int1::(Nil))(rank : 0)


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

---------------------------------------
forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro int1(rank:11)
=================================================
Progress: 106


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

---------------------------------------
forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro int1(rank : 11)


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
---------------------------------------
forall (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro int2(rank:11)
=================================================
Progress: 107


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
---------------------------------------
forall (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro int2(rank : 11)


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
---------------------------------------
a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 108


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
---------------------------------------
a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : a_eq (int1) (int2) = false
---------------------------------------
(int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
New Env

;;
Lemma List
forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
End of Lemma List


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : a_eq (int1) (int2) = false
---------------------------------------
(int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 109


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : a_eq (int1) (int2) = false
---------------------------------------
(int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))(rank : 0)


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

---------------------------------------
forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro int1(rank:13)
=================================================
Progress: 110


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

---------------------------------------
forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro int1(rank : 13)


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
---------------------------------------
forall (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro int2(rank:13)
=================================================
Progress: 111


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
---------------------------------------
forall (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro int2(rank : 13)


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
---------------------------------------
a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 112


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
---------------------------------------
a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (int1:int) (int2:int), a_eq (int1) (int2) = false -> (int1::(int2::(Nil))) = (int1::(Nil))
int1 : int
int2 : int
Cond1 : a_eq (int1) (int2) = false
---------------------------------------
(int1::(int2::(Nil))) = (int1::(Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 113


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (if if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int3) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int3::(int1::(Nil))))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 24)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (if if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int3::(int1::(Nil))))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil))(rank:9)
=================================================
Progress: 114


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (if if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) then checkdrop (int_list2) ((int1::(Nil))) else checkdrop (int_list2) ((int3::(int1::(Nil))))) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> case if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil))(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case2 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:9)
=================================================
Progress: 115


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case2 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case2 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Case1 in goal at 0
case if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil))
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (int1:int) (int2:int) (int3:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))
End of Lemma List


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case2 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 116


1st goal of : forall (int1:int) (int2:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) ((int2::remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))) = reverse (checkdrop (int_list1) ((int1::(Nil)))) ((Nil))
int1 : int
int2 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Case1 : a_eq (int1) (int2) = true
int_list1 : int list
int3 : int
int_list2 : int list
IH1 : (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil))))) = reverse (checkdrop (int_list2) ((int1::(Nil)))) ((Nil))
Inductive1 : int_list1 = (int3::int_list2)
Case2 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (int1:int) (int2:int) (int3:int) (int_list2:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list2) ((Nil))) ((Nil)))))(rank : 0)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

---------------------------------------
forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int1(rank:9)
=================================================
Progress: 117


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

---------------------------------------
forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int1(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
---------------------------------------
forall (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int2(rank:9)
=================================================
Progress: 118


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
---------------------------------------
forall (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int2(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
---------------------------------------
forall (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int3(rank:9)
=================================================
Progress: 119


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
---------------------------------------
forall (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro int3(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 120


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
---------------------------------------
forall (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9)
=================================================
Progress: 121


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
---------------------------------------
forall (int_list1:int list), if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:9)
=================================================
Progress: 122


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
---------------------------------------
forall (int_list1:int list), if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 9)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:10)
=================================================
Progress: 123


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
---------------------------------------
forall (int_list1:int list), (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction int_list1(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 124


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop ((Nil)) ((Nil))) ((Nil)))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (if a_eq (int2) (int3) then remove_elem_ta1 (int2) ((Nil)) else (int3::remove_elem_ta1 (int2) ((Nil))))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case a_eq (int2) (int3)(rank:11)
=================================================
Progress: 125


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
(int1::remove_elem_ta1 (int1) (if a_eq (int2) (int3) then remove_elem_ta1 (int2) ((Nil)) else (int3::remove_elem_ta1 (int2) ((Nil))))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> case a_eq (int2) (int3)(rank : 11)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 126


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
---------------------------------------
(int1::if a_eq (int1) (int3) then remove_elem_ta1 (int1) ((Nil)) else (int3::remove_elem_ta1 (int1) ((Nil)))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case a_eq (int1) (int3)(rank:11)
=================================================
Progress: 127


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
---------------------------------------
(int1::if a_eq (int1) (int3) then remove_elem_ta1 (int1) ((Nil)) else (int3::remove_elem_ta1 (int1) ((Nil)))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> case a_eq (int1) (int3)(rank : 11)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 128


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = true
---------------------------------------
(int1::(Nil)) = (int1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (int1:int) (int2:int) (int3:int) (int_list1:int list), if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true->a_eq (int1) (int2) = true->if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true -> (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((int3::(Nil)))) ((Nil))))) = (int1::remove_elem_ta1 (int1) (remove_elem_ta1 (int2) (reverse (checkdrop (int_list1) ((Nil))) ((Nil)))))
int1 : int
int2 : int
int3 : int
Cond1 : if match (int2, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then true else gtl (int2) ((Nil)) = true
Cond2 : a_eq (int1) (int2) = true
Cond3 : if match (int3, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then a_eq (int1) (int2) else gtl (int3) ((Nil)) = true
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : a_eq (int2) (int3) = false
Case2 : a_eq (int1) (int3) = false
---------------------------------------
(int1::(int3::(Nil))) = (int1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case a_eq (int2) (int3)
reflexivity
case a_eq (int1) (int3)
reflexivity
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 211, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 26, characters 12-79
