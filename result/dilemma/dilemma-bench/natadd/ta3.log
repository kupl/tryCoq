Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (a:nat) (b:nat), natadd_ta1 (a) (b) = natadd (a) (b)(rank : 0)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat1(rank:4)
=================================================
Progress: 2


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat1(rank : 4)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), natadd_ta1 (ZERO) (nat2) = natadd (ZERO) (nat2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 3


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), natadd_ta1 (ZERO) (nat2) = natadd (ZERO) (nat2)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), natadd_ta1 (SUCC (nat3)) (nat2) = natadd (SUCC (nat3)) (nat2)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 4


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), natadd_ta1 (SUCC (nat3)) (nat2) = natadd (SUCC (nat3)) (nat2)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd_ta1 (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
intro nat2(rank:3)
rewrite IH1 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:11)
=================================================
Progress: 5


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd_ta1 (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
>>> intro nat2(rank : 3)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (natadd_ta1 (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:11)
=================================================
Progress: 6


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd_ta1 (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 2(rank:3)
=================================================
Progress: 7


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 3)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
intro nat2(rank:3)
=================================================
Progress: 8


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
>>> intro nat2(rank : 3)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (natadd (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 2
intro nat2
Lemma : forall (nat2:nat) (nat3:nat), SUCC (natadd (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))
Model : nat2: ZERO, nat3: ZERO
Model : nat2: ZERO, nat3: SUCC (ZERO)
Model : nat2: ZERO, nat3: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
type nat = ZERO | SUCC of nat
let rec natadd n1 n2 =
match (n1) with
| ZERO  -> n2
| SUCC n -> natadd (n) (SUCC (n2))
prop list:
SUCC (natadd (ZERO) (ZERO)) = natadd_ta1 (ZERO) (SUCC (ZERO))
SUCC (natadd (SUCC (ZERO)) (ZERO)) = natadd_ta1 (SUCC (ZERO)) (SUCC (ZERO))
SUCC (natadd (SUCC (ZERO)) (ZERO)) = natadd_ta1 (SUCC (ZERO)) (SUCC (ZERO))
Simplifying took 0.000040 seconds
Result : true
advanced_generalize done


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (natadd (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 9


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (natadd (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat2:nat) (nat3:nat), SUCC (natadd (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))(rank : 0)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6)
=================================================
Progress: 10


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), SUCC (natadd (ZERO) (nat1)) = natadd_ta1 (ZERO) (SUCC (nat1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 11


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), SUCC (natadd (ZERO) (nat1)) = natadd_ta1 (ZERO) (SUCC (nat1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd (nat3) (nat1)) = natadd_ta1 (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (natadd (SUCC (nat3)) (nat1)) = natadd_ta1 (SUCC (nat3)) (SUCC (nat1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 12


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd (nat3) (nat1)) = natadd_ta1 (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (natadd (SUCC (nat3)) (nat1)) = natadd_ta1 (SUCC (nat3)) (SUCC (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd (nat3) (nat1)) = natadd_ta1 (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (natadd (nat3) (SUCC (nat1))) = SUCC (natadd_ta1 (nat3) (SUCC (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat1(rank:5)
rewrite IH1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:21)
=================================================
Progress: 13


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd (nat3) (nat1)) = natadd_ta1 (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (natadd (nat3) (SUCC (nat1))) = SUCC (natadd_ta1 (nat3) (SUCC (nat1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd (nat3) (nat1)) = natadd_ta1 (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
---------------------------------------
SUCC (natadd (nat3) (SUCC (nat1))) = SUCC (natadd_ta1 (nat3) (SUCC (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:21)
=================================================
Progress: 14


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd_ta1 (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd_ta1 (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Lemma : forall (nat2:nat) (nat3:nat), SUCC (natadd_ta1 (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))
Model : nat2: ZERO, nat3: ZERO
Model : nat2: ZERO, nat3: ZERO
Model : nat2: ZERO, nat3: ZERO
Substituting variables...
Simplifying conditions and property...
type nat = ZERO | SUCC of nat
let rec natadd n1 n2 =
match (n1) with
| ZERO  -> n2
| SUCC n -> natadd (n) (SUCC (n2))
prop list:
SUCC (natadd_ta1 (ZERO) (ZERO)) = natadd_ta1 (ZERO) (SUCC (ZERO))
SUCC (natadd_ta1 (ZERO) (ZERO)) = natadd_ta1 (ZERO) (SUCC (ZERO))
SUCC (natadd_ta1 (ZERO) (ZERO)) = natadd_ta1 (ZERO) (SUCC (ZERO))
Simplifying took 0.000024 seconds
Result : true
advanced_generalize done


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd_ta1 (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 15


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd_ta1 (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat2:nat) (nat3:nat), SUCC (natadd_ta1 (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))(rank : 0)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6)
=================================================
Progress: 16


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), SUCC (natadd_ta1 (ZERO) (nat1)) = natadd_ta1 (ZERO) (SUCC (nat1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 17


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), SUCC (natadd_ta1 (ZERO) (nat1)) = natadd_ta1 (ZERO) (SUCC (nat1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd_ta1 (nat3) (nat1)) = natadd_ta1 (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (natadd_ta1 (SUCC (nat3)) (nat1)) = natadd_ta1 (SUCC (nat3)) (SUCC (nat1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 18


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd_ta1 (nat3) (nat1)) = natadd_ta1 (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (natadd_ta1 (SUCC (nat3)) (nat1)) = natadd_ta1 (SUCC (nat3)) (SUCC (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd_ta1 (nat3) (nat1)) = natadd_ta1 (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (natadd_ta1 (nat3) (nat1))) = SUCC (natadd_ta1 (nat3) (SUCC (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat1(rank:5)
rewrite IH1 in goal at 1(rank:13)
rewrite IH1 in goal at 2(rank:21)
rewrite <- IH1 in goal at 0(rank:13)
rewrite IH1 in goal at 0(rank:21)
=================================================
Progress: 19


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd_ta1 (nat3) (nat1)) = natadd_ta1 (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (natadd_ta1 (nat3) (nat1))) = SUCC (natadd_ta1 (nat3) (SUCC (nat1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd_ta1 (nat3) (nat1)) = natadd_ta1 (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
---------------------------------------
SUCC (SUCC (natadd_ta1 (nat3) (nat1))) = SUCC (natadd_ta1 (nat3) (SUCC (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 1(rank:13)
rewrite IH1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:13)
rewrite IH1 in goal at 2(rank:21)
=================================================
Progress: 20


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (natadd_ta1 (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (natadd (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
rewrite IH1 in goal at 0
Lemma : forall (nat2:nat) (nat3:nat), SUCC (natadd (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))
Model : nat2: ZERO, nat3: ZERO
Model : nat2: ZERO, nat3: ZERO
Model : nat2: ZERO, nat3: ZERO
Substituting variables...
Simplifying conditions and property...
type nat = ZERO | SUCC of nat
let rec natadd n1 n2 =
match (n1) with
| ZERO  -> n2
| SUCC n -> natadd (n) (SUCC (n2))
prop list:
SUCC (natadd (ZERO) (ZERO)) = natadd (ZERO) (SUCC (ZERO))
SUCC (natadd (ZERO) (ZERO)) = natadd (ZERO) (SUCC (ZERO))
SUCC (natadd (ZERO) (ZERO)) = natadd (ZERO) (SUCC (ZERO))
Simplifying took 0.000024 seconds
Result : true
advanced_generalize done


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (natadd (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 21


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (natadd (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat2:nat) (nat3:nat), SUCC (natadd (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))(rank : 0)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd (nat2) (SUCC (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6)
=================================================
Progress: 22


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd (nat2) (SUCC (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd (nat2) (SUCC (nat1))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), SUCC (natadd (ZERO) (nat1)) = natadd (ZERO) (SUCC (nat1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 23


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd (nat2) (SUCC (nat1))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), SUCC (natadd (ZERO) (nat1)) = natadd (ZERO) (SUCC (nat1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd (nat3) (nat1)) = natadd (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (natadd (SUCC (nat3)) (nat1)) = natadd (SUCC (nat3)) (SUCC (nat1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 24


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd (nat3) (nat1)) = natadd (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (natadd (SUCC (nat3)) (nat1)) = natadd (SUCC (nat3)) (SUCC (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd (nat3) (nat1)) = natadd (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (natadd (nat3) (SUCC (nat1))) = natadd (nat3) (SUCC (SUCC (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat1(rank:5)
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 1(rank:21)
=================================================
Progress: 25


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd (nat3) (nat1)) = natadd (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (natadd (nat3) (SUCC (nat1))) = natadd (nat3) (SUCC (SUCC (nat1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd (nat2) (nat1)) = natadd (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd (nat3) (nat1)) = natadd (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
---------------------------------------
SUCC (natadd (nat3) (SUCC (nat1))) = natadd (nat3) (SUCC (SUCC (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
=================================================
Progress: 26


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (natadd_ta1 (nat3) (nat2)) = natadd (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (natadd_ta1 (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
rewrite <- IH1 in goal at 0
Lemma : forall (nat2:nat) (nat3:nat), SUCC (natadd_ta1 (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))
Model : nat2: ZERO, nat3: ZERO
Model : nat2: SUCC (SUCC (ZERO)), nat3: SUCC (ZERO)
Model : nat2: ZERO, nat3: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
type nat = ZERO | SUCC of nat
let rec natadd n1 n2 =
match (n1) with
| ZERO  -> n2
| SUCC n -> natadd (n) (SUCC (n2))
prop list:
SUCC (natadd_ta1 (ZERO) (ZERO)) = natadd_ta1 (ZERO) (SUCC (ZERO))
SUCC (natadd_ta1 (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) = natadd_ta1 (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO))))
SUCC (natadd_ta1 (SUCC (ZERO)) (ZERO)) = natadd_ta1 (SUCC (ZERO)) (SUCC (ZERO))
Simplifying took 0.000047 seconds
Result : true
advanced_generalize done
=================================================
Progress: 27


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd_ta1 (nat3) (nat1)) = natadd_ta1 (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (natadd_ta1 (nat3) (nat1))) = SUCC (natadd_ta1 (nat3) (SUCC (nat1)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd_ta1 (nat3) (nat1)) = natadd_ta1 (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (natadd_ta1 (nat3) (SUCC (nat1))) = SUCC (natadd_ta1 (nat3) (SUCC (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 28


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (natadd_ta1 (nat3) (nat1)) = natadd_ta1 (nat3) (SUCC (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (natadd_ta1 (nat3) (SUCC (nat1))) = SUCC (natadd_ta1 (nat3) (SUCC (nat1)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd_ta1 (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 7
Tactic List : 4
intro nat2(rank:3)
rewrite IH1 in goal at 1(rank:19)
rewrite lemma3 in goal at 0(rank:11)
rewrite <- lemma3 in goal at 0(rank:11)
=================================================
Progress: 29


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd_ta1 (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
>>> intro nat2(rank : 3)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (natadd_ta1 (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:11)
rewrite IH1 in goal at 1(rank:19)
rewrite <- lemma3 in goal at 0(rank:11)
=================================================
Progress: 30


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (natadd_ta1 (nat3) (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 11)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), natadd_ta1 (nat3) (SUCC (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0)
=================================================
Progress: 31


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), natadd_ta1 (nat3) (nat2) = natadd (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), natadd_ta1 (nat3) (SUCC (nat2)) = natadd_ta1 (nat3) (SUCC (nat2))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


No conjecture
Proof Success
Proof
assert forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
induction nat1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
assert forall (nat1:nat) (nat2:nat), SUCC (natadd_ta1 (nat2) (nat1)) = natadd_ta1 (nat2) (SUCC (nat1))
induction nat2
reflexivity
simpl in goal
rewrite IH1 in goal at 1
reflexivity
rewrite lemma3 in goal at 0
reflexivity
Qed
