Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (a:nat) (b:nat), natadd_ta1 (a) (b) = natadd (a) (b)(rank : 0)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction nat1(rank:12)
induction nat2(rank:12)
=================================================
Progress: 2


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat1(rank : 12)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), natadd_ta1 (ZERO) (nat2) = natadd (ZERO) (nat2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 3


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), natadd_ta1 (ZERO) (nat2) = natadd (ZERO) (nat2)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), nat2 = natadd (ZERO) (nat2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat2(rank:5)
=================================================
Progress: 4


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), nat2 = natadd (ZERO) (nat2)

1 goal(s) more...

0 conjecture(s) more...
>>> induction nat2(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
ZERO = natadd (ZERO) (ZERO)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 5


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
ZERO = natadd (ZERO) (ZERO)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : nat3 = natadd (ZERO) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (nat3) = natadd (ZERO) (SUCC (nat3))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 6


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : nat3 = natadd (ZERO) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (nat3) = natadd (ZERO) (SUCC (nat3))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (nat1:nat) (nat2:nat), natadd_ta1 (nat1) (nat2) = natadd (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : nat3 = natadd (ZERO) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (nat3) = natadd (SUCC (ZERO)) (nat3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Fatal error: exception Not_found
Raised at Stdlib__List.find in file "list.ml", line 232, characters 10-25
Called from Dilemma__Finder.get_induction_var in file "lib/finder.ml", lines 993-998, characters 8-18
Called from Dilemma__Finder.advanced_generalize in file "lib/finder.ml", line 1029, characters 27-46
Called from Dilemma__Finder.make_lemmas_by_advanced_generalize in file "lib/finder.ml", line 1048, characters 16-37
Called from Dilemma__Engine.progress in file "lib/engine.ml", line 143, characters 23-81
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 211, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 26, characters 12-79
