Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (l:lambda), check_ta1 (l) = check (l)(rank : 0.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda1) ((Nil)) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:5.)
=================================================
Progress: 3


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda1) ((Nil)) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction lambda1(rank : 5.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check_ta1 (V (string1)) ((Nil)) = check (V (string1))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 4


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check_ta1 (V (string1)) ((Nil)) = check (V (string1))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (P (string1) (lambda2)) ((Nil)) = check (P (string1) (lambda2))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 5


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (P (string1) (lambda2)) ((Nil)) = check (P (string1) (lambda2))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = if list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) then true else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))(rank:5.)
=================================================
Progress: 6


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = if list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) then true else false

1 goal(s) more...

0 conjecture(s) more...
>>> case list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))(rank : 5.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = true

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:5.)
=================================================
Progress: 7


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = true

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 5.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("hzd")) (("miu"::(Nil))) = list_eq (deleteAll (listStation (V ("hzd"))) ("miu")) ((Nil))
Prop: sub_check_ta1 (C (V ("vro")) (C (V ("upt")) (C (P ("gzz") (V ("nfy"))) (V ("pap"))))) (("qwu"::(Nil))) = list_eq (deleteAll (listStation (C (V ("vro")) (C (V ("upt")) (C (P ("gzz") (V ("nfy"))) (V ("pap")))))) ("qwu")) ((Nil))
Prop: sub_check_ta1 (V ("pqw")) (("hjx"::(Nil))) = list_eq (deleteAll (listStation (V ("pqw"))) ("hjx")) ((Nil))
previous tactics
simpl in goal
case list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
parent
(string1::(Nil))
lower
Cons(_, Nil())
upper
sub_check_ta1(lambda2, _)
remove upper
Nil()
remove lower
Nil()
remove upper
Cons(string1, Nil())
remove lower
Cons(string1, Nil())
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("szc")) (("jeu"::(Nil))) = true
Prop: sub_check_ta1 (V ("hrh")) (("rwc"::(Nil))) = true
Prop: sub_check_ta1 (V ("rny")) (("sdz"::(Nil))) = true
Lemma List
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = true

2 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 8


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = true

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:5.)
intro string1(rank:5.)
induction lambda1(rank:15.)
=================================================
Progress: 9


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:5.)
intro string1(rank:5.)
induction lambda1(rank:15.)
=================================================
Progress: 10


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro lambda1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:5.)
=================================================
Progress: 11


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7.)
=================================================
Progress: 12


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro lambda1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:5.)
=================================================
Progress: 13


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7.)
=================================================
Progress: 14


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 15


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 16


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:5.)
=================================================
Progress: 17


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:5.)
=================================================
Progress: 18


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("nzg")) (("nlx"::(Nil))) = list_eq (deleteAll (listStation (V ("nzg"))) ("nlx")) ((Nil))
Prop: sub_check_ta1 (V ("nys")) (("aal"::(Nil))) = list_eq (deleteAll (listStation (V ("nys"))) ("aal")) ((Nil))
Prop: sub_check_ta1 (V ("syk")) (("whb"::(Nil))) = list_eq (deleteAll (listStation (V ("syk"))) ("whb")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("lca")) (("nrw"::(Nil))) = true
Prop: sub_check_ta1 (P ("ide") (P ("vyd") (P ("lni") (V ("idc"))))) (("ybh"::(Nil))) = true
Prop: sub_check_ta1 (V ("vjq")) (("abh"::(Nil))) = true
Lemma List
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 19


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:7.)
intro string1(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 20


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:7.)
intro string1(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 21


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("vby") (P ("amd") (C (V ("fvl")) (C (P ("efl") (V ("bvi"))) (V ("gqb")))))) (("xqy"::(Nil))) = true
Prop: sub_check_ta1 (C (V ("uay")) (V ("ltc"))) (("wiz"::(Nil))) = true
Prop: sub_check_ta1 (V ("rai")) (("ofm"::(Nil))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("shu")) (("azb"::(Nil))) = list_eq (deleteAll (listStation (V ("shu"))) ("azb")) ((Nil))
Prop: sub_check_ta1 (V ("jnn")) (("efd"::(Nil))) = list_eq (deleteAll (listStation (V ("jnn"))) ("efd")) ((Nil))
Prop: sub_check_ta1 (C (V ("fnp")) (C (C (V ("fru")) (V ("ilx"))) (C (V ("jza")) (V ("bjk"))))) (("pwn"::(Nil))) = list_eq (deleteAll (listStation (C (V ("fnp")) (C (C (V ("fru")) (V ("ilx"))) (C (V ("jza")) (V ("bjk")))))) ("pwn")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 22


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:7.)
intro string1(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 23


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:7.)
intro string1(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 24


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 25


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 26


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 27


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 28


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 29


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 30


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 31


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 32


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 33


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 34


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 35


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 36


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 37


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 38


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 39


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 40


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:8.)
rewrite <- Cond1 in goal at 2(rank:15.)
rewrite <- Cond1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 1(rank:23.)
=================================================
Progress: 41


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:8.)
case string_eq (string2) (string1)(rank:8.)
rewrite Cond1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 42


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:7.)
=================================================
Progress: 43


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:7.)
=================================================
Progress: 44


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:7.)
=================================================
Progress: 45


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:7.)
=================================================
Progress: 46


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("mwv")) (("usq"::(Nil))) = list_eq (deleteAll (listStation (V ("mwv"))) ("usq")) ((Nil))
Prop: sub_check_ta1 (V ("iau")) (("zcy"::(Nil))) = list_eq (deleteAll (listStation (V ("iau"))) ("zcy")) ((Nil))
Prop: sub_check_ta1 (C (V ("rrz")) (V ("bhx"))) (("aqb"::(Nil))) = list_eq (deleteAll (listStation (C (V ("rrz")) (V ("bhx")))) ("aqb")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("kxj")) (("dpw"::(Nil))) = true
Prop: sub_check_ta1 (V ("fnu")) (("ctz"::(Nil))) = true
Prop: sub_check_ta1 (V ("ugx")) (("tmp"::(Nil))) = true
=================================================
Progress: 47


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("utj")) (("pld"::(Nil))) = true
Prop: sub_check_ta1 (P ("xtf") (P ("smk") (C (V ("vqt")) (C (V ("can")) (V ("mfl")))))) (("lpx"::(Nil))) = true
Prop: sub_check_ta1 (P ("vyi") (V ("nbi"))) (("sdm"::(Nil))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("bhr")) (("hfv"::(Nil))) = list_eq (deleteAll (listStation (V ("bhr"))) ("hfv")) ((Nil))
Prop: sub_check_ta1 (V ("azh")) (("cox"::(Nil))) = list_eq (deleteAll (listStation (V ("azh"))) ("cox")) ((Nil))
Prop: sub_check_ta1 (P ("ryx") (V ("msp"))) (("eui"::(Nil))) = list_eq (deleteAll (listStation (P ("ryx") (V ("msp")))) ("eui")) ((Nil))
=================================================
Progress: 48


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("pdi")) (("slr"::(Nil))) = true
Prop: sub_check_ta1 (C (V ("vyc")) (C (V ("rub")) (C (V ("juh")) (V ("atr"))))) (("ovj"::(Nil))) = true
Prop: sub_check_ta1 (V ("lou")) (("jeu"::(Nil))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("lca")) (("xlg"::(Nil))) = list_eq (deleteAll (listStation (V ("lca"))) ("xlg")) ((Nil))
Prop: sub_check_ta1 (V ("osu")) (("qez"::(Nil))) = list_eq (deleteAll (listStation (V ("osu"))) ("qez")) ((Nil))
Prop: sub_check_ta1 (P ("tdo") (C (C (V ("bxz")) (V ("cgq"))) (V ("fxn")))) (("xlx"::(Nil))) = list_eq (deleteAll (listStation (P ("tdo") (C (C (V ("bxz")) (V ("cgq"))) (V ("fxn"))))) ("xlx")) ((Nil))
=================================================
Progress: 49


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("btl")) (("ojv"::(Nil))) = list_eq (deleteAll (listStation (V ("btl"))) ("ojv")) ((Nil))
Prop: sub_check_ta1 (P ("mmk") (V ("yfi"))) (("rdd"::(Nil))) = list_eq (deleteAll (listStation (P ("mmk") (V ("yfi")))) ("rdd")) ((Nil))
Prop: sub_check_ta1 (C (V ("ttn")) (V ("ezv"))) (("ama"::(Nil))) = list_eq (deleteAll (listStation (C (V ("ttn")) (V ("ezv")))) ("ama")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("vcz")) (("ryg"::(Nil))) = true
Prop: sub_check_ta1 (V ("vse")) (("fzp"::(Nil))) = true
Prop: sub_check_ta1 (V ("mbe")) (("qbu"::(Nil))) = true
=================================================
Progress: 50


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 51


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 52


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:8.)
=================================================
Progress: 53


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string2) (string1)(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:8.)
=================================================
Progress: 54


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:8.)
rewrite <- Case1 in goal at 1(rank:8.)
rewrite Case1 in goal at 0(rank:24.)
rewrite Case1 in goal at 1(rank:24.)
rewrite Case1 in goal at 2(rank:24.)
rewrite Case1 in goal at 3(rank:24.)
rewrite <- Case1 in goal at 2(rank:8.)
case string_eq (string2) (string1)(rank:9.)
rewrite <- Cond1 in goal at 0(rank:16.)
rewrite Cond1 in goal at 0(rank:16.)
=================================================
Progress: 55


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:8.)
rewrite Case1 in goal at 2(rank:24.)
case string_eq (string1) (string2)(rank:9.)
rewrite Case1 in goal at 0(rank:24.)
rewrite Case1 in goal at 1(rank:24.)
=================================================
Progress: 56


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8.)
=================================================
Progress: 57


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8.)
=================================================
Progress: 58


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:8.)
=================================================
Progress: 59


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8.)
=================================================
Progress: 60


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 61


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 9
Tactic List : 3
case string_eq (string2) (string1)(rank:8.)
rewrite Cond1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 0(rank:15.)
=================================================
Progress: 62


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 63


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 64


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 5
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 65


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 66


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:6.)
=================================================
Progress: 67


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ruq")) (("zpo"::("qqb"::(Nil)))) = true
Prop: sub_check_ta1 (V ("hyy")) (("deh"::("fno"::(Nil)))) = true
Prop: sub_check_ta1 (V ("phe")) (("wcd"::("fjz"::(Nil)))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string2::(string1::(Nil)))
lower
Cons(_, Cons(string1, Nil()))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string1, Nil())
remove lower
Cons(string1, Nil())
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
parent
deleteAll (listStation (lambda2)) (string2)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(_, string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string2)
remove lower
deleteAll(listStation(lambda2), string2)
remove upper
deleteAll(deleteAll(listStation(lambda3), string3), string2)
remove lower
deleteAll(deleteAll(listStation(lambda3), string3), string2)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string4), string3), string2)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string4), string3), string2)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("sav")) (("zcq"::("qed"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("sav"))) ("zcq")) ("qed")) ((Nil))
Prop: sub_check_ta1 (V ("lut")) (("rlh"::("vqy"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("lut"))) ("rlh")) ("vqy")) ((Nil))
Prop: sub_check_ta1 (V ("wah")) (("mca"::("kwk"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("wah"))) ("mca")) ("kwk")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 68


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:7.)
intro string1(rank:7.)
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 69


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:7.)
intro string1(rank:7.)
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 70


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 71


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 72


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 73


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 74


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 75


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 76


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:7.)
=================================================
Progress: 77


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 78


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:7.)
=================================================
Progress: 79


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 80


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 81


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 82


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:7.)
=================================================
Progress: 83


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:7.)
=================================================
Progress: 84


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ind")) (("awy"::("hab"::(Nil)))) = true
Prop: sub_check_ta1 (V ("sdf")) (("vid"::("rke"::(Nil)))) = true
Prop: sub_check_ta1 (V ("tme")) (("ill"::("xkq"::(Nil)))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("apb")) (V ("rxt"))) (("zke"::("upp"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (C (V ("apb")) (V ("rxt")))) ("zke")) ("upp")) ((Nil))
Prop: sub_check_ta1 (V ("ozf")) (("cfb"::("ged"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("ozf"))) ("cfb")) ("ged")) ((Nil))
Prop: sub_check_ta1 (V ("kqo")) (("keq"::("unt"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("kqo"))) ("keq")) ("unt")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 85


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:9.)
intro string1(rank:9.)
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 86


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:9.)
intro string1(rank:9.)
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 87


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("xua")) (("uyj"::("lbm"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("xua"))) ("uyj")) ("lbm")) ((Nil))
Prop: sub_check_ta1 (C (V ("jlf")) (C (C (V ("kfc")) (V ("czm"))) (V ("nyn")))) (("lby"::("myz"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (C (V ("jlf")) (C (C (V ("kfc")) (V ("czm"))) (V ("nyn"))))) ("lby")) ("myz")) ((Nil))
Prop: sub_check_ta1 (V ("bed")) (("oci"::("lts"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("bed"))) ("oci")) ("lts")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("roo")) (("tan"::("qiq"::(Nil)))) = true
Prop: sub_check_ta1 (V ("nzj")) (("hvf"::("zah"::(Nil)))) = true
Prop: sub_check_ta1 (V ("twd")) (("qwf"::("him"::(Nil)))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 88


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:9.)
intro string1(rank:9.)
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 89


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:9.)
intro string1(rank:9.)
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 90


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 91


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 92


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 93


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 94


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 95


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 96


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 97


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 98


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 99


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 100


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 101


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 102


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 103


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 104


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 105


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 106


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 107


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 108


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 109


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 110


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 111


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 112


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 113


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 114


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 115


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 116


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 117


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 118


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 119


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 120


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 121


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 122


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 123


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 124


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 125


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 126


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 127


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:10.)
case string_eq (string2) (string1)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 128


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:10.)
case string_eq (string2) (string1)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 129


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 130


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 131


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 132


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:10.)
case string_eq (string3) (string2)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 133


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 134


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 135


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 136


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 137


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 138


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:10.)
case string_eq (string3) (string2)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 139


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 140


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 141


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 142


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 143


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 144


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("gfr") (V ("czw"))) (("kma"::("xqi"::(Nil)))) = true
Prop: sub_check_ta1 (V ("gce")) (("tdz"::("zdz"::(Nil)))) = true
Prop: sub_check_ta1 (C (V ("rep")) (V ("hfc"))) (("ssr"::("gug"::(Nil)))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("tky") (C (C (V ("jpo")) (V ("thj"))) (C (V ("yhy")) (V ("eqt"))))) (("zop"::("cuy"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P ("tky") (C (C (V ("jpo")) (V ("thj"))) (C (V ("yhy")) (V ("eqt")))))) ("zop")) ("cuy")) ((Nil))
Prop: sub_check_ta1 (V ("whc")) (("tjh"::("vyg"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("whc"))) ("tjh")) ("vyg")) ((Nil))
Prop: sub_check_ta1 (V ("unx")) (("hzy"::("jqs"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("unx"))) ("hzy")) ("jqs")) ((Nil))
=================================================
Progress: 145


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("uvw")) (("hnu"::("xeh"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("uvw"))) ("hnu")) ("xeh")) ((Nil))
Prop: sub_check_ta1 (V ("amu")) (("lpl"::("cnj"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("amu"))) ("lpl")) ("cnj")) ((Nil))
Prop: sub_check_ta1 (C (V ("kgg")) (V ("ipm"))) (("hzy"::("rii"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (C (V ("kgg")) (V ("ipm")))) ("hzy")) ("rii")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("vsj")) (P ("pro") (V ("mdo")))) (("sie"::("glf"::(Nil)))) = true
Prop: sub_check_ta1 (V ("mea")) (("qlw"::("zpd"::(Nil)))) = true
Prop: sub_check_ta1 (P ("jqt") (V ("zrc"))) (("lzn"::("ira"::(Nil)))) = true
=================================================
Progress: 146


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("fgl")) (("ffh"::("puw"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("fgl"))) ("ffh")) ("puw")) ((Nil))
Prop: sub_check_ta1 (V ("zdc")) (("yrs"::("gsm"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("zdc"))) ("yrs")) ("gsm")) ((Nil))
Prop: sub_check_ta1 (P ("ykc") (V ("aqj"))) (("cqn"::("wdr"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P ("ykc") (V ("aqj")))) ("cqn")) ("wdr")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("xrp")) (("jtj"::("mzq"::(Nil)))) = true
Prop: sub_check_ta1 (V ("rgu")) (("wzi"::("ajf"::(Nil)))) = true
Prop: sub_check_ta1 (P ("idk") (V ("cyn"))) (("yco"::("jvh"::(Nil)))) = true
=================================================
Progress: 147


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("dru") (V ("sxg"))) (("iru"::("mwd"::(Nil)))) = true
Prop: sub_check_ta1 (V ("awm")) (("kst"::("hrw"::(Nil)))) = true
Prop: sub_check_ta1 (V ("ibs")) (("wzt"::("uvl"::(Nil)))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("dju")) (("ell"::("bkl"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("dju"))) ("ell")) ("bkl")) ((Nil))
Prop: sub_check_ta1 (P ("fif") (C (V ("gun")) (V ("qtz")))) (("cxe"::("iic"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P ("fif") (C (V ("gun")) (V ("qtz"))))) ("cxe")) ("iic")) ((Nil))
Prop: sub_check_ta1 (V ("bdu")) (("fxn"::("iwx"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("bdu"))) ("fxn")) ("iwx")) ((Nil))
=================================================
Progress: 148


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 149


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 150


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10.)
=================================================
Progress: 151


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string1)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10.)
=================================================
Progress: 152


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10.)
=================================================
Progress: 153


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string1)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10.)
=================================================
Progress: 154


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 155


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 156


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10.)
=================================================
Progress: 157


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10.)
=================================================
Progress: 158


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 159


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 160


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10.)
=================================================
Progress: 161


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10.)
=================================================
Progress: 162


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 163


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 164


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:10.)
rewrite <- Case1 in goal at 1(rank:10.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
rewrite Case1 in goal at 2(rank:26.)
rewrite Case1 in goal at 3(rank:26.)
rewrite <- Case1 in goal at 2(rank:10.)
case string_eq (string2) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 165


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:10.)
rewrite Case1 in goal at 2(rank:26.)
case string_eq (string1) (string2)(rank:11.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
=================================================
Progress: 166


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:10.)
rewrite <- Case1 in goal at 1(rank:10.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
rewrite Case1 in goal at 2(rank:26.)
rewrite Case1 in goal at 3(rank:26.)
rewrite <- Case1 in goal at 2(rank:10.)
case string_eq (string2) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 167


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:10.)
rewrite Case1 in goal at 2(rank:26.)
case string_eq (string1) (string2)(rank:11.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
=================================================
Progress: 168


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:10.)
rewrite <- Case1 in goal at 1(rank:10.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
rewrite Case1 in goal at 2(rank:26.)
rewrite Case1 in goal at 3(rank:26.)
rewrite <- Case1 in goal at 2(rank:10.)
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 169


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:10.)
rewrite Case1 in goal at 2(rank:26.)
case string_eq (string2) (string3)(rank:11.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
=================================================
Progress: 170


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 171


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 172


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:10.)
rewrite <- Case1 in goal at 1(rank:10.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
rewrite Case1 in goal at 2(rank:26.)
rewrite Case1 in goal at 3(rank:26.)
rewrite <- Case1 in goal at 2(rank:10.)
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 173


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:10.)
rewrite Case1 in goal at 2(rank:26.)
case string_eq (string2) (string3)(rank:11.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
=================================================
Progress: 174


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 175


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 176


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 177


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 178


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 179


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 180


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 181


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 182


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 183


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 184


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 185


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 186


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 187


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 188


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 189


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 190


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 191


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 192


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 193


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 9
Tactic List : 3
case string_eq (string2) (string1)(rank:10.)
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:17.)
=================================================
Progress: 194


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 195


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 196


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 5
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 197


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 198


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 199


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("bms")) (("xxa"::("vcp"::(Nil)))) = true
Prop: sub_check_ta1 (V ("ppu")) (("bef"::("jjd"::(Nil)))) = true
Prop: sub_check_ta1 (C (V ("hmt")) (V ("quf"))) (("gpw"::("hdv"::(Nil)))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string2::(string1::(Nil)))
lower
Cons(_, Cons(string1, Nil()))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string1, Nil())
remove lower
Cons(string1, Nil())
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
parent
deleteAll (listStation (lambda2)) (string2)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(_, string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string2)
remove lower
deleteAll(listStation(lambda2), string2)
remove upper
deleteAll(deleteAll(listStation(lambda3), string3), string2)
remove lower
deleteAll(deleteAll(listStation(lambda3), string3), string2)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string4), string3), string2)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string4), string3), string2)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("owi")) (V ("qmf"))) (("uat"::("avx"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (C (V ("owi")) (V ("qmf")))) ("uat")) ("avx")) ((Nil))
Prop: sub_check_ta1 (C (V ("riw")) (C (V ("hss")) (V ("jvd")))) (("zzi"::("umv"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (C (V ("riw")) (C (V ("hss")) (V ("jvd"))))) ("zzi")) ("umv")) ((Nil))
Prop: sub_check_ta1 (V ("vxo")) (("ceo"::("qlo"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("vxo"))) ("ceo")) ("qlo")) ((Nil))
=================================================
Progress: 200


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 201


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 9
Tactic List : 3
case string_eq (string2) (string1)(rank:10.)
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:17.)
=================================================
Progress: 202


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 203


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 204


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 5
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 205


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 206


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 207


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("yya")) (("mnk"::("ykv"::(Nil)))) = true
Prop: sub_check_ta1 (C (V ("yzu")) (V ("ghl"))) (("fkt"::("vnv"::(Nil)))) = true
Prop: sub_check_ta1 (C (C (V ("uue")) (P ("urf") (V ("bbw")))) (V ("msv"))) (("nvl"::("ssg"::(Nil)))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string2::(string1::(Nil)))
lower
Cons(_, Cons(string1, Nil()))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string1, Nil())
remove lower
Cons(string1, Nil())
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
parent
deleteAll (listStation (lambda2)) (string2)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(_, string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string2)
remove lower
deleteAll(listStation(lambda2), string2)
remove upper
deleteAll(deleteAll(listStation(lambda3), string3), string2)
remove lower
deleteAll(deleteAll(listStation(lambda3), string3), string2)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string4), string3), string2)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string4), string3), string2)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("upb")) (("nvk"::("paa"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("upb"))) ("nvk")) ("paa")) ((Nil))
Prop: sub_check_ta1 (V ("qae")) (("imo"::("jzy"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("qae"))) ("imo")) ("jzy")) ((Nil))
Prop: sub_check_ta1 (V ("nez")) (("xrw"::("dkw"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("nez"))) ("xrw")) ("dkw")) ((Nil))
=================================================
Progress: 208


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 209


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string3)(rank:10.)
case string_eq (string3) (string2)(rank:10.)
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 210


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 211


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string3)(rank:10.)
case string_eq (string3) (string1)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 212


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 213


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string3)(rank:10.)
case string_eq (string3) (string2)(rank:10.)
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 214


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 215


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string3)(rank:10.)
case string_eq (string3) (string1)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 216


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:10.)
=================================================
Progress: 217


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:10.)
=================================================
Progress: 218


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:10.)
=================================================
Progress: 219


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:10.)
=================================================
Progress: 220


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:10.)
=================================================
Progress: 221


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:10.)
=================================================
Progress: 222


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:10.)
=================================================
Progress: 223


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:10.)
=================================================
Progress: 224


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 2(rank:10.)
rewrite <- Cond1 in goal at 0(rank:18.)
case string_eq (string3) (string2)(rank:11.)
rewrite Cond1 in goal at 0(rank:18.)
rewrite Case2 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 1(rank:10.)
=================================================
Progress: 225


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:11.)
rewrite Case2 in goal at 2(rank:26.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 226


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 1(rank:10.)
rewrite <- Case2 in goal at 2(rank:10.)
case string_eq (string3) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 227


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:10.)
rewrite Case2 in goal at 2(rank:26.)
case string_eq (string2) (string3)(rank:11.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 228


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 2(rank:10.)
rewrite <- Cond1 in goal at 0(rank:18.)
case string_eq (string3) (string2)(rank:11.)
rewrite Cond1 in goal at 0(rank:18.)
rewrite Case2 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 1(rank:10.)
=================================================
Progress: 229


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:11.)
rewrite Case2 in goal at 2(rank:26.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 230


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 1(rank:10.)
rewrite <- Case2 in goal at 2(rank:10.)
case string_eq (string3) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 231


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:10.)
rewrite Case2 in goal at 2(rank:26.)
case string_eq (string2) (string3)(rank:11.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 232


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 233


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 234


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 235


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 236


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 237


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 238


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:11.)
=================================================
Progress: 239


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 240


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 241


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 242


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 243


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 244


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 245


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:11.)
=================================================
Progress: 246


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11.)
case string_eq (string3) (string1)(rank:11.)
=================================================
Progress: 247


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:11.)
=================================================
Progress: 248


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11.)
case string_eq (string3) (string1)(rank:11.)
=================================================
Progress: 249


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:11.)
=================================================
Progress: 250


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 251


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 252


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 253


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 254


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 255


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 256


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 257


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 258


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 259


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 1(rank:10.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
rewrite Case2 in goal at 2(rank:26.)
rewrite Case2 in goal at 3(rank:26.)
rewrite <- Case2 in goal at 2(rank:10.)
case string_eq (string3) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 260


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 261


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 262


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 263


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 264


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 18
Tactic List : 4
case string_eq (string3) (string2)(rank:10.)
rewrite <- Case2 in goal at 0(rank:17.)
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:17.)
=================================================
Progress: 265


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:10.)
=================================================
Progress: 266


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string3 = string2
---------------------------------------
false = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 0(rank:26.)
=================================================
Progress: 267


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 268


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case3 in goal at 0(rank:26.)
=================================================
Progress: 269


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 270


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:9.)
=================================================
Progress: 271


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string3)(rank:10.)
case string_eq (string3) (string1)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 272


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:10.)
=================================================
Progress: 273


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:10.)
=================================================
Progress: 274


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:10.)
rewrite <- Case3 in goal at 1(rank:10.)
rewrite Case3 in goal at 0(rank:26.)
rewrite Case3 in goal at 1(rank:26.)
rewrite Case3 in goal at 2(rank:26.)
rewrite Case3 in goal at 3(rank:26.)
rewrite <- Case3 in goal at 2(rank:10.)
case string_eq (string3) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 275


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:10.)
rewrite Case3 in goal at 2(rank:26.)
case string_eq (string1) (string3)(rank:11.)
rewrite Case3 in goal at 0(rank:26.)
rewrite Case3 in goal at 1(rank:26.)
=================================================
Progress: 276


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 277


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 278


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 279


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 280


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 281


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 9
Tactic List : 5
case string_eq (string3) (string1)(rank:10.)
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:17.)
rewrite <- Case2 in goal at 0(rank:17.)
rewrite <- Case3 in goal at 0(rank:17.)
=================================================
Progress: 282


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 283


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 284


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 285


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 286


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 287


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (P ("spi") (V ("uaw"))) (P ("zzz") (P ("tla") (V ("sox"))))) (("fvb"::("hyp"::("wck"::(Nil))))) = true
Prop: sub_check_ta1 (V ("iup")) (("qaj"::("jua"::("hxk"::(Nil))))) = true
Prop: sub_check_ta1 (V ("gng")) (("cua"::("lce"::("ttu"::(Nil))))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string3::(string2::(string1::(Nil))))
lower
Cons(_, Cons(string2, Cons(string1, Nil())))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
parent
deleteAll (listStation (lambda2)) (string3)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(deleteAll(_, string2), string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string3)
remove lower
deleteAll(listStation(lambda2), string3)
remove upper
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove lower
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("mmg")) (("tar"::("pbb"::("rhr"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("mmg"))) ("tar")) ("pbb")) ("rhr")) ((Nil))
Prop: sub_check_ta1 (V ("vpb")) (("kmu"::("omm"::("dlx"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("vpb"))) ("kmu")) ("omm")) ("dlx")) ((Nil))
Prop: sub_check_ta1 (V ("zya")) (("agq"::("mmp"::("wng"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("zya"))) ("agq")) ("mmp")) ("wng")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 288


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:9.)
intro string2(rank:9.)
intro string3(rank:9.)
induction lambda1(rank:19.)
intro string1(rank:9.)
=================================================
Progress: 289


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:9.)
intro string2(rank:9.)
intro string3(rank:9.)
induction lambda1(rank:19.)
intro string1(rank:9.)
=================================================
Progress: 290


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 291


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro string2(rank:9.)
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 292


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 293


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 294


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 295


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro string2(rank:9.)
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 296


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 297


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 298


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 299


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 300


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 301


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 302


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 303


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 304


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 305


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 306


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string3(rank:9.)
=================================================
Progress: 307


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 308


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 309


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string3(rank:9.)
=================================================
Progress: 310


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 311


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 312


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 313


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 314


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 315


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 316


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 317


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("zon")) (("wcj"::("xjh"::("jus"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("zon"))) ("wcj")) ("xjh")) ("jus")) ((Nil))
Prop: sub_check_ta1 (V ("peo")) (("zqb"::("fkk"::("lxu"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("peo"))) ("zqb")) ("fkk")) ("lxu")) ((Nil))
Prop: sub_check_ta1 (V ("jga")) (("eyn"::("ksc"::("bsl"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("jga"))) ("eyn")) ("ksc")) ("bsl")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 318


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 319


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 320


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("wut")) (("ghe"::("prs"::("mhj"::(Nil))))) = true
Prop: sub_check_ta1 (V ("hlo")) (("ocg"::("iiw"::("hsp"::(Nil))))) = true
Prop: sub_check_ta1 (V ("rmo")) (("mjn"::("kcy"::("hhi"::(Nil))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 321


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 322


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("uow")) (("yzy"::("pdy"::("ies"::(Nil))))) = true
Prop: sub_check_ta1 (V ("rhv")) (("pxl"::("vyr"::("gsl"::(Nil))))) = true
Prop: sub_check_ta1 (C (C (V ("ttl")) (V ("fnc"))) (V ("ahp"))) (("phd"::("vmp"::("nrp"::(Nil))))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("bvb")) (("rpp"::("bfs"::("xmr"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("bvb"))) ("rpp")) ("bfs")) ("xmr")) ((Nil))
Prop: sub_check_ta1 (V ("bpz")) (("iey"::("hxn"::("rzj"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("bpz"))) ("iey")) ("hxn")) ("rzj")) ((Nil))
Prop: sub_check_ta1 (C (V ("kfc")) (V ("lni"))) (("mns"::("pal"::("wco"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (V ("kfc")) (V ("lni")))) ("mns")) ("pal")) ("wco")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 323


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 324


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("fka")) (("wnp"::("vdz"::("rht"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("fka"))) ("wnp")) ("vdz")) ("rht")) ((Nil))
Prop: sub_check_ta1 (V ("sxg")) (("qoj"::("awr"::("bzn"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("sxg"))) ("qoj")) ("awr")) ("bzn")) ((Nil))
Prop: sub_check_ta1 (V ("fia")) (("gil"::("yls"::("bkv"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("fia"))) ("gil")) ("yls")) ("bkv")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("mja")) (V ("srn"))) (("gpd"::("hrs"::("bxa"::(Nil))))) = true
Prop: sub_check_ta1 (C (V ("cjf")) (V ("kkz"))) (("iyr"::("jev"::("ibt"::(Nil))))) = true
Prop: sub_check_ta1 (V ("yga")) (("mgq"::("unx"::("jid"::(Nil))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 325


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 326


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 327


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 1(rank:10.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
rewrite Case2 in goal at 2(rank:26.)
rewrite Case2 in goal at 3(rank:26.)
rewrite <- Case2 in goal at 2(rank:10.)
case string_eq (string3) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 328


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 329


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 330


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 331


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 332


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 18
Tactic List : 4
case string_eq (string3) (string2)(rank:10.)
rewrite <- Case2 in goal at 0(rank:17.)
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:17.)
=================================================
Progress: 333


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:10.)
=================================================
Progress: 334


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string3 = string2
---------------------------------------
false = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 0(rank:26.)
=================================================
Progress: 335


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 336


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case3 in goal at 0(rank:26.)
=================================================
Progress: 337


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 338


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:9.)
=================================================
Progress: 339


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string3)(rank:10.)
case string_eq (string3) (string1)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 340


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:10.)
=================================================
Progress: 341


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:10.)
=================================================
Progress: 342


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:10.)
rewrite <- Case3 in goal at 1(rank:10.)
rewrite Case3 in goal at 0(rank:26.)
rewrite Case3 in goal at 1(rank:26.)
rewrite Case3 in goal at 2(rank:26.)
rewrite Case3 in goal at 3(rank:26.)
rewrite <- Case3 in goal at 2(rank:10.)
case string_eq (string3) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 343


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:10.)
rewrite Case3 in goal at 2(rank:26.)
case string_eq (string1) (string3)(rank:11.)
rewrite Case3 in goal at 0(rank:26.)
rewrite Case3 in goal at 1(rank:26.)
=================================================
Progress: 344


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 345


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 346


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 347


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 348


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 349


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 9
Tactic List : 5
case string_eq (string3) (string1)(rank:10.)
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Case1 in goal at 0(rank:17.)
rewrite <- Case2 in goal at 0(rank:17.)
rewrite <- Case3 in goal at 0(rank:17.)
=================================================
Progress: 350


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 351


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 352


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 353


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:8.)
=================================================
Progress: 354


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 355


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 356


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("msa")) (("cdo"::("nob"::("mnx"::(Nil))))) = true
Prop: sub_check_ta1 (P ("ozx") (P ("pud") (V ("opo")))) (("byy"::("fki"::("xmn"::(Nil))))) = true
Prop: sub_check_ta1 (V ("koz")) (("zoa"::("aeo"::("frp"::(Nil))))) = true
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("hfy")) (("dlg"::("ykh"::("huk"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("hfy"))) ("dlg")) ("ykh")) ("huk")) ((Nil))
Prop: sub_check_ta1 (V ("ilw")) (("rqv"::("dkj"::("ody"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ilw"))) ("rqv")) ("dkj")) ("ody")) ((Nil))
Prop: sub_check_ta1 (V ("ldw")) (("yae"::("rub"::("gym"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ldw"))) ("yae")) ("rub")) ("gym")) ((Nil))
=================================================
Progress: 357


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 358


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 359


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 360


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 361


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 362


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 363


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 364


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 365


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 366


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 367


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 368


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 369


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 370


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 371


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 372


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 373


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 374


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 375


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 376


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 377


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 378


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 379


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 380


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 381


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 382


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 383


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 384


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 385


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 386


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 387


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 388


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 389


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 390


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 391


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
case string_eq (string3) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 392


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:19.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 393


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:19.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 394


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
case string_eq (string3) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 395


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 396


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 397


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 398


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 399


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 400


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 401


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 402


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 403


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 404


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 405


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 406


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 407


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 408


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 409


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 410


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 411


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 412


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 413


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 414


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 415


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 416


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 417


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
case string_eq (string3) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 418


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:19.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 419


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:19.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 420


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
case string_eq (string3) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 421


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 422


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 423


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 424


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 425


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
case string_eq (string4) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 426


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 427


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 428


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 429


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 430


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 431


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 432


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 433


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 434


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 435


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 436


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 437


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 438


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 439


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 440


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 441


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
case string_eq (string4) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 442


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 443


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 444


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 445


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 446


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 447


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 448


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 449


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 450


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 451


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
case string_eq (string4) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 452


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 453


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 454


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("vep")) (("agd"::("jue"::("ozo"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("vep"))) ("agd")) ("jue")) ("ozo")) ((Nil))
Prop: sub_check_ta1 (V ("swk")) (("kec"::("qfj"::("fxj"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("swk"))) ("kec")) ("qfj")) ("fxj")) ((Nil))
Prop: sub_check_ta1 (V ("tum")) (("ffz"::("rgs"::("vqu"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("tum"))) ("ffz")) ("rgs")) ("vqu")) ((Nil))
=================================================
Progress: 455


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:11.)
=================================================
Progress: 456


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("pau")) (("kyq"::("eqn"::("vmf"::(Nil))))) = true
Prop: sub_check_ta1 (V ("uuo")) (("icy"::("gfm"::("yzp"::(Nil))))) = true
Prop: sub_check_ta1 (V ("yzw")) (("xko"::("zux"::("xnm"::(Nil))))) = true
=================================================
Progress: 457


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:11.)
=================================================
Progress: 458


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("oly")) (("suo"::("zkp"::("kbg"::(Nil))))) = true
Prop: sub_check_ta1 (V ("dpq")) (("jyq"::("oqm"::("ztu"::(Nil))))) = true
Prop: sub_check_ta1 (V ("vfd")) (("ips"::("yua"::("nwq"::(Nil))))) = true
=================================================
Progress: 459


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 460


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ilh")) (("tma"::("hcq"::("ipo"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ilh"))) ("tma")) ("hcq")) ("ipo")) ((Nil))
Prop: sub_check_ta1 (V ("mew")) (("jqk"::("ncn"::("fmg"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("mew"))) ("jqk")) ("ncn")) ("fmg")) ((Nil))
Prop: sub_check_ta1 (P ("ito") (V ("dfo"))) (("tnq"::("ddk"::("eer"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P ("ito") (V ("dfo")))) ("tnq")) ("ddk")) ("eer")) ((Nil))
=================================================
Progress: 461


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ccz")) (("vhv"::("hid"::("wff"::(Nil))))) = true
Prop: sub_check_ta1 (V ("dxp")) (("eqk"::("kys"::("szi"::(Nil))))) = true
Prop: sub_check_ta1 (V ("yro")) (("ahc"::("bmt"::("fvw"::(Nil))))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("efx") (V ("rbq"))) (("yzc"::("obe"::("rmh"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P ("efx") (V ("rbq")))) ("yzc")) ("obe")) ("rmh")) ((Nil))
Prop: sub_check_ta1 (P ("rjd") (P ("yep") (V ("wwz")))) (("tfi"::("qps"::("jsk"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P ("rjd") (P ("yep") (V ("wwz"))))) ("tfi")) ("qps")) ("jsk")) ((Nil))
Prop: sub_check_ta1 (V ("rhf")) (("vkg"::("tjg"::("ltj"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("rhf"))) ("vkg")) ("tjg")) ("ltj")) ((Nil))
=================================================
Progress: 462


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("krg")) (("yir"::("rad"::("qzs"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("krg"))) ("yir")) ("rad")) ("qzs")) ((Nil))
Prop: sub_check_ta1 (V ("vgs")) (("tku"::("yjj"::("heg"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("vgs"))) ("tku")) ("yjj")) ("heg")) ((Nil))
Prop: sub_check_ta1 (C (V ("zns")) (V ("hti"))) (("mzu"::("zey"::("ynx"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (V ("zns")) (V ("hti")))) ("mzu")) ("zey")) ("ynx")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (C (P ("izh") (P ("rfv") (V ("mgq")))) (V ("vyf"))) (V ("qha"))) (("ztv"::("mgb"::("hkm"::(Nil))))) = true
Prop: sub_check_ta1 (P ("ssb") (V ("sdv"))) (("bgm"::("pma"::("xfn"::(Nil))))) = true
Prop: sub_check_ta1 (V ("tbp")) (("fie"::("xkf"::("zhu"::(Nil))))) = true
=================================================
Progress: 463


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("wzb") (V ("ltj"))) (("ayx"::("ziu"::("zrd"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P ("wzb") (V ("ltj")))) ("ayx")) ("ziu")) ("zrd")) ((Nil))
Prop: sub_check_ta1 (C (V ("nqe")) (C (V ("hdg")) (V ("pqo")))) (("hie"::("ktk"::("gyb"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (V ("nqe")) (C (V ("hdg")) (V ("pqo"))))) ("hie")) ("ktk")) ("gyb")) ((Nil))
Prop: sub_check_ta1 (V ("ssy")) (("elp"::("biu"::("rqy"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ssy"))) ("elp")) ("biu")) ("rqy")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("lvw")) (("pkp"::("svo"::("vmf"::(Nil))))) = true
Prop: sub_check_ta1 (P ("qkv") (V ("wfb"))) (("xoa"::("zqi"::("uav"::(Nil))))) = true
Prop: sub_check_ta1 (V ("ysq")) (("ory"::("oah"::("xcx"::(Nil))))) = true
=================================================
Progress: 464


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("lhl")) (("msu"::("lle"::("omv"::(Nil))))) = true
Prop: sub_check_ta1 (V ("dgc")) (("max"::("fhm"::("vub"::(Nil))))) = true
Prop: sub_check_ta1 (V ("hja")) (("guj"::("qdx"::("bgt"::(Nil))))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("nio")) (("sqf"::("kld"::("izh"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("nio"))) ("sqf")) ("kld")) ("izh")) ((Nil))
Prop: sub_check_ta1 (V ("wwi")) (("xnm"::("xfz"::("hes"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("wwi"))) ("xnm")) ("xfz")) ("hes")) ((Nil))
Prop: sub_check_ta1 (V ("qug")) (("gzd"::("xec"::("dtp"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("qug"))) ("gzd")) ("xec")) ("dtp")) ((Nil))
=================================================
Progress: 465


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 466


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 467


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 468


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 469


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 470


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 471


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 472


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 473


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 474


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 475


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 476


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 477


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 478


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 479


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 480


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 481


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 482


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 483


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 484


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 485


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 486


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 487


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 488


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 489


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 490


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 491


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 492


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 493


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 494


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 495


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 496


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 497


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 498


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 499


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 500


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 501


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 502


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 503


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 504


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 505


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 506


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 507


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 508


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 509


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 510


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 511


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 512


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 513


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 514


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 515


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 516


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 517


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 518


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 519


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 520


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 521


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 522


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 523


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 524


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 525


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 526


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 527


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 528


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 529


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 530


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 531


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 532


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 533


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 534


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 535


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 536


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 537


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 538


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 539


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 540


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 541


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 542


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 543


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 544


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 545


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 546


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 547


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 548


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 549


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 550


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 551


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 552


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 553


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 554


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 555


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 556


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
case string_eq (string3) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 557


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 558


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
case string_eq (string3) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 559


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 560


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
case string_eq (string3) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 561


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 562


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
case string_eq (string3) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 563


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 564


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
case string_eq (string3) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 565


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 566


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
case string_eq (string3) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 567


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 568


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
case string_eq (string3) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 569


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 570


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
case string_eq (string3) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 571


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 572


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
case string_eq (string4) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 573


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 574


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
case string_eq (string4) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 575


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 576


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
case string_eq (string4) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 577


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 578


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
case string_eq (string4) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 579


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 580


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
case string_eq (string4) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 581


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 582


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
case string_eq (string4) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 583


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 584


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 585


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 586


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 587


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 588


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 589


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 590


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 591


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 592


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 593


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 594


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 595


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 596


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 597


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 598


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 599


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 600


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 601


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 602


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 603


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 604


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 605


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 606


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 607


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 608


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 609


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 610


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12.)
=================================================
Progress: 611


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string3) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 612


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 613


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 614


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 615


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string3) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 616


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 617


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 618


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 619


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string3) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 620


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 621


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 622


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 623


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string3) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 624


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 625


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 626


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 627


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string3)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 628


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 629


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 630


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 631


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string3)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 632


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 633


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 634


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 635


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string3)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 636


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 637


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 638


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 639


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 640


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 641


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 642


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 643


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 644


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 645


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:13.)
=================================================
Progress: 646


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 647


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 648


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 649


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 650


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 651


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 652


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:13.)
=================================================
Progress: 653


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 654


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 655


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 656


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 657


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 658


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 659


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:13.)
=================================================
Progress: 660


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 661


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 662


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 663


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 664


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 665


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 666


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:13.)
=================================================
Progress: 667


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 668


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 669


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 670


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 671


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 672


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 673


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13.)
=================================================
Progress: 674


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 675


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 676


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 677


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 678


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 679


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 680


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13.)
=================================================
Progress: 681


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 682


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 683


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 684


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 685


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 686


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 687


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13.)
=================================================
Progress: 688


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 689


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 690


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 691


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 692


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 693


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 694


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 695


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 696


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 697


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 698


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 699


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 700


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 701


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 702


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 703


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 704


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 705


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 706


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 707


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 708


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 709


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 3(rank:28.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 710


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 711


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 712


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 713


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 714


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 18
Tactic List : 4
case string_eq (string3) (string2)(rank:12.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 715


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 716


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string3 = string2
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
=================================================
Progress: 717


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 718


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
=================================================
Progress: 719


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 720


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 721


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
case string_eq (string3) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 722


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 723


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 724


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 725


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string1) (string3)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 726


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 727


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 728


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 729


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 730


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 731


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 5
case string_eq (string3) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
=================================================
Progress: 732


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 733


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 734


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 735


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 736


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 737


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("pgk")) (("ayc"::("fsy"::("wfx"::(Nil))))) = true
Prop: sub_check_ta1 (V ("xxn")) (("icu"::("imp"::("vei"::(Nil))))) = true
Prop: sub_check_ta1 (V ("foq")) (("wnr"::("uyl"::("tdt"::(Nil))))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string3::(string2::(string1::(Nil))))
lower
Cons(_, Cons(string2, Cons(string1, Nil())))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
parent
deleteAll (listStation (lambda2)) (string3)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(deleteAll(_, string2), string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string3)
remove lower
deleteAll(listStation(lambda2), string3)
remove upper
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove lower
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ufw")) (("qng"::("bjm"::("llh"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ufw"))) ("qng")) ("bjm")) ("llh")) ((Nil))
Prop: sub_check_ta1 (V ("tqh")) (("xzq"::("iul"::("dzi"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("tqh"))) ("xzq")) ("iul")) ("dzi")) ((Nil))
Prop: sub_check_ta1 (C (V ("xzt")) (P ("tnf") (P ("upy") (V ("yvs"))))) (("yei"::("ckj"::("jyx"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (V ("xzt")) (P ("tnf") (P ("upy") (V ("yvs")))))) ("yei")) ("ckj")) ("jyx")) ((Nil))
=================================================
Progress: 738


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 739


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 3(rank:28.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 740


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 741


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 742


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 743


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 744


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 18
Tactic List : 4
case string_eq (string3) (string2)(rank:12.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 745


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 746


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string3 = string2
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
=================================================
Progress: 747


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 748


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
=================================================
Progress: 749


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 750


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 751


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
case string_eq (string3) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 752


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 753


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 754


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 755


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string1) (string3)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 756


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 757


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 758


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 759


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 760


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 761


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 5
case string_eq (string3) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
=================================================
Progress: 762


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 763


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 764


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 765


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 766


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 767


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("cvz")) (("mnn"::("jls"::("dko"::(Nil))))) = true
Prop: sub_check_ta1 (V ("ifa")) (("fua"::("sey"::("eou"::(Nil))))) = true
Prop: sub_check_ta1 (V ("tdj")) (("cte"::("zwt"::("nyd"::(Nil))))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string3::(string2::(string1::(Nil))))
lower
Cons(_, Cons(string2, Cons(string1, Nil())))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
parent
deleteAll (listStation (lambda2)) (string3)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(deleteAll(_, string2), string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string3)
remove lower
deleteAll(listStation(lambda2), string3)
remove upper
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove lower
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("cym")) (("lkx"::("bhu"::("oru"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("cym"))) ("lkx")) ("bhu")) ("oru")) ((Nil))
Prop: sub_check_ta1 (C (P ("sbs") (C (C (V ("wnq")) (V ("rla"))) (P ("pmi") (C (P ("yzc") (P ("mmk") (P ("zcj") (V ("jjd"))))) (V ("qtl")))))) (P ("uyl") (V ("xrf")))) (("knl"::("zyv"::("and"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (P ("sbs") (C (C (V ("wnq")) (V ("rla"))) (P ("pmi") (C (P ("yzc") (P ("mmk") (P ("zcj") (V ("jjd"))))) (V ("qtl")))))) (P ("uyl") (V ("xrf"))))) ("knl")) ("zyv")) ("and")) ((Nil))
Prop: sub_check_ta1 (C (C (V ("hpi")) (V ("ldj"))) (V ("vuk"))) (("ygy"::("yhp"::("vcu"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (C (V ("hpi")) (V ("ldj"))) (V ("vuk")))) ("ygy")) ("yhp")) ("vcu")) ((Nil))
=================================================
Progress: 768


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 769


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 3(rank:28.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 770


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 771


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 772


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 773


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 774


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 18
Tactic List : 4
case string_eq (string3) (string2)(rank:12.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 775


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 776


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string3 = string2
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
=================================================
Progress: 777


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 778


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
=================================================
Progress: 779


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 780


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 781


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
case string_eq (string3) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 782


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 783


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 784


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 785


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string1) (string3)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 786


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 787


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 788


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 789


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 790


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 791


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 5
case string_eq (string3) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
=================================================
Progress: 792


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 793


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 794


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 795


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:10.)
=================================================
Progress: 796


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 797


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 798


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("zio")) (("zba"::("tgo"::("job"::(Nil))))) = true
Prop: sub_check_ta1 (P ("kjy") (P ("kos") (V ("uxn")))) (("weg"::("hsn"::("dji"::(Nil))))) = true
Prop: sub_check_ta1 (V ("abs")) (("gxj"::("wjl"::("saz"::(Nil))))) = true
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("grq")) (("dik"::("nhu"::("rxy"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("grq"))) ("dik")) ("nhu")) ("rxy")) ((Nil))
Prop: sub_check_ta1 (V ("vsf")) (("dno"::("put"::("pfw"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("vsf"))) ("dno")) ("put")) ("pfw")) ((Nil))
Prop: sub_check_ta1 (V ("ege")) (("okg"::("udl"::("coe"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ege"))) ("okg")) ("udl")) ("coe")) ((Nil))
=================================================
Progress: 799


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 800


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 3(rank:28.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 801


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 802


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 803


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 804


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 805


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 18
Tactic List : 4
case string_eq (string3) (string2)(rank:12.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 806


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 807


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string3 = string2
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
=================================================
Progress: 808


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 809


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
=================================================
Progress: 810


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 811


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 812


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
case string_eq (string3) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 813


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 814


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 815


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 816


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string1) (string3)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 817


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 818


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 819


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 820


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 821


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 822


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 5
case string_eq (string3) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
=================================================
Progress: 823


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 824


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 825


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 826


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:10.)
=================================================
Progress: 827


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 828


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 829


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("cab")) (("cvp"::("ldi"::("pwb"::(Nil))))) = true
Prop: sub_check_ta1 (V ("lpe")) (("rlk"::("puz"::("rhd"::(Nil))))) = true
Prop: sub_check_ta1 (V ("snn")) (("qla"::("kzi"::("afc"::(Nil))))) = true
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("qga")) (("qtb"::("ykx"::("uwu"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("qga"))) ("qtb")) ("ykx")) ("uwu")) ((Nil))
Prop: sub_check_ta1 (V ("hmn")) (("sxe"::("ndl"::("mnf"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("hmn"))) ("sxe")) ("ndl")) ("mnf")) ((Nil))
Prop: sub_check_ta1 (V ("mpa")) (("gyp"::("qij"::("fjm"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("mpa"))) ("gyp")) ("qij")) ("fjm")) ((Nil))
=================================================
Progress: 830


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 831


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 3(rank:28.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 832


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 833


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 834


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 835


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 836


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
case string_eq (string4) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 837


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 838


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 839


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string3)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case3 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 1(rank:12.)
=================================================
Progress: 840


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 841


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 842


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 843


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 844


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 845


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 846


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 847


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 848


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 849


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 850


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 851


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 852


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 853


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 854


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 855


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 856


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 857


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 8
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
case string_eq (string4) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 858


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 859


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 860


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 861


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 862


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 863


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 864


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 865


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13.)
=================================================
Progress: 866


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 867


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 868


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 869


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 3(rank:28.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 870


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 871


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 872


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 873


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 874


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
case string_eq (string4) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 875


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 876


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 877


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string3)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case3 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 1(rank:12.)
=================================================
Progress: 878


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 879


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 880


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 881


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 882


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 883


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 884


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 885


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 886


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 887


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 888


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 889


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 890


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 891


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 892


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 893


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 894


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 895


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 8
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
case string_eq (string4) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 896


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 897


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 898


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 899


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 900


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 901


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 902


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 903


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13.)
=================================================
Progress: 904


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 905


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 906


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 907


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 3(rank:28.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 908


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 909


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 910


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 911


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 912


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
case string_eq (string4) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 913


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 914


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 915


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string3)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case3 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 1(rank:12.)
=================================================
Progress: 916


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 917


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 918


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 919


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 920


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 921


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 922


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 923


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 924


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 925


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 926


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 927


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 928


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 929


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 930


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 931


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 932


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 933


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 8
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
case string_eq (string4) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 934


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 935


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 936


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 937


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 938


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 939


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 940


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 941


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13.)
=================================================
Progress: 942


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 943


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 944


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 945


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 946


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:13.)
=================================================
Progress: 947


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:13.)
=================================================
Progress: 948


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 949


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 950


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:13.)
=================================================
Progress: 951


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:13.)
=================================================
Progress: 952


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 953


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 954


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:13.)
=================================================
Progress: 955


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:13.)
=================================================
Progress: 956


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 957


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 958


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 959


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 960


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 961


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 962


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 963


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 964


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 965


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 966


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 967


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 968


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 969


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case3 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 1(rank:12.)
=================================================
Progress: 970


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 971


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 972


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 973


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 974


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 975


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 976


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
case string_eq (string1) (string2)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 977


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 978


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 979


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:13.)
=================================================
Progress: 980


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 981


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 982


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 983


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 984


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
case string_eq (string4) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 985


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 986


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 987


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 988


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 989


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 990


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 991


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 992


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 993


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 994


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
case string_eq (string4) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 995


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 996


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
case string_eq (string4) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 997


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 998


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 999


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1000


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1001


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case4 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 1(rank:12.)
=================================================
Progress: 1002


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case4 in goal at 2(rank:28.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 1003


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1004


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12.)
rewrite Case4 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 1005


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1006


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1007


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1008


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1009


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1010


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1011


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 1012


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 1013


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 1014


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1015


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 1016


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
case string_eq (string4) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 1017


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1018


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1019


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1020


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12.)
rewrite Case4 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 1021


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1022


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1023


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1024


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 1025


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 1026


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 1027


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1028


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 1029


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 1030


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:13.)
=================================================
Progress: 1031


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1032


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case3 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 1(rank:12.)
=================================================
Progress: 1033


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1034


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1035


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1036


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1037


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 1038


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1039


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
case string_eq (string1) (string2)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1040


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1041


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1042


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:13.)
=================================================
Progress: 1043


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1044


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 1045


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1046


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 1047


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
case string_eq (string4) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 1048


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 1049


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 1050


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1051


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 1052


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1053


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1054


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1055


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1056


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1057


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
case string_eq (string4) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 1058


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1059


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
case string_eq (string4) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 1060


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1061


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1062


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1063


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1064


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case4 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 1(rank:12.)
=================================================
Progress: 1065


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case4 in goal at 2(rank:28.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 1066


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1067


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12.)
rewrite Case4 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 1068


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1069


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1070


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1071


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1072


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1073


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1074


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 1075


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 1076


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 1077


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1078


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 1079


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
case string_eq (string4) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 1080


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1081


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1082


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1083


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12.)
rewrite Case4 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 1084


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1085


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1086


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1087


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 1088


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 1089


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 1090


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1091


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 1092


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 1093


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:13.)
=================================================
Progress: 1094


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1095


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case3 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 1(rank:12.)
=================================================
Progress: 1096


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1097


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1098


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1099


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1100


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 1101


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1102


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
case string_eq (string1) (string2)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1103


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1104


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1105


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:13.)
=================================================
Progress: 1106


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1107


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 1108


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1109


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 1110


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
case string_eq (string4) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 1111


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 1112


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12.)
=================================================
Progress: 1113


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1114


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 1115


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1116


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1117


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1118


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1119


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1120


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
case string_eq (string4) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 1121


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1122


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
case string_eq (string4) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 1123


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1124


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1125


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1126


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1127


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case4 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 1(rank:12.)
=================================================
Progress: 1128


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case4 in goal at 2(rank:28.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 1129


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1130


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12.)
rewrite Case4 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 1131


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1132


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1133


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1134


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1135


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1136


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1137


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 1138


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 1139


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 1140


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1141


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 1142


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
case string_eq (string4) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 1143


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1144


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1145


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1146


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12.)
rewrite Case4 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 1147


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1148


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1149


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1150


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 1151


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 1152


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 1153


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1154


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 1155


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 1156


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:13.)
=================================================
Progress: 1157


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1158


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1159


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1160


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1161


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1162


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1163


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1164


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1165


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:14.)
case string_eq (string4) (string3)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1166


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1167


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1168


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:14.)
case string_eq (string4) (string3)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1169


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1170


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1171


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1172


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1173


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1174


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1175


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 33
Tactic List : 5
case string_eq (string4) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
=================================================
Progress: 1176


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string_eq (string4) (string3) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1177


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string_eq (string4) (string3) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string4 = string3
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
=================================================
Progress: 1178


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1179


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
rewrite Case4 in goal at 2(rank:28.)
rewrite Case4 in goal at 3(rank:28.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1180


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1181


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1182


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1183


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1184


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 18
Tactic List : 6
case string_eq (string4) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
rewrite <- Case4 in goal at 0(rank:19.)
=================================================
Progress: 1185


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12.)
=================================================
Progress: 1186


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string4 = string2
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 1187


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1188


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
rewrite <- Case5 in goal at 0(rank:28.)
=================================================
Progress: 1189


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1190


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 1191


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
case string_eq (string4) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 1192


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12.)
=================================================
Progress: 1193


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12.)
=================================================
Progress: 1194


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case5 in goal at 0(rank:12.)
rewrite <- Case5 in goal at 1(rank:12.)
rewrite Case5 in goal at 0(rank:28.)
rewrite Case5 in goal at 1(rank:28.)
rewrite Case5 in goal at 2(rank:28.)
rewrite Case5 in goal at 3(rank:28.)
rewrite <- Case5 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1195


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case5 in goal at 0(rank:12.)
rewrite Case5 in goal at 2(rank:28.)
case string_eq (string1) (string4)(rank:13.)
rewrite Case5 in goal at 0(rank:28.)
rewrite Case5 in goal at 1(rank:28.)
=================================================
Progress: 1196


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1197


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1198


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1199


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1200


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1201


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 7
case string_eq (string4) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
rewrite <- Case4 in goal at 0(rank:19.)
rewrite <- Case5 in goal at 0(rank:19.)
=================================================
Progress: 1202


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1203


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 1204


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 92
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1205


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 1206


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1207


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("yvx")) (("ibn"::("qit"::("rwk"::("bfe"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("dkd")) (("udk"::("vkg"::("ghs"::("ktk"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("osi")) (("qjb"::("igq"::("hup"::("jgq"::(Nil)))))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string4::(string3::(string2::(string1::(Nil)))))
lower
Cons(_, Cons(string3, Cons(string2, Cons(string1, Nil()))))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove upper
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
remove lower
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
parent
deleteAll (listStation (lambda2)) (string4)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(deleteAll(deleteAll(_, string3), string2), string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string4)
remove lower
deleteAll(listStation(lambda2), string4)
remove upper
deleteAll(deleteAll(listStation(lambda3), string5), string4)
remove lower
deleteAll(deleteAll(listStation(lambda3), string5), string4)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string6), string5), string4)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string6), string5), string4)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("pid")) (("ngf"::("cyc"::("clb"::("hgv"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("pid"))) ("ngf")) ("cyc")) ("clb")) ("hgv")) ((Nil))
Prop: sub_check_ta1 (V ("agp")) (("nxb"::("vxy"::("usi"::("fmd"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("agp"))) ("nxb")) ("vxy")) ("usi")) ("fmd")) ((Nil))
Prop: sub_check_ta1 (V ("uou")) (("ewt"::("uwv"::("etx"::("ntx"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("uou"))) ("ewt")) ("uwv")) ("etx")) ("ntx")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 1208


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 1209


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 1210


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1211


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro string2(rank:11.)
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1212


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1213


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1214


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1215


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1216


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro string2(rank:11.)
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1217


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1218


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1219


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1220


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 1221


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1222


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1223


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1224


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1225


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1226


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1227


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 1228


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1229


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1230


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1231


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1232


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1233


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1234


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 1235


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1236


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1237


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1238


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1239


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1240


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1241


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1242


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 1243


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1244


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1245


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1246


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1247


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1248


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1249


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1250


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string4(rank:11.)
=================================================
Progress: 1251


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1252


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 1253


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string4(rank:11.)
=================================================
Progress: 1254


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 1255


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 1256


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string4(rank:11.)
=================================================
Progress: 1257


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1258


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 1259


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string4(rank:11.)
=================================================
Progress: 1260


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 1261


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 1262


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1263


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1264


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1265


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1266


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1267


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1268


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1269


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1270


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1271


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1272


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 1273


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("cdf")) (("oai"::("qqu"::("bmw"::("ule"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("cdf"))) ("oai")) ("qqu")) ("bmw")) ("ule")) ((Nil))
Prop: sub_check_ta1 (P ("emh") (V ("yqh"))) (("wia"::("wrd"::("jny"::("ipj"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("emh") (V ("yqh")))) ("wia")) ("wrd")) ("jny")) ("ipj")) ((Nil))
Prop: sub_check_ta1 (V ("pia")) (("llo"::("own"::("qfl"::("lxz"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("pia"))) ("llo")) ("own")) ("qfl")) ("lxz")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1274


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:13.)
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
intro string1(rank:13.)
=================================================
Progress: 1275


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("pmr")) (("yuc"::("bfh"::("okq"::("rql"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("pmr"))) ("yuc")) ("bfh")) ("okq")) ("rql")) ((Nil))
Prop: sub_check_ta1 (V ("caw")) (("cos"::("hmd"::("jax"::("wgb"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("caw"))) ("cos")) ("hmd")) ("jax")) ("wgb")) ((Nil))
Prop: sub_check_ta1 (V ("rxp")) (("zsj"::("iqo"::("hpy"::("qix"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("rxp"))) ("zsj")) ("iqo")) ("hpy")) ("qix")) ((Nil))
=================================================
Progress: 1276


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("nzr") (V ("pke"))) (("zkr"::("csm"::("epl"::("fts"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("nzr") (V ("pke")))) ("zkr")) ("csm")) ("epl")) ("fts")) ((Nil))
Prop: sub_check_ta1 (P ("glj") (V ("vmd"))) (("nxq"::("agk"::("grv"::("nue"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("glj") (V ("vmd")))) ("nxq")) ("agk")) ("grv")) ("nue")) ((Nil))
Prop: sub_check_ta1 (V ("rtj")) (("bit"::("tgs"::("gke"::("isp"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("rtj"))) ("bit")) ("tgs")) ("gke")) ("isp")) ((Nil))
=================================================
Progress: 1277


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("hpy")) (("xcj"::("kvq"::("kil"::("trn"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("hpy"))) ("xcj")) ("kvq")) ("kil")) ("trn")) ((Nil))
Prop: sub_check_ta1 (P ("tuc") (P ("qqc") (V ("aue")))) (("cmn"::("nzw"::("wlb"::("pll"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("tuc") (P ("qqc") (V ("aue"))))) ("cmn")) ("nzw")) ("wlb")) ("pll")) ((Nil))
Prop: sub_check_ta1 (V ("gke")) (("hjj"::("cyc"::("gak"::("ymi"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("gke"))) ("hjj")) ("cyc")) ("gak")) ("ymi")) ((Nil))
=================================================
Progress: 1278


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:11.)
=================================================
Progress: 1279


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("boo") (V ("epj"))) (("kik"::("ted"::("psf"::("mxc"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("gvp")) (("efj"::("zkl"::("gda"::("eqk"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("kvk")) (("rld"::("duf"::("rke"::("jir"::(Nil)))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1280


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:13.)
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
intro string1(rank:13.)
=================================================
Progress: 1281


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("nvq")) (("ahj"::("nac"::("imd"::("riz"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("gga")) (("uiy"::("qhr"::("niw"::("qay"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("wha")) (("pcm"::("thk"::("rcr"::("zbm"::(Nil)))))) = true
=================================================
Progress: 1282


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (P ("cly") (V ("nio"))) (V ("gsl"))) (("jlr"::("slb"::("gtk"::("uut"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("yng")) (("cjx"::("jqo"::("ugk"::("shi"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("gyp")) (("hgo"::("kev"::("ylc"::("lcv"::(Nil)))))) = true
=================================================
Progress: 1283


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (P ("fyb") (C (V ("gue")) (V ("kco")))) (V ("juu"))) (("bjm"::("dkj"::("zmk"::("idr"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("dun")) (("qzs"::("qwl"::("taz"::("lkp"::(Nil)))))) = true
Prop: sub_check_ta1 (P ("era") (V ("ruw"))) (("ppj"::("jqd"::("uts"::("bfh"::(Nil)))))) = true
=================================================
Progress: 1284


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("wzm")) (("yhe"::("tuz"::("qcs"::("crs"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("rxa")) (("eig"::("std"::("lhb"::("myl"::(Nil)))))) = true
Prop: sub_check_ta1 (C (P ("nwx") (V ("afn"))) (V ("mws"))) (("nix"::("fys"::("qco"::("ffv"::(Nil)))))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("xex")) (("het"::("oxb"::("wow"::("qxs"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("xex"))) ("het")) ("oxb")) ("wow")) ("qxs")) ((Nil))
Prop: sub_check_ta1 (V ("uxh")) (("vir"::("ikp"::("ndo"::("xgq"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("uxh"))) ("vir")) ("ikp")) ("ndo")) ("xgq")) ((Nil))
Prop: sub_check_ta1 (V ("bxn")) (("inj"::("lcw"::("tmj"::("nmm"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("bxn"))) ("inj")) ("lcw")) ("tmj")) ("nmm")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1285


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:13.)
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
intro string1(rank:13.)
=================================================
Progress: 1286


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("fxy")) (("fje"::("cla"::("dmt"::("yiy"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("fxy"))) ("fje")) ("cla")) ("dmt")) ("yiy")) ((Nil))
Prop: sub_check_ta1 (V ("mnw")) (("yml"::("yyj"::("xts"::("egz"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("mnw"))) ("yml")) ("yyj")) ("xts")) ("egz")) ((Nil))
Prop: sub_check_ta1 (V ("mol")) (("fyd"::("csp"::("ido"::("yfw"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("mol"))) ("fyd")) ("csp")) ("ido")) ("yfw")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("oti") (V ("mdy"))) (("fwn"::("inl"::("rio"::("ypn"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("ngm")) (("xfh"::("bii"::("oqr"::("rye"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("mvr")) (("nyh"::("weh"::("bcc"::("ciw"::(Nil)))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1287


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:13.)
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
intro string1(rank:13.)
=================================================
Progress: 1288


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1289


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1290


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1291


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1292


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1293


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1294


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 33
Tactic List : 5
case string_eq (string4) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
=================================================
Progress: 1295


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string_eq (string4) (string3) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12.)
=================================================
Progress: 1296


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string_eq (string4) (string3) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string4 = string3
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
=================================================
Progress: 1297


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1298


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
rewrite Case4 in goal at 2(rank:28.)
rewrite Case4 in goal at 3(rank:28.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1299


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1300


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1301


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1302


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1303


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 18
Tactic List : 6
case string_eq (string4) (string2)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
rewrite <- Case4 in goal at 0(rank:19.)
=================================================
Progress: 1304


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12.)
=================================================
Progress: 1305


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string4 = string2
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 1306


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1307


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
rewrite <- Case5 in goal at 0(rank:28.)
=================================================
Progress: 1308


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1309


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 1310


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
case string_eq (string4) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 1311


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12.)
=================================================
Progress: 1312


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12.)
=================================================
Progress: 1313


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case5 in goal at 0(rank:12.)
rewrite <- Case5 in goal at 1(rank:12.)
rewrite Case5 in goal at 0(rank:28.)
rewrite Case5 in goal at 1(rank:28.)
rewrite Case5 in goal at 2(rank:28.)
rewrite Case5 in goal at 3(rank:28.)
rewrite <- Case5 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1314


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case5 in goal at 0(rank:12.)
rewrite Case5 in goal at 2(rank:28.)
case string_eq (string1) (string4)(rank:13.)
rewrite Case5 in goal at 0(rank:28.)
rewrite Case5 in goal at 1(rank:28.)
=================================================
Progress: 1315


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1316


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1317


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1318


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1319


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1320


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 7
case string_eq (string4) (string1)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
rewrite <- Case4 in goal at 0(rank:19.)
rewrite <- Case5 in goal at 0(rank:19.)
=================================================
Progress: 1321


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1322


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 1323


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 92
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1324


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:10.)
=================================================
Progress: 1325


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 1326


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1327


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string2
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("hmz")) (("vut"::("vbl"::("ejn"::("xtq"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("oyf")) (("vtv"::("auj"::("waz"::("eqt"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("kob")) (("swe"::("lhv"::("tzs"::("plb"::(Nil)))))) = true
previous tactics
simpl in goal
intro string2
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("con")) (("vim"::("xes"::("iuf"::("ncg"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("con"))) ("vim")) ("xes")) ("iuf")) ("ncg")) ((Nil))
Prop: sub_check_ta1 (V ("zdx")) (("opy"::("ptb"::("vvh"::("cra"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("zdx"))) ("opy")) ("ptb")) ("vvh")) ("cra")) ((Nil))
Prop: sub_check_ta1 (V ("elg")) (("sab"::("utw"::("etn"::("ver"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("elg"))) ("sab")) ("utw")) ("etn")) ("ver")) ((Nil))
=================================================
Progress: 1328


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1329


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1330


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1331


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1332


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
